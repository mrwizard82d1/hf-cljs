if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__5279__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__5278 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5278) : cljs.core.into_array.call(null, G__5278);
      }());
    };
    var G__5279 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__5280__i = 0, G__5280__a = new Array(arguments.length - 0);
        while (G__5280__i < G__5280__a.length) {
          G__5280__a[G__5280__i] = arguments[G__5280__i + 0];
          ++G__5280__i;
        }
        args = new cljs.core.IndexedSeq(G__5280__a, 0);
      }
      return G__5279__delegate.call(this, args);
    };
    G__5279.cljs$lang$maxFixedArity = 0;
    G__5279.cljs$lang$applyTo = function(arglist__5281) {
      var args = cljs.core.seq(arglist__5281);
      return G__5279__delegate(args);
    };
    G__5279.cljs$core$IFn$_invoke$arity$variadic = G__5279__delegate;
    return G__5279;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__5283 = x;
  return goog.isString(G__5283);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__5285 = x__$1;
    return goog.typeOf(G__5285);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3764__auto__ = ty;
    if (cljs.core.truth_(and__3764__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3764__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__5287 = obj;
    return goog.typeOf(G__5287);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__5289 = Symbol;
  return goog.typeOf(G__5289);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4663__auto___5291 = len;
  var i_5292 = 0;
  while (true) {
    if (i_5292 < n__4663__auto___5291) {
      new_arr[i_5292] = arr[i_5292];
      var G__5293 = i_5292 + 1;
      i_5292 = G__5293;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__5294 = i + 1;
      i = G__5294;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__5303__delegate = function(array, i, idxs) {
      var G__5300 = aget;
      var G__5301 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__5302 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5300, G__5301, G__5302) : cljs.core.apply.call(null, G__5300, G__5301, G__5302);
    };
    var G__5303 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__5304__i = 0, G__5304__a = new Array(arguments.length - 2);
        while (G__5304__i < G__5304__a.length) {
          G__5304__a[G__5304__i] = arguments[G__5304__i + 2];
          ++G__5304__i;
        }
        idxs = new cljs.core.IndexedSeq(G__5304__a, 0);
      }
      return G__5303__delegate.call(this, array, i, idxs);
    };
    G__5303.cljs$lang$maxFixedArity = 2;
    G__5303.cljs$lang$applyTo = function(arglist__5305) {
      var array = cljs.core.first(arglist__5305);
      arglist__5305 = cljs.core.next(arglist__5305);
      var i = cljs.core.first(arglist__5305);
      var idxs = cljs.core.rest(arglist__5305);
      return G__5303__delegate(array, i, idxs);
    };
    G__5303.cljs$core$IFn$_invoke$arity$variadic = G__5303__delegate;
    return G__5303;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__5306 = null;
        if (arguments.length > 2) {
          var G__5307__i = 0, G__5307__a = new Array(arguments.length - 2);
          while (G__5307__i < G__5307__a.length) {
            G__5307__a[G__5307__i] = arguments[G__5307__i + 2];
            ++G__5307__i;
          }
          G__5306 = new cljs.core.IndexedSeq(G__5307__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__5306);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__5316__delegate = function(array, idx, idx2, idxv) {
      var G__5312 = aset;
      var G__5313 = array[idx];
      var G__5314 = idx2;
      var G__5315 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5312, G__5313, G__5314, G__5315) : cljs.core.apply.call(null, G__5312, G__5313, G__5314, G__5315);
    };
    var G__5316 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__5317__i = 0, G__5317__a = new Array(arguments.length - 3);
        while (G__5317__i < G__5317__a.length) {
          G__5317__a[G__5317__i] = arguments[G__5317__i + 3];
          ++G__5317__i;
        }
        idxv = new cljs.core.IndexedSeq(G__5317__a, 0);
      }
      return G__5316__delegate.call(this, array, idx, idx2, idxv);
    };
    G__5316.cljs$lang$maxFixedArity = 3;
    G__5316.cljs$lang$applyTo = function(arglist__5318) {
      var array = cljs.core.first(arglist__5318);
      arglist__5318 = cljs.core.next(arglist__5318);
      var idx = cljs.core.first(arglist__5318);
      arglist__5318 = cljs.core.next(arglist__5318);
      var idx2 = cljs.core.first(arglist__5318);
      var idxv = cljs.core.rest(arglist__5318);
      return G__5316__delegate(array, idx, idx2, idxv);
    };
    G__5316.cljs$core$IFn$_invoke$arity$variadic = G__5316__delegate;
    return G__5316;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__5319 = null;
        if (arguments.length > 3) {
          var G__5320__i = 0, G__5320__a = new Array(arguments.length - 3);
          while (G__5320__i < G__5320__a.length) {
            G__5320__a[G__5320__i] = arguments[G__5320__i + 3];
            ++G__5320__i;
          }
          G__5319 = new cljs.core.IndexedSeq(G__5320__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__5319);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__5326 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__5327 = [];
    var G__5328 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5326, G__5327, G__5328) : cljs.core.reduce.call(null, G__5326, G__5327, G__5328);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__5329__i = 0, G__5329__a = new Array(arguments.length - 2);
      while (G__5329__i < G__5329__a.length) {
        G__5329__a[G__5329__i] = arguments[G__5329__i + 2];
        ++G__5329__i;
      }
      args = new cljs.core.IndexedSeq(G__5329__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__5330) {
    var obj = cljs.core.first(arglist__5330);
    arglist__5330 = cljs.core.next(arglist__5330);
    var s = cljs.core.first(arglist__5330);
    var args = cljs.core.rest(arglist__5330);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj5332 = {};
  return obj5332;
}();
cljs.core.IFn = function() {
  var obj5334 = {};
  return obj5334;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5380 = x__4420__auto__;
          return goog.typeOf(G__5380);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5382 = x__4420__auto__;
          return goog.typeOf(G__5382);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5384 = x__4420__auto__;
          return goog.typeOf(G__5384);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5386 = x__4420__auto__;
          return goog.typeOf(G__5386);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5388 = x__4420__auto__;
          return goog.typeOf(G__5388);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5390 = x__4420__auto__;
          return goog.typeOf(G__5390);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5392 = x__4420__auto__;
          return goog.typeOf(G__5392);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5394 = x__4420__auto__;
          return goog.typeOf(G__5394);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5396 = x__4420__auto__;
          return goog.typeOf(G__5396);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5398 = x__4420__auto__;
          return goog.typeOf(G__5398);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5400 = x__4420__auto__;
          return goog.typeOf(G__5400);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5402 = x__4420__auto__;
          return goog.typeOf(G__5402);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5404 = x__4420__auto__;
          return goog.typeOf(G__5404);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5406 = x__4420__auto__;
          return goog.typeOf(G__5406);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5408 = x__4420__auto__;
          return goog.typeOf(G__5408);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5410 = x__4420__auto__;
          return goog.typeOf(G__5410);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5412 = x__4420__auto__;
          return goog.typeOf(G__5412);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5414 = x__4420__auto__;
          return goog.typeOf(G__5414);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5416 = x__4420__auto__;
          return goog.typeOf(G__5416);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5418 = x__4420__auto__;
          return goog.typeOf(G__5418);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5420 = x__4420__auto__;
          return goog.typeOf(G__5420);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3764__auto__ = this$;
      if (and__3764__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4420__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3776__auto__ = cljs.core._invoke[function() {
          var G__5422 = x__4420__auto__;
          return goog.typeOf(G__5422);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._invoke["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj5424 = {};
  return obj5424;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3764__auto__ = value;
    if (and__3764__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4420__auto__ = value == null ? null : value;
    return function() {
      var or__3776__auto__ = cljs.core._clone[function() {
        var G__5428 = x__4420__auto__;
        return goog.typeOf(G__5428);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._clone["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj5430 = {};
  return obj5430;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._count[function() {
        var G__5434 = x__4420__auto__;
        return goog.typeOf(G__5434);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._count["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj5436 = {};
  return obj5436;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._empty[function() {
        var G__5440 = x__4420__auto__;
        return goog.typeOf(G__5440);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._empty["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj5442 = {};
  return obj5442;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._conj[function() {
        var G__5446 = x__4420__auto__;
        return goog.typeOf(G__5446);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._conj["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj5448 = {};
  return obj5448;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._nth[function() {
          var G__5454 = x__4420__auto__;
          return goog.typeOf(G__5454);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._nth["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._nth[function() {
          var G__5456 = x__4420__auto__;
          return goog.typeOf(G__5456);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._nth["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj5458 = {};
  return obj5458;
}();
cljs.core.ISeq = function() {
  var obj5460 = {};
  return obj5460;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._first[function() {
        var G__5464 = x__4420__auto__;
        return goog.typeOf(G__5464);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._first["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._rest[function() {
        var G__5468 = x__4420__auto__;
        return goog.typeOf(G__5468);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._rest["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj5470 = {};
  return obj5470;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._next[function() {
        var G__5474 = x__4420__auto__;
        return goog.typeOf(G__5474);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._next["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj5476 = {};
  return obj5476;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._lookup[function() {
          var G__5482 = x__4420__auto__;
          return goog.typeOf(G__5482);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._lookup["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._lookup[function() {
          var G__5484 = x__4420__auto__;
          return goog.typeOf(G__5484);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._lookup["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj5486 = {};
  return obj5486;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__5490 = x__4420__auto__;
        return goog.typeOf(G__5490);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc[function() {
        var G__5494 = x__4420__auto__;
        return goog.typeOf(G__5494);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj5496 = {};
  return obj5496;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._dissoc[function() {
        var G__5500 = x__4420__auto__;
        return goog.typeOf(G__5500);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._dissoc["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj5502 = {};
  return obj5502;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._key[function() {
        var G__5506 = x__4420__auto__;
        return goog.typeOf(G__5506);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._key["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._val[function() {
        var G__5510 = x__4420__auto__;
        return goog.typeOf(G__5510);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._val["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj5512 = {};
  return obj5512;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._disjoin[function() {
        var G__5516 = x__4420__auto__;
        return goog.typeOf(G__5516);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._disjoin["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj5518 = {};
  return obj5518;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._peek[function() {
        var G__5522 = x__4420__auto__;
        return goog.typeOf(G__5522);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._peek["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._pop[function() {
        var G__5526 = x__4420__auto__;
        return goog.typeOf(G__5526);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._pop["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj5528 = {};
  return obj5528;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc_n[function() {
        var G__5532 = x__4420__auto__;
        return goog.typeOf(G__5532);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj5534 = {};
  return obj5534;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._deref[function() {
        var G__5538 = x__4420__auto__;
        return goog.typeOf(G__5538);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._deref["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj5540 = {};
  return obj5540;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._deref_with_timeout[function() {
        var G__5544 = x__4420__auto__;
        return goog.typeOf(G__5544);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj5546 = {};
  return obj5546;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._meta[function() {
        var G__5550 = x__4420__auto__;
        return goog.typeOf(G__5550);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._meta["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj5552 = {};
  return obj5552;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._with_meta[function() {
        var G__5556 = x__4420__auto__;
        return goog.typeOf(G__5556);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._with_meta["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj5558 = {};
  return obj5558;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._reduce[function() {
          var G__5564 = x__4420__auto__;
          return goog.typeOf(G__5564);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._reduce["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3764__auto__ = coll;
      if (and__3764__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4420__auto__ = coll == null ? null : coll;
      return function() {
        var or__3776__auto__ = cljs.core._reduce[function() {
          var G__5566 = x__4420__auto__;
          return goog.typeOf(G__5566);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._reduce["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj5568 = {};
  return obj5568;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._kv_reduce[function() {
        var G__5572 = x__4420__auto__;
        return goog.typeOf(G__5572);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj5574 = {};
  return obj5574;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._equiv[function() {
        var G__5578 = x__4420__auto__;
        return goog.typeOf(G__5578);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._equiv["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj5580 = {};
  return obj5580;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._hash[function() {
        var G__5584 = x__4420__auto__;
        return goog.typeOf(G__5584);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._hash["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj5586 = {};
  return obj5586;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._seq[function() {
        var G__5590 = x__4420__auto__;
        return goog.typeOf(G__5590);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._seq["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj5592 = {};
  return obj5592;
}();
cljs.core.IList = function() {
  var obj5594 = {};
  return obj5594;
}();
cljs.core.IRecord = function() {
  var obj5596 = {};
  return obj5596;
}();
cljs.core.IReversible = function() {
  var obj5598 = {};
  return obj5598;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._rseq[function() {
        var G__5602 = x__4420__auto__;
        return goog.typeOf(G__5602);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._rseq["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj5604 = {};
  return obj5604;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._sorted_seq[function() {
        var G__5608 = x__4420__auto__;
        return goog.typeOf(G__5608);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._sorted_seq_from[function() {
        var G__5612 = x__4420__auto__;
        return goog.typeOf(G__5612);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._entry_key[function() {
        var G__5616 = x__4420__auto__;
        return goog.typeOf(G__5616);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._entry_key["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._comparator[function() {
        var G__5620 = x__4420__auto__;
        return goog.typeOf(G__5620);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._comparator["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj5622 = {};
  return obj5622;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3764__auto__ = writer;
    if (and__3764__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4420__auto__ = writer == null ? null : writer;
    return function() {
      var or__3776__auto__ = cljs.core._write[function() {
        var G__5626 = x__4420__auto__;
        return goog.typeOf(G__5626);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._write["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3764__auto__ = writer;
    if (and__3764__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4420__auto__ = writer == null ? null : writer;
    return function() {
      var or__3776__auto__ = cljs.core._flush[function() {
        var G__5630 = x__4420__auto__;
        return goog.typeOf(G__5630);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._flush["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj5632 = {};
  return obj5632;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._pr_writer[function() {
        var G__5636 = x__4420__auto__;
        return goog.typeOf(G__5636);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj5638 = {};
  return obj5638;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3764__auto__ = d;
    if (and__3764__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4420__auto__ = d == null ? null : d;
    return function() {
      var or__3776__auto__ = cljs.core._realized_QMARK_[function() {
        var G__5642 = x__4420__auto__;
        return goog.typeOf(G__5642);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj5644 = {};
  return obj5644;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = cljs.core._notify_watches[function() {
        var G__5648 = x__4420__auto__;
        return goog.typeOf(G__5648);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = cljs.core._add_watch[function() {
        var G__5652 = x__4420__auto__;
        return goog.typeOf(G__5652);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._add_watch["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3764__auto__ = this$;
    if (and__3764__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4420__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3776__auto__ = cljs.core._remove_watch[function() {
        var G__5656 = x__4420__auto__;
        return goog.typeOf(G__5656);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj5658 = {};
  return obj5658;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._as_transient[function() {
        var G__5662 = x__4420__auto__;
        return goog.typeOf(G__5662);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._as_transient["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj5664 = {};
  return obj5664;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._conj_BANG_[function() {
        var G__5668 = x__4420__auto__;
        return goog.typeOf(G__5668);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._persistent_BANG_[function() {
        var G__5672 = x__4420__auto__;
        return goog.typeOf(G__5672);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj5674 = {};
  return obj5674;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc_BANG_[function() {
        var G__5678 = x__4420__auto__;
        return goog.typeOf(G__5678);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj5680 = {};
  return obj5680;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__5684 = x__4420__auto__;
        return goog.typeOf(G__5684);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj5686 = {};
  return obj5686;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__5690 = x__4420__auto__;
        return goog.typeOf(G__5690);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._pop_BANG_[function() {
        var G__5694 = x__4420__auto__;
        return goog.typeOf(G__5694);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj5696 = {};
  return obj5696;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3764__auto__ = tcoll;
    if (and__3764__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4420__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3776__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__5700 = x__4420__auto__;
        return goog.typeOf(G__5700);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj5702 = {};
  return obj5702;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._compare[function() {
        var G__5706 = x__4420__auto__;
        return goog.typeOf(G__5706);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._compare["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj5708 = {};
  return obj5708;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._drop_first[function() {
        var G__5712 = x__4420__auto__;
        return goog.typeOf(G__5712);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._drop_first["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj5714 = {};
  return obj5714;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._chunked_first[function() {
        var G__5718 = x__4420__auto__;
        return goog.typeOf(G__5718);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._chunked_rest[function() {
        var G__5722 = x__4420__auto__;
        return goog.typeOf(G__5722);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj5724 = {};
  return obj5724;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._chunked_next[function() {
        var G__5728 = x__4420__auto__;
        return goog.typeOf(G__5728);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj5730 = {};
  return obj5730;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._name[function() {
        var G__5734 = x__4420__auto__;
        return goog.typeOf(G__5734);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._name["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._namespace[function() {
        var G__5738 = x__4420__auto__;
        return goog.typeOf(G__5738);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._namespace["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj5740 = {};
  return obj5740;
}();
cljs.core.IReset = function() {
  var obj5742 = {};
  return obj5742;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._reset_BANG_[function() {
        var G__5746 = x__4420__auto__;
        return goog.typeOf(G__5746);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj5748 = {};
  return obj5748;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__5758 = x__4420__auto__;
          return goog.typeOf(G__5758);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__5760 = x__4420__auto__;
          return goog.typeOf(G__5760);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__5762 = x__4420__auto__;
          return goog.typeOf(G__5762);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3764__auto__ = o;
      if (and__3764__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3764__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4420__auto__ = o == null ? null : o;
      return function() {
        var or__3776__auto__ = cljs.core._swap_BANG_[function() {
          var G__5764 = x__4420__auto__;
          return goog.typeOf(G__5764);
        }()];
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3776__auto____$1) {
            return or__3776__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj5766 = {};
  return obj5766;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3764__auto__ = o;
    if (and__3764__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4420__auto__ = o == null ? null : o;
    return function() {
      var or__3776__auto__ = cljs.core._vreset_BANG_[function() {
        var G__5770 = x__4420__auto__;
        return goog.typeOf(G__5770);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj5772 = {};
  return obj5772;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3764__auto__ = coll;
    if (and__3764__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4420__auto__ = coll == null ? null : coll;
    return function() {
      var or__3776__auto__ = cljs.core._iterator[function() {
        var G__5776 = x__4420__auto__;
        return goog.typeOf(G__5776);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._iterator["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__5779 = 4294967295;
  var G__5780 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5779, G__5780) : Math.imul.call(null, G__5779, G__5780);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__5783 = a;
    var G__5784 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5783, G__5784) : Math.imul.call(null, G__5783, G__5784);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__5785 = i + 2;
        var G__5786 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__5785;
        h1 = G__5786;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj5788 = {};
  return obj5788;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__5789 = i + 1;
          var G__5790 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__5789;
          hash = G__5790;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj5794 = {};
      return obj5794;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__5797 = o;
    if (G__5797) {
      var bit__4450__auto__ = G__5797.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4450__auto__ || G__5797.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__5798 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5798) : Math.floor.call(null, G__5798);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = cljs.core.not(a.ns);
      if (and__3764__auto__) {
        return b.ns;
      } else {
        return and__3764__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__5805 = a.ns;
            var G__5806 = b.ns;
            return goog.array.defaultCompare(G__5805, G__5806);
          }();
          if (0 === nsc) {
            var G__5807 = a.name;
            var G__5808 = b.name;
            return goog.array.defaultCompare(G__5807, G__5808);
          } else {
            return nsc;
          }
        }
      } else {
        var G__5809 = a.name;
        var G__5810 = b.name;
        return goog.array.defaultCompare(G__5809, G__5810);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4197__auto__ = self__._hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__5812 = null;
  var G__5812__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__5812__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__5812 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__5812__2.call(this, self__, coll);
      case 3:
        return G__5812__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5812.cljs$core$IFn$_invoke$arity$2 = G__5812__2;
  G__5812.cljs$core$IFn$_invoke$arity$3 = G__5812__3;
  return G__5812;
}();
cljs.core.Symbol.prototype.apply = function(self__, args5811) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5811)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__5860 = null;
  var G__5860__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__5860__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__5860__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__5860__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__5860__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__5860__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__5860__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__5860__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__5860__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__5860__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__5860__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__5860__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__5860__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__5860__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__5860__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__5860__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__5860__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__5860__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__5860__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__5860__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__5860__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__5860__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__5816 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__5817 = a;
    var G__5818 = b;
    var G__5819 = c;
    var G__5820 = d;
    var G__5821 = e;
    var G__5822 = f;
    var G__5823 = g;
    var G__5824 = h;
    var G__5825 = i;
    var G__5826 = j;
    var G__5827 = k;
    var G__5828 = l;
    var G__5829 = m;
    var G__5830 = n;
    var G__5831 = o;
    var G__5832 = p;
    var G__5833 = q;
    var G__5834 = r;
    var G__5835 = s;
    var G__5836 = t;
    var G__5837 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5816, G__5817, G__5818, G__5819, G__5820, G__5821, G__5822, G__5823, G__5824, G__5825, G__5826, G__5827, G__5828, G__5829, G__5830, G__5831, G__5832, G__5833, G__5834, G__5835, G__5836, G__5837) : cljs.core.apply.call(null, G__5816, G__5817, G__5818, G__5819, G__5820, G__5821, G__5822, G__5823, G__5824, G__5825, G__5826, G__5827, G__5828, G__5829, G__5830, G__5831, G__5832, G__5833, G__5834, 
    G__5835, G__5836, G__5837);
  };
  G__5860 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__5860__1.call(this, self__);
      case 2:
        return G__5860__2.call(this, self__, a);
      case 3:
        return G__5860__3.call(this, self__, a, b);
      case 4:
        return G__5860__4.call(this, self__, a, b, c);
      case 5:
        return G__5860__5.call(this, self__, a, b, c, d);
      case 6:
        return G__5860__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__5860__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__5860__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__5860__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__5860__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__5860__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__5860__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__5860__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__5860__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__5860__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__5860__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__5860__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__5860__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__5860__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__5860__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__5860__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__5860__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__5860.cljs$core$IFn$_invoke$arity$1 = G__5860__1;
  G__5860.cljs$core$IFn$_invoke$arity$2 = G__5860__2;
  G__5860.cljs$core$IFn$_invoke$arity$3 = G__5860__3;
  G__5860.cljs$core$IFn$_invoke$arity$4 = G__5860__4;
  G__5860.cljs$core$IFn$_invoke$arity$5 = G__5860__5;
  G__5860.cljs$core$IFn$_invoke$arity$6 = G__5860__6;
  G__5860.cljs$core$IFn$_invoke$arity$7 = G__5860__7;
  G__5860.cljs$core$IFn$_invoke$arity$8 = G__5860__8;
  G__5860.cljs$core$IFn$_invoke$arity$9 = G__5860__9;
  G__5860.cljs$core$IFn$_invoke$arity$10 = G__5860__10;
  G__5860.cljs$core$IFn$_invoke$arity$11 = G__5860__11;
  G__5860.cljs$core$IFn$_invoke$arity$12 = G__5860__12;
  G__5860.cljs$core$IFn$_invoke$arity$13 = G__5860__13;
  G__5860.cljs$core$IFn$_invoke$arity$14 = G__5860__14;
  G__5860.cljs$core$IFn$_invoke$arity$15 = G__5860__15;
  G__5860.cljs$core$IFn$_invoke$arity$16 = G__5860__16;
  G__5860.cljs$core$IFn$_invoke$arity$17 = G__5860__17;
  G__5860.cljs$core$IFn$_invoke$arity$18 = G__5860__18;
  G__5860.cljs$core$IFn$_invoke$arity$19 = G__5860__19;
  G__5860.cljs$core$IFn$_invoke$arity$20 = G__5860__20;
  G__5860.cljs$core$IFn$_invoke$arity$21 = G__5860__21;
  G__5860.cljs$core$IFn$_invoke$arity$22 = G__5860__22;
  return G__5860;
}();
cljs.core.Var.prototype.apply = function(self__, args5815) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args5815)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__5838 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__5839 = a;
  var G__5840 = b;
  var G__5841 = c;
  var G__5842 = d;
  var G__5843 = e;
  var G__5844 = f;
  var G__5845 = g;
  var G__5846 = h;
  var G__5847 = i;
  var G__5848 = j;
  var G__5849 = k;
  var G__5850 = l;
  var G__5851 = m;
  var G__5852 = n;
  var G__5853 = o;
  var G__5854 = p;
  var G__5855 = q;
  var G__5856 = r;
  var G__5857 = s;
  var G__5858 = t;
  var G__5859 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5838, G__5839, G__5840, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846, G__5847, G__5848, G__5849, G__5850, G__5851, G__5852, G__5853, G__5854, G__5855, G__5856, G__5857, G__5858, G__5859) : cljs.core.apply.call(null, G__5838, G__5839, G__5840, G__5841, G__5842, G__5843, G__5844, G__5845, G__5846, G__5847, G__5848, G__5849, G__5850, G__5851, G__5852, G__5853, G__5854, G__5855, G__5856, 
  G__5857, G__5858, G__5859);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__5862 = x;
  if (G__5862) {
    var bit__4457__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3776__auto__ = bit__4457__auto__;
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return G__5862.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__5862.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5862);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__5862);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__5864 = value;
  if (G__5864) {
    var bit__4457__auto__ = G__5864.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4457__auto__ || G__5864.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__5864.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5864);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__5864);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5866 = coll;
      if (G__5866) {
        var bit__4450__auto__ = G__5866.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4450__auto__ || G__5866.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5868 = coll;
      if (G__5868) {
        var bit__4450__auto__ = G__5868.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4450__auto__ || G__5868.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5870 = coll;
      if (G__5870) {
        var bit__4450__auto__ = G__5870.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4450__auto__ || G__5870.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__5872 = coll;
      if (G__5872) {
        var bit__4450__auto__ = G__5872.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4450__auto__ || G__5872.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__5877__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__5878 = y;
            var G__5879 = cljs.core.first(more);
            var G__5880 = cljs.core.next(more);
            x = G__5878;
            y = G__5879;
            more = G__5880;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__5877 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__5881__i = 0, G__5881__a = new Array(arguments.length - 2);
        while (G__5881__i < G__5881__a.length) {
          G__5881__a[G__5881__i] = arguments[G__5881__i + 2];
          ++G__5881__i;
        }
        more = new cljs.core.IndexedSeq(G__5881__a, 0);
      }
      return G__5877__delegate.call(this, x, y, more);
    };
    G__5877.cljs$lang$maxFixedArity = 2;
    G__5877.cljs$lang$applyTo = function(arglist__5882) {
      var x = cljs.core.first(arglist__5882);
      arglist__5882 = cljs.core.next(arglist__5882);
      var y = cljs.core.first(arglist__5882);
      var more = cljs.core.rest(arglist__5882);
      return G__5877__delegate(x, y, more);
    };
    G__5877.cljs$core$IFn$_invoke$arity$variadic = G__5877__delegate;
    return G__5877;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__5883 = null;
        if (arguments.length > 2) {
          var G__5884__i = 0, G__5884__a = new Array(arguments.length - 2);
          while (G__5884__i < G__5884__a.length) {
            G__5884__a[G__5884__i] = arguments[G__5884__i + 2];
            ++G__5884__i;
          }
          G__5883 = new cljs.core.IndexedSeq(G__5884__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__5883);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__5885 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5885) : cljs.core.es6_iterator_seq.call(null, G__5885);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5886 = n + 1;
      var G__5887 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5888 = cljs.core.next(coll__$1);
      n = G__5886;
      hash_code = G__5887;
      coll__$1 = G__5888;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__5889 = n + 1;
      var G__5890 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__5891 = cljs.core.next(coll__$1);
      n = G__5889;
      hash_code = G__5890;
      coll__$1 = G__5891;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__5892 = o;
  return goog.getUid(G__5892);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__5894 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5894) : cljs.core.deref.call(null, G__5894);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5901 = val;
            var G__5902 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5901, G__5902) : f.call(null, G__5901, G__5902);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5907 = nval;
            var G__5908 = n + 1;
            val = G__5907;
            n = G__5908;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5903 = val__$1;
          var G__5904 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5903, G__5904) : f.call(null, G__5903, G__5904);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5909 = nval;
          var G__5910 = n + 1;
          val__$1 = G__5909;
          n = G__5910;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5905 = val__$1;
          var G__5906 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5905, G__5906) : f.call(null, G__5905, G__5906);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5911 = nval;
          var G__5912 = n + 1;
          val__$1 = G__5911;
          n = G__5912;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__5919 = val;
            var G__5920 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5919, G__5920) : f.call(null, G__5919, G__5920);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__5925 = nval;
            var G__5926 = n + 1;
            val = G__5925;
            n = G__5926;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5921 = val__$1;
          var G__5922 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5921, G__5922) : f.call(null, G__5921, G__5922);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5927 = nval;
          var G__5928 = n + 1;
          val__$1 = G__5927;
          n = G__5928;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__5923 = val__$1;
          var G__5924 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5923, G__5924) : f.call(null, G__5923, G__5924);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__5929 = nval;
          var G__5930 = n + 1;
          val__$1 = G__5929;
          n = G__5930;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__5932 = x;
  if (G__5932) {
    var bit__4457__auto__ = G__5932.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4457__auto__ || G__5932.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__5932.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5932);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__5932);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__5934 = x;
  if (G__5934) {
    var bit__4457__auto__ = G__5934.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4457__auto__ || G__5934.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__5934.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5934);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__5934);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5935 = coll__$1;
  var G__5936 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5935, G__5936) : cljs.core.equiv_sequential.call(null, G__5935, G__5936);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5937 = o;
  var G__5938 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5937, G__5938) : cljs.core.cons.call(null, G__5937, G__5938);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__5941 = coll__$1;
  var G__5942 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5941, G__5942) : cljs.core.equiv_sequential.call(null, G__5941, G__5942);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__5943 = cljs.core.List.EMPTY;
  var G__5944 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5943, G__5944) : cljs.core.with_meta.call(null, G__5943, G__5944);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__5945 = f;
  var G__5946 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5945, G__5946) : cljs.core.seq_reduce.call(null, G__5945, G__5946);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__5947 = f;
  var G__5948 = start;
  var G__5949 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5947, G__5948, G__5949) : cljs.core.seq_reduce.call(null, G__5947, G__5948, G__5949);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__5950 = o;
  var G__5951 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5950, G__5951) : cljs.core.cons.call(null, G__5950, G__5951);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__5952 = sn;
      s = G__5952;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__5957__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__5958 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__5959 = cljs.core.first(xs);
          var G__5960 = cljs.core.next(xs);
          coll = G__5958;
          x = G__5959;
          xs = G__5960;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__5957 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__5961__i = 0, G__5961__a = new Array(arguments.length - 2);
        while (G__5961__i < G__5961__a.length) {
          G__5961__a[G__5961__i] = arguments[G__5961__i + 2];
          ++G__5961__i;
        }
        xs = new cljs.core.IndexedSeq(G__5961__a, 0);
      }
      return G__5957__delegate.call(this, coll, x, xs);
    };
    G__5957.cljs$lang$maxFixedArity = 2;
    G__5957.cljs$lang$applyTo = function(arglist__5962) {
      var coll = cljs.core.first(arglist__5962);
      arglist__5962 = cljs.core.next(arglist__5962);
      var x = cljs.core.first(arglist__5962);
      var xs = cljs.core.rest(arglist__5962);
      return G__5957__delegate(coll, x, xs);
    };
    G__5957.cljs$core$IFn$_invoke$arity$variadic = G__5957__delegate;
    return G__5957;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__5963 = null;
        if (arguments.length > 2) {
          var G__5964__i = 0, G__5964__a = new Array(arguments.length - 2);
          while (G__5964__i < G__5964__a.length) {
            G__5964__a[G__5964__i] = arguments[G__5964__i + 2];
            ++G__5964__i;
          }
          G__5963 = new cljs.core.IndexedSeq(G__5964__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__5963);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__5965 = cljs.core.next(s);
      var G__5966 = acc + 1;
      s = G__5965;
      acc = G__5966;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__5968 = coll;
      if (G__5968) {
        var bit__4450__auto__ = G__5968.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4450__auto__ || G__5968.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5969 = cljs.core.next(coll);
              var G__5970 = n - 1;
              coll = G__5969;
              n = G__5970;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__5971 = cljs.core.next(coll);
              var G__5972 = n - 1;
              var G__5973 = not_found;
              coll = G__5971;
              n = G__5972;
              not_found = G__5973;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__5978 = coll;
          if (G__5978) {
            var bit__4450__auto__ = G__5978.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4450__auto__ || G__5978.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5979 = coll;
                  if (G__5979) {
                    var bit__4457__auto__ = G__5979.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4457__auto__ || G__5979.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5979.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5979);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5979);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__5980 = coll;
          if (G__5980) {
            var bit__4450__auto__ = G__5980.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4450__auto__ || G__5980.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__5981 = coll;
                  if (G__5981) {
                    var bit__4457__auto__ = G__5981.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4457__auto__ || G__5981.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__5981.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5981);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__5981);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__5982 = n__$1 - 1;
      var G__5983 = cljs.core.rest(xs);
      n__$1 = G__5982;
      xs = G__5983;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__5986 = o;
        if (G__5986) {
          var bit__4450__auto__ = G__5986.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4450__auto__ || G__5986.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__5987 = o;
        if (G__5987) {
          var bit__4450__auto__ = G__5987.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4450__auto__ || G__5987.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__5991__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__5992 = ret;
          var G__5993 = cljs.core.first(kvs);
          var G__5994 = cljs.core.second(kvs);
          var G__5995 = cljs.core.nnext(kvs);
          coll = G__5992;
          k = G__5993;
          v = G__5994;
          kvs = G__5995;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__5991 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__5996__i = 0, G__5996__a = new Array(arguments.length - 3);
        while (G__5996__i < G__5996__a.length) {
          G__5996__a[G__5996__i] = arguments[G__5996__i + 3];
          ++G__5996__i;
        }
        kvs = new cljs.core.IndexedSeq(G__5996__a, 0);
      }
      return G__5991__delegate.call(this, coll, k, v, kvs);
    };
    G__5991.cljs$lang$maxFixedArity = 3;
    G__5991.cljs$lang$applyTo = function(arglist__5997) {
      var coll = cljs.core.first(arglist__5997);
      arglist__5997 = cljs.core.next(arglist__5997);
      var k = cljs.core.first(arglist__5997);
      arglist__5997 = cljs.core.next(arglist__5997);
      var v = cljs.core.first(arglist__5997);
      var kvs = cljs.core.rest(arglist__5997);
      return G__5991__delegate(coll, k, v, kvs);
    };
    G__5991.cljs$core$IFn$_invoke$arity$variadic = G__5991__delegate;
    return G__5991;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__5998 = null;
        if (arguments.length > 3) {
          var G__5999__i = 0, G__5999__a = new Array(arguments.length - 3);
          while (G__5999__i < G__5999__a.length) {
            G__5999__a[G__5999__i] = arguments[G__5999__i + 3];
            ++G__5999__i;
          }
          G__5998 = new cljs.core.IndexedSeq(G__5999__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__5998);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__6002__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6003 = ret;
            var G__6004 = cljs.core.first(ks);
            var G__6005 = cljs.core.next(ks);
            coll = G__6003;
            k = G__6004;
            ks = G__6005;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6002 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6006__i = 0, G__6006__a = new Array(arguments.length - 2);
        while (G__6006__i < G__6006__a.length) {
          G__6006__a[G__6006__i] = arguments[G__6006__i + 2];
          ++G__6006__i;
        }
        ks = new cljs.core.IndexedSeq(G__6006__a, 0);
      }
      return G__6002__delegate.call(this, coll, k, ks);
    };
    G__6002.cljs$lang$maxFixedArity = 2;
    G__6002.cljs$lang$applyTo = function(arglist__6007) {
      var coll = cljs.core.first(arglist__6007);
      arglist__6007 = cljs.core.next(arglist__6007);
      var k = cljs.core.first(arglist__6007);
      var ks = cljs.core.rest(arglist__6007);
      return G__6002__delegate(coll, k, ks);
    };
    G__6002.cljs$core$IFn$_invoke$arity$variadic = G__6002__delegate;
    return G__6002;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__6008 = null;
        if (arguments.length > 2) {
          var G__6009__i = 0, G__6009__a = new Array(arguments.length - 2);
          while (G__6009__i < G__6009__a.length) {
            G__6009__a[G__6009__i] = arguments[G__6009__i + 2];
            ++G__6009__i;
          }
          G__6008 = new cljs.core.IndexedSeq(G__6009__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6008);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3776__auto__ = function() {
    var G__6014 = f;
    return goog.isFunction(G__6014);
  }();
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    var G__6015 = f;
    if (G__6015) {
      var bit__4457__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3776__auto____$1 = bit__4457__auto__;
        if (cljs.core.truth_(or__3776__auto____$1)) {
          return or__3776__auto____$1;
        } else {
          return G__6015.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__6015.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__6015);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__6015);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__6481 = null;
  var G__6481__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6481__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6017 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6017) : self__.afn.call(null, G__6017);
  };
  var G__6481__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6018 = a;
    var G__6019 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6018, G__6019) : self__.afn.call(null, G__6018, G__6019);
  };
  var G__6481__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6020 = a;
    var G__6021 = b;
    var G__6022 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6020, G__6021, G__6022) : self__.afn.call(null, G__6020, G__6021, G__6022);
  };
  var G__6481__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6023 = a;
    var G__6024 = b;
    var G__6025 = c;
    var G__6026 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6023, G__6024, G__6025, G__6026) : self__.afn.call(null, G__6023, G__6024, G__6025, G__6026);
  };
  var G__6481__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6027 = a;
    var G__6028 = b;
    var G__6029 = c;
    var G__6030 = d;
    var G__6031 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6027, G__6028, G__6029, G__6030, G__6031) : self__.afn.call(null, G__6027, G__6028, G__6029, G__6030, G__6031);
  };
  var G__6481__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6032 = a;
    var G__6033 = b;
    var G__6034 = c;
    var G__6035 = d;
    var G__6036 = e;
    var G__6037 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6032, G__6033, G__6034, G__6035, G__6036, G__6037) : self__.afn.call(null, G__6032, G__6033, G__6034, G__6035, G__6036, G__6037);
  };
  var G__6481__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6038 = a;
    var G__6039 = b;
    var G__6040 = c;
    var G__6041 = d;
    var G__6042 = e;
    var G__6043 = f;
    var G__6044 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044) : self__.afn.call(null, G__6038, G__6039, G__6040, G__6041, G__6042, G__6043, G__6044);
  };
  var G__6481__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6045 = a;
    var G__6046 = b;
    var G__6047 = c;
    var G__6048 = d;
    var G__6049 = e;
    var G__6050 = f;
    var G__6051 = g;
    var G__6052 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6045, G__6046, G__6047, G__6048, G__6049, G__6050, G__6051, G__6052) : self__.afn.call(null, G__6045, G__6046, G__6047, G__6048, G__6049, G__6050, G__6051, G__6052);
  };
  var G__6481__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6053 = a;
    var G__6054 = b;
    var G__6055 = c;
    var G__6056 = d;
    var G__6057 = e;
    var G__6058 = f;
    var G__6059 = g;
    var G__6060 = h;
    var G__6061 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6053, G__6054, G__6055, G__6056, G__6057, G__6058, G__6059, G__6060, G__6061) : self__.afn.call(null, G__6053, G__6054, G__6055, G__6056, G__6057, G__6058, G__6059, G__6060, G__6061);
  };
  var G__6481__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6062 = a;
    var G__6063 = b;
    var G__6064 = c;
    var G__6065 = d;
    var G__6066 = e;
    var G__6067 = f;
    var G__6068 = g;
    var G__6069 = h;
    var G__6070 = i;
    var G__6071 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6062, G__6063, G__6064, G__6065, G__6066, G__6067, G__6068, G__6069, G__6070, G__6071) : self__.afn.call(null, G__6062, G__6063, G__6064, G__6065, G__6066, G__6067, G__6068, G__6069, G__6070, G__6071);
  };
  var G__6481__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6072 = a;
    var G__6073 = b;
    var G__6074 = c;
    var G__6075 = d;
    var G__6076 = e;
    var G__6077 = f;
    var G__6078 = g;
    var G__6079 = h;
    var G__6080 = i;
    var G__6081 = j;
    var G__6082 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6072, G__6073, G__6074, G__6075, G__6076, G__6077, G__6078, G__6079, G__6080, G__6081, G__6082) : self__.afn.call(null, G__6072, G__6073, G__6074, G__6075, G__6076, G__6077, G__6078, G__6079, G__6080, G__6081, G__6082);
  };
  var G__6481__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6083 = a;
    var G__6084 = b;
    var G__6085 = c;
    var G__6086 = d;
    var G__6087 = e;
    var G__6088 = f;
    var G__6089 = g;
    var G__6090 = h;
    var G__6091 = i;
    var G__6092 = j;
    var G__6093 = k;
    var G__6094 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6083, G__6084, G__6085, G__6086, G__6087, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093, G__6094) : self__.afn.call(null, G__6083, G__6084, G__6085, G__6086, G__6087, G__6088, G__6089, G__6090, G__6091, G__6092, G__6093, G__6094);
  };
  var G__6481__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6095 = a;
    var G__6096 = b;
    var G__6097 = c;
    var G__6098 = d;
    var G__6099 = e;
    var G__6100 = f;
    var G__6101 = g;
    var G__6102 = h;
    var G__6103 = i;
    var G__6104 = j;
    var G__6105 = k;
    var G__6106 = l;
    var G__6107 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6095, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102, G__6103, G__6104, G__6105, G__6106, G__6107) : self__.afn.call(null, G__6095, G__6096, G__6097, G__6098, G__6099, G__6100, G__6101, G__6102, G__6103, G__6104, G__6105, G__6106, G__6107);
  };
  var G__6481__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6108 = a;
    var G__6109 = b;
    var G__6110 = c;
    var G__6111 = d;
    var G__6112 = e;
    var G__6113 = f;
    var G__6114 = g;
    var G__6115 = h;
    var G__6116 = i;
    var G__6117 = j;
    var G__6118 = k;
    var G__6119 = l;
    var G__6120 = m;
    var G__6121 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6108, G__6109, G__6110, G__6111, G__6112, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121) : self__.afn.call(null, G__6108, G__6109, G__6110, G__6111, G__6112, G__6113, G__6114, G__6115, G__6116, G__6117, G__6118, G__6119, G__6120, G__6121);
  };
  var G__6481__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6122 = a;
    var G__6123 = b;
    var G__6124 = c;
    var G__6125 = d;
    var G__6126 = e;
    var G__6127 = f;
    var G__6128 = g;
    var G__6129 = h;
    var G__6130 = i;
    var G__6131 = j;
    var G__6132 = k;
    var G__6133 = l;
    var G__6134 = m;
    var G__6135 = n;
    var G__6136 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6122, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136) : self__.afn.call(null, G__6122, G__6123, G__6124, G__6125, G__6126, G__6127, G__6128, G__6129, G__6130, G__6131, G__6132, G__6133, G__6134, G__6135, G__6136);
  };
  var G__6481__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6137 = a;
    var G__6138 = b;
    var G__6139 = c;
    var G__6140 = d;
    var G__6141 = e;
    var G__6142 = f;
    var G__6143 = g;
    var G__6144 = h;
    var G__6145 = i;
    var G__6146 = j;
    var G__6147 = k;
    var G__6148 = l;
    var G__6149 = m;
    var G__6150 = n;
    var G__6151 = o;
    var G__6152 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144, G__6145, G__6146, G__6147, G__6148, G__6149, G__6150, G__6151, G__6152) : self__.afn.call(null, G__6137, G__6138, G__6139, G__6140, G__6141, G__6142, G__6143, G__6144, G__6145, G__6146, G__6147, G__6148, G__6149, G__6150, G__6151, G__6152);
  };
  var G__6481__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6153 = a;
    var G__6154 = b;
    var G__6155 = c;
    var G__6156 = d;
    var G__6157 = e;
    var G__6158 = f;
    var G__6159 = g;
    var G__6160 = h;
    var G__6161 = i;
    var G__6162 = j;
    var G__6163 = k;
    var G__6164 = l;
    var G__6165 = m;
    var G__6166 = n;
    var G__6167 = o;
    var G__6168 = p;
    var G__6169 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162, G__6163, G__6164, G__6165, G__6166, G__6167, G__6168, G__6169) : self__.afn.call(null, G__6153, G__6154, G__6155, G__6156, G__6157, G__6158, G__6159, G__6160, G__6161, G__6162, G__6163, G__6164, G__6165, G__6166, G__6167, G__6168, G__6169);
  };
  var G__6481__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6170 = a;
    var G__6171 = b;
    var G__6172 = c;
    var G__6173 = d;
    var G__6174 = e;
    var G__6175 = f;
    var G__6176 = g;
    var G__6177 = h;
    var G__6178 = i;
    var G__6179 = j;
    var G__6180 = k;
    var G__6181 = l;
    var G__6182 = m;
    var G__6183 = n;
    var G__6184 = o;
    var G__6185 = p;
    var G__6186 = q;
    var G__6187 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177, G__6178, G__6179, G__6180, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187) : self__.afn.call(null, G__6170, G__6171, G__6172, G__6173, G__6174, G__6175, G__6176, G__6177, G__6178, G__6179, G__6180, G__6181, G__6182, G__6183, G__6184, G__6185, G__6186, G__6187);
  };
  var G__6481__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6188 = a;
    var G__6189 = b;
    var G__6190 = c;
    var G__6191 = d;
    var G__6192 = e;
    var G__6193 = f;
    var G__6194 = g;
    var G__6195 = h;
    var G__6196 = i;
    var G__6197 = j;
    var G__6198 = k;
    var G__6199 = l;
    var G__6200 = m;
    var G__6201 = n;
    var G__6202 = o;
    var G__6203 = p;
    var G__6204 = q;
    var G__6205 = r;
    var G__6206 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6188, G__6189, G__6190, G__6191, G__6192, G__6193, G__6194, G__6195, G__6196, G__6197, G__6198, G__6199, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206) : self__.afn.call(null, G__6188, G__6189, G__6190, G__6191, G__6192, G__6193, G__6194, G__6195, G__6196, G__6197, G__6198, G__6199, G__6200, G__6201, G__6202, G__6203, G__6204, G__6205, G__6206);
  };
  var G__6481__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6207 = a;
    var G__6208 = b;
    var G__6209 = c;
    var G__6210 = d;
    var G__6211 = e;
    var G__6212 = f;
    var G__6213 = g;
    var G__6214 = h;
    var G__6215 = i;
    var G__6216 = j;
    var G__6217 = k;
    var G__6218 = l;
    var G__6219 = m;
    var G__6220 = n;
    var G__6221 = o;
    var G__6222 = p;
    var G__6223 = q;
    var G__6224 = r;
    var G__6225 = s;
    var G__6226 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6207, G__6208, G__6209, G__6210, G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226) : self__.afn.call(null, G__6207, G__6208, G__6209, G__6210, G__6211, G__6212, G__6213, G__6214, G__6215, G__6216, G__6217, G__6218, G__6219, G__6220, G__6221, G__6222, G__6223, G__6224, G__6225, G__6226);
  };
  var G__6481__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6227 = self__.afn;
    var G__6228 = a;
    var G__6229 = b;
    var G__6230 = c;
    var G__6231 = d;
    var G__6232 = e;
    var G__6233 = f;
    var G__6234 = g;
    var G__6235 = h;
    var G__6236 = i;
    var G__6237 = j;
    var G__6238 = k;
    var G__6239 = l;
    var G__6240 = m;
    var G__6241 = n;
    var G__6242 = o;
    var G__6243 = p;
    var G__6244 = q;
    var G__6245 = r;
    var G__6246 = s;
    var G__6247 = t;
    var G__6248 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6227, G__6228, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241, G__6242, G__6243, G__6244, G__6245, G__6246, G__6247, G__6248) : cljs.core.apply.call(null, G__6227, G__6228, G__6229, G__6230, G__6231, G__6232, G__6233, G__6234, G__6235, G__6236, G__6237, G__6238, G__6239, G__6240, G__6241, G__6242, G__6243, G__6244, G__6245, 
    G__6246, G__6247, G__6248);
  };
  G__6481 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6481__1.call(this, self__);
      case 2:
        return G__6481__2.call(this, self__, a);
      case 3:
        return G__6481__3.call(this, self__, a, b);
      case 4:
        return G__6481__4.call(this, self__, a, b, c);
      case 5:
        return G__6481__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6481__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6481__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6481__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6481__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6481__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6481__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6481__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6481__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6481__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6481__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6481__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6481__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6481__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6481__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6481__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6481__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6481__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6481.cljs$core$IFn$_invoke$arity$1 = G__6481__1;
  G__6481.cljs$core$IFn$_invoke$arity$2 = G__6481__2;
  G__6481.cljs$core$IFn$_invoke$arity$3 = G__6481__3;
  G__6481.cljs$core$IFn$_invoke$arity$4 = G__6481__4;
  G__6481.cljs$core$IFn$_invoke$arity$5 = G__6481__5;
  G__6481.cljs$core$IFn$_invoke$arity$6 = G__6481__6;
  G__6481.cljs$core$IFn$_invoke$arity$7 = G__6481__7;
  G__6481.cljs$core$IFn$_invoke$arity$8 = G__6481__8;
  G__6481.cljs$core$IFn$_invoke$arity$9 = G__6481__9;
  G__6481.cljs$core$IFn$_invoke$arity$10 = G__6481__10;
  G__6481.cljs$core$IFn$_invoke$arity$11 = G__6481__11;
  G__6481.cljs$core$IFn$_invoke$arity$12 = G__6481__12;
  G__6481.cljs$core$IFn$_invoke$arity$13 = G__6481__13;
  G__6481.cljs$core$IFn$_invoke$arity$14 = G__6481__14;
  G__6481.cljs$core$IFn$_invoke$arity$15 = G__6481__15;
  G__6481.cljs$core$IFn$_invoke$arity$16 = G__6481__16;
  G__6481.cljs$core$IFn$_invoke$arity$17 = G__6481__17;
  G__6481.cljs$core$IFn$_invoke$arity$18 = G__6481__18;
  G__6481.cljs$core$IFn$_invoke$arity$19 = G__6481__19;
  G__6481.cljs$core$IFn$_invoke$arity$20 = G__6481__20;
  G__6481.cljs$core$IFn$_invoke$arity$21 = G__6481__21;
  G__6481.cljs$core$IFn$_invoke$arity$22 = G__6481__22;
  return G__6481;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6016) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6016)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__6249 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6249) : self__.afn.call(null, G__6249);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__6250 = a;
  var G__6251 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6250, G__6251) : self__.afn.call(null, G__6250, G__6251);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__6252 = a;
  var G__6253 = b;
  var G__6254 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6252, G__6253, G__6254) : self__.afn.call(null, G__6252, G__6253, G__6254);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__6255 = a;
  var G__6256 = b;
  var G__6257 = c;
  var G__6258 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6255, G__6256, G__6257, G__6258) : self__.afn.call(null, G__6255, G__6256, G__6257, G__6258);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__6259 = a;
  var G__6260 = b;
  var G__6261 = c;
  var G__6262 = d;
  var G__6263 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6259, G__6260, G__6261, G__6262, G__6263) : self__.afn.call(null, G__6259, G__6260, G__6261, G__6262, G__6263);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__6264 = a;
  var G__6265 = b;
  var G__6266 = c;
  var G__6267 = d;
  var G__6268 = e;
  var G__6269 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6264, G__6265, G__6266, G__6267, G__6268, G__6269) : self__.afn.call(null, G__6264, G__6265, G__6266, G__6267, G__6268, G__6269);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__6270 = a;
  var G__6271 = b;
  var G__6272 = c;
  var G__6273 = d;
  var G__6274 = e;
  var G__6275 = f;
  var G__6276 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276) : self__.afn.call(null, G__6270, G__6271, G__6272, G__6273, G__6274, G__6275, G__6276);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__6277 = a;
  var G__6278 = b;
  var G__6279 = c;
  var G__6280 = d;
  var G__6281 = e;
  var G__6282 = f;
  var G__6283 = g;
  var G__6284 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6277, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284) : self__.afn.call(null, G__6277, G__6278, G__6279, G__6280, G__6281, G__6282, G__6283, G__6284);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__6285 = a;
  var G__6286 = b;
  var G__6287 = c;
  var G__6288 = d;
  var G__6289 = e;
  var G__6290 = f;
  var G__6291 = g;
  var G__6292 = h;
  var G__6293 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6285, G__6286, G__6287, G__6288, G__6289, G__6290, G__6291, G__6292, G__6293) : self__.afn.call(null, G__6285, G__6286, G__6287, G__6288, G__6289, G__6290, G__6291, G__6292, G__6293);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__6294 = a;
  var G__6295 = b;
  var G__6296 = c;
  var G__6297 = d;
  var G__6298 = e;
  var G__6299 = f;
  var G__6300 = g;
  var G__6301 = h;
  var G__6302 = i;
  var G__6303 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6294, G__6295, G__6296, G__6297, G__6298, G__6299, G__6300, G__6301, G__6302, G__6303) : self__.afn.call(null, G__6294, G__6295, G__6296, G__6297, G__6298, G__6299, G__6300, G__6301, G__6302, G__6303);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__6304 = a;
  var G__6305 = b;
  var G__6306 = c;
  var G__6307 = d;
  var G__6308 = e;
  var G__6309 = f;
  var G__6310 = g;
  var G__6311 = h;
  var G__6312 = i;
  var G__6313 = j;
  var G__6314 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6304, G__6305, G__6306, G__6307, G__6308, G__6309, G__6310, G__6311, G__6312, G__6313, G__6314) : self__.afn.call(null, G__6304, G__6305, G__6306, G__6307, G__6308, G__6309, G__6310, G__6311, G__6312, G__6313, G__6314);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__6315 = a;
  var G__6316 = b;
  var G__6317 = c;
  var G__6318 = d;
  var G__6319 = e;
  var G__6320 = f;
  var G__6321 = g;
  var G__6322 = h;
  var G__6323 = i;
  var G__6324 = j;
  var G__6325 = k;
  var G__6326 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6315, G__6316, G__6317, G__6318, G__6319, G__6320, G__6321, G__6322, G__6323, G__6324, G__6325, G__6326) : self__.afn.call(null, G__6315, G__6316, G__6317, G__6318, G__6319, G__6320, G__6321, G__6322, G__6323, G__6324, G__6325, G__6326);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__6327 = a;
  var G__6328 = b;
  var G__6329 = c;
  var G__6330 = d;
  var G__6331 = e;
  var G__6332 = f;
  var G__6333 = g;
  var G__6334 = h;
  var G__6335 = i;
  var G__6336 = j;
  var G__6337 = k;
  var G__6338 = l;
  var G__6339 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6327, G__6328, G__6329, G__6330, G__6331, G__6332, G__6333, G__6334, G__6335, G__6336, G__6337, G__6338, G__6339) : self__.afn.call(null, G__6327, G__6328, G__6329, G__6330, G__6331, G__6332, G__6333, G__6334, G__6335, G__6336, G__6337, G__6338, G__6339);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__6340 = a;
  var G__6341 = b;
  var G__6342 = c;
  var G__6343 = d;
  var G__6344 = e;
  var G__6345 = f;
  var G__6346 = g;
  var G__6347 = h;
  var G__6348 = i;
  var G__6349 = j;
  var G__6350 = k;
  var G__6351 = l;
  var G__6352 = m;
  var G__6353 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6340, G__6341, G__6342, G__6343, G__6344, G__6345, G__6346, G__6347, G__6348, G__6349, G__6350, G__6351, G__6352, G__6353) : self__.afn.call(null, G__6340, G__6341, G__6342, G__6343, G__6344, G__6345, G__6346, G__6347, G__6348, G__6349, G__6350, G__6351, G__6352, G__6353);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__6354 = a;
  var G__6355 = b;
  var G__6356 = c;
  var G__6357 = d;
  var G__6358 = e;
  var G__6359 = f;
  var G__6360 = g;
  var G__6361 = h;
  var G__6362 = i;
  var G__6363 = j;
  var G__6364 = k;
  var G__6365 = l;
  var G__6366 = m;
  var G__6367 = n;
  var G__6368 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6354, G__6355, G__6356, G__6357, G__6358, G__6359, G__6360, G__6361, G__6362, G__6363, G__6364, G__6365, G__6366, G__6367, G__6368) : self__.afn.call(null, G__6354, G__6355, G__6356, G__6357, G__6358, G__6359, G__6360, G__6361, G__6362, G__6363, G__6364, G__6365, G__6366, G__6367, G__6368);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__6369 = a;
  var G__6370 = b;
  var G__6371 = c;
  var G__6372 = d;
  var G__6373 = e;
  var G__6374 = f;
  var G__6375 = g;
  var G__6376 = h;
  var G__6377 = i;
  var G__6378 = j;
  var G__6379 = k;
  var G__6380 = l;
  var G__6381 = m;
  var G__6382 = n;
  var G__6383 = o;
  var G__6384 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6369, G__6370, G__6371, G__6372, G__6373, G__6374, G__6375, G__6376, G__6377, G__6378, G__6379, G__6380, G__6381, G__6382, G__6383, G__6384) : self__.afn.call(null, G__6369, G__6370, G__6371, G__6372, G__6373, G__6374, G__6375, G__6376, G__6377, G__6378, G__6379, G__6380, G__6381, G__6382, G__6383, G__6384);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__6385 = a;
  var G__6386 = b;
  var G__6387 = c;
  var G__6388 = d;
  var G__6389 = e;
  var G__6390 = f;
  var G__6391 = g;
  var G__6392 = h;
  var G__6393 = i;
  var G__6394 = j;
  var G__6395 = k;
  var G__6396 = l;
  var G__6397 = m;
  var G__6398 = n;
  var G__6399 = o;
  var G__6400 = p;
  var G__6401 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6385, G__6386, G__6387, G__6388, G__6389, G__6390, G__6391, G__6392, G__6393, G__6394, G__6395, G__6396, G__6397, G__6398, G__6399, G__6400, G__6401) : self__.afn.call(null, G__6385, G__6386, G__6387, G__6388, G__6389, G__6390, G__6391, G__6392, G__6393, G__6394, G__6395, G__6396, G__6397, G__6398, G__6399, G__6400, G__6401);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__6402 = a;
  var G__6403 = b;
  var G__6404 = c;
  var G__6405 = d;
  var G__6406 = e;
  var G__6407 = f;
  var G__6408 = g;
  var G__6409 = h;
  var G__6410 = i;
  var G__6411 = j;
  var G__6412 = k;
  var G__6413 = l;
  var G__6414 = m;
  var G__6415 = n;
  var G__6416 = o;
  var G__6417 = p;
  var G__6418 = q;
  var G__6419 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6402, G__6403, G__6404, G__6405, G__6406, G__6407, G__6408, G__6409, G__6410, G__6411, G__6412, G__6413, G__6414, G__6415, G__6416, G__6417, G__6418, G__6419) : self__.afn.call(null, G__6402, G__6403, G__6404, G__6405, G__6406, G__6407, G__6408, G__6409, G__6410, G__6411, G__6412, G__6413, G__6414, G__6415, G__6416, G__6417, G__6418, G__6419);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__6420 = a;
  var G__6421 = b;
  var G__6422 = c;
  var G__6423 = d;
  var G__6424 = e;
  var G__6425 = f;
  var G__6426 = g;
  var G__6427 = h;
  var G__6428 = i;
  var G__6429 = j;
  var G__6430 = k;
  var G__6431 = l;
  var G__6432 = m;
  var G__6433 = n;
  var G__6434 = o;
  var G__6435 = p;
  var G__6436 = q;
  var G__6437 = r;
  var G__6438 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6420, G__6421, G__6422, G__6423, G__6424, G__6425, G__6426, G__6427, G__6428, G__6429, G__6430, G__6431, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438) : self__.afn.call(null, G__6420, G__6421, G__6422, G__6423, G__6424, G__6425, G__6426, G__6427, G__6428, G__6429, G__6430, G__6431, G__6432, G__6433, G__6434, G__6435, G__6436, G__6437, G__6438);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__6439 = a;
  var G__6440 = b;
  var G__6441 = c;
  var G__6442 = d;
  var G__6443 = e;
  var G__6444 = f;
  var G__6445 = g;
  var G__6446 = h;
  var G__6447 = i;
  var G__6448 = j;
  var G__6449 = k;
  var G__6450 = l;
  var G__6451 = m;
  var G__6452 = n;
  var G__6453 = o;
  var G__6454 = p;
  var G__6455 = q;
  var G__6456 = r;
  var G__6457 = s;
  var G__6458 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6439, G__6440, G__6441, G__6442, G__6443, G__6444, G__6445, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458) : self__.afn.call(null, G__6439, G__6440, G__6441, G__6442, G__6443, G__6444, G__6445, G__6446, G__6447, G__6448, G__6449, G__6450, G__6451, G__6452, G__6453, G__6454, G__6455, G__6456, G__6457, G__6458);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6459 = self__.afn;
  var G__6460 = a;
  var G__6461 = b;
  var G__6462 = c;
  var G__6463 = d;
  var G__6464 = e;
  var G__6465 = f;
  var G__6466 = g;
  var G__6467 = h;
  var G__6468 = i;
  var G__6469 = j;
  var G__6470 = k;
  var G__6471 = l;
  var G__6472 = m;
  var G__6473 = n;
  var G__6474 = o;
  var G__6475 = p;
  var G__6476 = q;
  var G__6477 = r;
  var G__6478 = s;
  var G__6479 = t;
  var G__6480 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6459, G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467, G__6468, G__6469, G__6470, G__6471, G__6472, G__6473, G__6474, G__6475, G__6476, G__6477, G__6478, G__6479, G__6480) : cljs.core.apply.call(null, G__6459, G__6460, G__6461, G__6462, G__6463, G__6464, G__6465, G__6466, G__6467, G__6468, G__6469, G__6470, G__6471, G__6472, G__6473, G__6474, G__6475, G__6476, G__6477, 
  G__6478, G__6479, G__6480);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__6485 = o;
    if (G__6485) {
      var bit__4457__auto__ = G__6485.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4457__auto__ || G__6485.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6485.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6485);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__6485);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3764__auto__ = !(o == null);
    if (and__3764__auto__) {
      var G__6489 = o;
      if (G__6489) {
        var bit__4457__auto__ = G__6489.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4457__auto__ || G__6489.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__6489.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6489);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__6489);
      }
    } else {
      return and__3764__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__6492__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__6493 = ret;
            var G__6494 = cljs.core.first(ks);
            var G__6495 = cljs.core.next(ks);
            coll = G__6493;
            k = G__6494;
            ks = G__6495;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__6492 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6496__i = 0, G__6496__a = new Array(arguments.length - 2);
        while (G__6496__i < G__6496__a.length) {
          G__6496__a[G__6496__i] = arguments[G__6496__i + 2];
          ++G__6496__i;
        }
        ks = new cljs.core.IndexedSeq(G__6496__a, 0);
      }
      return G__6492__delegate.call(this, coll, k, ks);
    };
    G__6492.cljs$lang$maxFixedArity = 2;
    G__6492.cljs$lang$applyTo = function(arglist__6497) {
      var coll = cljs.core.first(arglist__6497);
      arglist__6497 = cljs.core.next(arglist__6497);
      var k = cljs.core.first(arglist__6497);
      var ks = cljs.core.rest(arglist__6497);
      return G__6492__delegate(coll, k, ks);
    };
    G__6492.cljs$core$IFn$_invoke$arity$variadic = G__6492__delegate;
    return G__6492;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__6498 = null;
        if (arguments.length > 2) {
          var G__6499__i = 0, G__6499__a = new Array(arguments.length - 2);
          while (G__6499__i < G__6499__a.length) {
            G__6499__a[G__6499__i] = arguments[G__6499__i + 2];
            ++G__6499__i;
          }
          G__6498 = new cljs.core.IndexedSeq(G__6499__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__6498);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6501 = x;
    if (G__6501) {
      var bit__4457__auto__ = G__6501.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4457__auto__ || G__6501.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__6501.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6501);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__6501);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6503 = x;
    if (G__6503) {
      var bit__4457__auto__ = G__6503.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4457__auto__ || G__6503.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__6503.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6503);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__6503);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__6505 = x;
  if (G__6505) {
    var bit__4457__auto__ = G__6505.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4457__auto__ || G__6505.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__6505.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6505);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__6505);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__6507 = x;
  if (G__6507) {
    var bit__4457__auto__ = G__6507.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4457__auto__ || G__6507.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__6507.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6507);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__6507);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__6509 = x;
  if (G__6509) {
    var bit__4457__auto__ = G__6509.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4457__auto__ || G__6509.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__6509.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6509);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__6509);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__6511 = x;
  if (G__6511) {
    var bit__4457__auto__ = G__6511.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4457__auto__ || G__6511.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__6511.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6511);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__6511);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__6513 = x;
    if (G__6513) {
      var bit__4457__auto__ = G__6513.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4457__auto__ || G__6513.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__6513.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6513);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__6513);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__6515 = x;
  if (G__6515) {
    var bit__4457__auto__ = G__6515.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4457__auto__ || G__6515.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__6515.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6515);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__6515);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__6517 = x;
  if (G__6517) {
    var bit__4450__auto__ = G__6517.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4450__auto__ || G__6517.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj6523 = {};
    return obj6523;
  };
  var js_obj__1 = function() {
    var G__6526__delegate = function(keyvals) {
      var G__6524 = goog.object.create;
      var G__6525 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__6524, G__6525) : cljs.core.apply.call(null, G__6524, G__6525);
    };
    var G__6526 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__6527__i = 0, G__6527__a = new Array(arguments.length - 0);
        while (G__6527__i < G__6527__a.length) {
          G__6527__a[G__6527__i] = arguments[G__6527__i + 0];
          ++G__6527__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__6527__a, 0);
      }
      return G__6526__delegate.call(this, keyvals);
    };
    G__6526.cljs$lang$maxFixedArity = 0;
    G__6526.cljs$lang$applyTo = function(arglist__6528) {
      var keyvals = cljs.core.seq(arglist__6528);
      return G__6526__delegate(keyvals);
    };
    G__6526.cljs$core$IFn$_invoke$arity$variadic = G__6526__delegate;
    return G__6526;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__6529 = null;
        if (arguments.length > 0) {
          var G__6530__i = 0, G__6530__a = new Array(arguments.length - 0);
          while (G__6530__i < G__6530__a.length) {
            G__6530__a[G__6530__i] = arguments[G__6530__i + 0];
            ++G__6530__i;
          }
          G__6529 = new cljs.core.IndexedSeq(G__6530__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6529);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__6533_6535 = obj;
  var G__6534_6536 = function(G__6533_6535, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6533_6535, keys);
  goog.object.forEach(G__6533_6535, G__6534_6536);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6537 = i__$1 + 1;
      var G__6538 = j__$1 + 1;
      var G__6539 = len__$1 - 1;
      i__$1 = G__6537;
      j__$1 = G__6538;
      len__$1 = G__6539;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6540 = i__$1 - 1;
      var G__6541 = j__$1 - 1;
      var G__6542 = len__$1 - 1;
      i__$1 = G__6540;
      j__$1 = G__6541;
      len__$1 = G__6542;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj6544 = {};
  return obj6544;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__6546 = s;
    if (G__6546) {
      var bit__4457__auto__ = G__6546.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4457__auto__ || G__6546.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__6546.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6546);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6546);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__6548 = s;
  if (G__6548) {
    var bit__4457__auto__ = G__6548.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4457__auto__ || G__6548.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__6548.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6548);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__6548);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3776__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3776__auto__) {
    return or__3776__auto__;
  } else {
    var G__6552 = f;
    if (G__6552) {
      var bit__4457__auto__ = G__6552.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4457__auto__ || G__6552.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__6552.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6552);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__6552);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__6565 = n;
    return isNaN(G__6565);
  }()) && !(n === Infinity) && function() {
    var G__6566 = n;
    return parseFloat(G__6566);
  }() === function() {
    var G__6567 = n;
    var G__6568 = 10;
    return parseInt(G__6567, G__6568);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__6569__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__6570 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__6571 = etc;
              s = G__6570;
              xs = G__6571;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__6569 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6572__i = 0, G__6572__a = new Array(arguments.length - 2);
        while (G__6572__i < G__6572__a.length) {
          G__6572__a[G__6572__i] = arguments[G__6572__i + 2];
          ++G__6572__i;
        }
        more = new cljs.core.IndexedSeq(G__6572__a, 0);
      }
      return G__6569__delegate.call(this, x, y, more);
    };
    G__6569.cljs$lang$maxFixedArity = 2;
    G__6569.cljs$lang$applyTo = function(arglist__6573) {
      var x = cljs.core.first(arglist__6573);
      arglist__6573 = cljs.core.next(arglist__6573);
      var y = cljs.core.first(arglist__6573);
      var more = cljs.core.rest(arglist__6573);
      return G__6569__delegate(x, y, more);
    };
    G__6569.cljs$core$IFn$_invoke$arity$variadic = G__6569__delegate;
    return G__6569;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__6574 = null;
        if (arguments.length > 2) {
          var G__6575__i = 0, G__6575__a = new Array(arguments.length - 2);
          while (G__6575__i < G__6575__a.length) {
            G__6575__a[G__6575__i] = arguments[G__6575__i + 2];
            ++G__6575__i;
          }
          G__6574 = new cljs.core.IndexedSeq(G__6575__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6574);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__6579 = x;
            if (G__6579) {
              var bit__4450__auto__ = G__6579.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4450__auto__ || G__6579.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__6580 = x;
            var G__6581 = y;
            return goog.array.defaultCompare(G__6580, G__6581);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__6586 = xs;
        var G__6587 = ys;
        var G__6588 = len;
        var G__6589 = n + 1;
        xs = G__6586;
        ys = G__6587;
        len = G__6588;
        n = G__6589;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__6594 = x;
        var G__6595 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6594, G__6595) : f.call(null, G__6594, G__6595);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__6596 = y;
            var G__6597 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6596, G__6597) : f.call(null, G__6596, G__6597);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__6603 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6603) : cljs.core.to_array.call(null, G__6603);
      }();
      var G__6604_6606 = a;
      var G__6605_6607 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__6604_6606, G__6605_6607);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__6613 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6613) : keyfn.call(null, G__6613);
      }(), function() {
        var G__6614 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6614) : keyfn.call(null, G__6614);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__6620 = f;
      var G__6621 = cljs.core.first(s);
      var G__6622 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6620, G__6621, G__6622) : cljs.core.reduce.call(null, G__6620, G__6621, G__6622);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__6623 = val__$1;
          var G__6624 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6623, G__6624) : f.call(null, G__6623, G__6624);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6625 = nval;
          var G__6626 = cljs.core.next(coll__$1);
          val__$1 = G__6625;
          coll__$1 = G__6626;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__6630 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6630) : cljs.core.to_array.call(null, G__6630);
  }();
  var G__6631_6633 = a;
  goog.array.shuffle(G__6631_6633);
  var G__6632 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6632) : cljs.core.vec.call(null, G__6632);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__6636 = coll;
      if (G__6636) {
        var bit__4450__auto__ = G__6636.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4450__auto__ || G__6636.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__6637 = coll;
      if (G__6637) {
        var bit__4450__auto__ = G__6637.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4450__auto__ || G__6637.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__6646 = null;
      var G__6646__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__6646__1 = function(x) {
        var G__6643 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6643) : cf.call(null, G__6643);
      };
      var G__6646__2 = function(x, y) {
        var G__6644 = x;
        var G__6645 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6644, G__6645) : f.call(null, G__6644, G__6645);
      };
      G__6646 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__6646__0.call(this);
          case 1:
            return G__6646__1.call(this, x);
          case 2:
            return G__6646__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__6646.cljs$core$IFn$_invoke$arity$0 = G__6646__0;
      G__6646.cljs$core$IFn$_invoke$arity$1 = G__6646__1;
      G__6646.cljs$core$IFn$_invoke$arity$2 = G__6646__2;
      return G__6646;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__6653 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6653) : xform.call(null, G__6653);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__6654 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6654) : f__$1.call(null, G__6654);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__6655__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__6655 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6656__i = 0, G__6656__a = new Array(arguments.length - 2);
        while (G__6656__i < G__6656__a.length) {
          G__6656__a[G__6656__i] = arguments[G__6656__i + 2];
          ++G__6656__i;
        }
        more = new cljs.core.IndexedSeq(G__6656__a, 0);
      }
      return G__6655__delegate.call(this, x, y, more);
    };
    G__6655.cljs$lang$maxFixedArity = 2;
    G__6655.cljs$lang$applyTo = function(arglist__6657) {
      var x = cljs.core.first(arglist__6657);
      arglist__6657 = cljs.core.next(arglist__6657);
      var y = cljs.core.first(arglist__6657);
      var more = cljs.core.rest(arglist__6657);
      return G__6655__delegate(x, y, more);
    };
    G__6655.cljs$core$IFn$_invoke$arity$variadic = G__6655__delegate;
    return G__6655;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__6658 = null;
        if (arguments.length > 2) {
          var G__6659__i = 0, G__6659__a = new Array(arguments.length - 2);
          while (G__6659__i < G__6659__a.length) {
            G__6659__a[G__6659__i] = arguments[G__6659__i + 2];
            ++G__6659__i;
          }
          G__6658 = new cljs.core.IndexedSeq(G__6659__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6658);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__6660__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__6660 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6661__i = 0, G__6661__a = new Array(arguments.length - 2);
        while (G__6661__i < G__6661__a.length) {
          G__6661__a[G__6661__i] = arguments[G__6661__i + 2];
          ++G__6661__i;
        }
        more = new cljs.core.IndexedSeq(G__6661__a, 0);
      }
      return G__6660__delegate.call(this, x, y, more);
    };
    G__6660.cljs$lang$maxFixedArity = 2;
    G__6660.cljs$lang$applyTo = function(arglist__6662) {
      var x = cljs.core.first(arglist__6662);
      arglist__6662 = cljs.core.next(arglist__6662);
      var y = cljs.core.first(arglist__6662);
      var more = cljs.core.rest(arglist__6662);
      return G__6660__delegate(x, y, more);
    };
    G__6660.cljs$core$IFn$_invoke$arity$variadic = G__6660__delegate;
    return G__6660;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__6663 = null;
        if (arguments.length > 2) {
          var G__6664__i = 0, G__6664__a = new Array(arguments.length - 2);
          while (G__6664__i < G__6664__a.length) {
            G__6664__a[G__6664__i] = arguments[G__6664__i + 2];
            ++G__6664__i;
          }
          G__6663 = new cljs.core.IndexedSeq(G__6664__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6663);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__6665__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__6665 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6666__i = 0, G__6666__a = new Array(arguments.length - 2);
        while (G__6666__i < G__6666__a.length) {
          G__6666__a[G__6666__i] = arguments[G__6666__i + 2];
          ++G__6666__i;
        }
        more = new cljs.core.IndexedSeq(G__6666__a, 0);
      }
      return G__6665__delegate.call(this, x, y, more);
    };
    G__6665.cljs$lang$maxFixedArity = 2;
    G__6665.cljs$lang$applyTo = function(arglist__6667) {
      var x = cljs.core.first(arglist__6667);
      arglist__6667 = cljs.core.next(arglist__6667);
      var y = cljs.core.first(arglist__6667);
      var more = cljs.core.rest(arglist__6667);
      return G__6665__delegate(x, y, more);
    };
    G__6665.cljs$core$IFn$_invoke$arity$variadic = G__6665__delegate;
    return G__6665;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__6668 = null;
        if (arguments.length > 2) {
          var G__6669__i = 0, G__6669__a = new Array(arguments.length - 2);
          while (G__6669__i < G__6669__a.length) {
            G__6669__a[G__6669__i] = arguments[G__6669__i + 2];
            ++G__6669__i;
          }
          G__6668 = new cljs.core.IndexedSeq(G__6669__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6668);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__6674__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6674 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6675__i = 0, G__6675__a = new Array(arguments.length - 2);
        while (G__6675__i < G__6675__a.length) {
          G__6675__a[G__6675__i] = arguments[G__6675__i + 2];
          ++G__6675__i;
        }
        more = new cljs.core.IndexedSeq(G__6675__a, 0);
      }
      return G__6674__delegate.call(this, x, y, more);
    };
    G__6674.cljs$lang$maxFixedArity = 2;
    G__6674.cljs$lang$applyTo = function(arglist__6676) {
      var x = cljs.core.first(arglist__6676);
      arglist__6676 = cljs.core.next(arglist__6676);
      var y = cljs.core.first(arglist__6676);
      var more = cljs.core.rest(arglist__6676);
      return G__6674__delegate(x, y, more);
    };
    G__6674.cljs$core$IFn$_invoke$arity$variadic = G__6674__delegate;
    return G__6674;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__6677 = null;
        if (arguments.length > 2) {
          var G__6678__i = 0, G__6678__a = new Array(arguments.length - 2);
          while (G__6678__i < G__6678__a.length) {
            G__6678__a[G__6678__i] = arguments[G__6678__i + 2];
            ++G__6678__i;
          }
          G__6677 = new cljs.core.IndexedSeq(G__6678__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6677);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__6679__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__6680 = y;
            var G__6681 = cljs.core.first(more);
            var G__6682 = cljs.core.next(more);
            x = G__6680;
            y = G__6681;
            more = G__6682;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6679 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6683__i = 0, G__6683__a = new Array(arguments.length - 2);
        while (G__6683__i < G__6683__a.length) {
          G__6683__a[G__6683__i] = arguments[G__6683__i + 2];
          ++G__6683__i;
        }
        more = new cljs.core.IndexedSeq(G__6683__a, 0);
      }
      return G__6679__delegate.call(this, x, y, more);
    };
    G__6679.cljs$lang$maxFixedArity = 2;
    G__6679.cljs$lang$applyTo = function(arglist__6684) {
      var x = cljs.core.first(arglist__6684);
      arglist__6684 = cljs.core.next(arglist__6684);
      var y = cljs.core.first(arglist__6684);
      var more = cljs.core.rest(arglist__6684);
      return G__6679__delegate(x, y, more);
    };
    G__6679.cljs$core$IFn$_invoke$arity$variadic = G__6679__delegate;
    return G__6679;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__6685 = null;
        if (arguments.length > 2) {
          var G__6686__i = 0, G__6686__a = new Array(arguments.length - 2);
          while (G__6686__i < G__6686__a.length) {
            G__6686__a[G__6686__i] = arguments[G__6686__i + 2];
            ++G__6686__i;
          }
          G__6685 = new cljs.core.IndexedSeq(G__6686__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6685);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__6687__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__6688 = y;
            var G__6689 = cljs.core.first(more);
            var G__6690 = cljs.core.next(more);
            x = G__6688;
            y = G__6689;
            more = G__6690;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6687 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6691__i = 0, G__6691__a = new Array(arguments.length - 2);
        while (G__6691__i < G__6691__a.length) {
          G__6691__a[G__6691__i] = arguments[G__6691__i + 2];
          ++G__6691__i;
        }
        more = new cljs.core.IndexedSeq(G__6691__a, 0);
      }
      return G__6687__delegate.call(this, x, y, more);
    };
    G__6687.cljs$lang$maxFixedArity = 2;
    G__6687.cljs$lang$applyTo = function(arglist__6692) {
      var x = cljs.core.first(arglist__6692);
      arglist__6692 = cljs.core.next(arglist__6692);
      var y = cljs.core.first(arglist__6692);
      var more = cljs.core.rest(arglist__6692);
      return G__6687__delegate(x, y, more);
    };
    G__6687.cljs$core$IFn$_invoke$arity$variadic = G__6687__delegate;
    return G__6687;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__6693 = null;
        if (arguments.length > 2) {
          var G__6694__i = 0, G__6694__a = new Array(arguments.length - 2);
          while (G__6694__i < G__6694__a.length) {
            G__6694__a[G__6694__i] = arguments[G__6694__i + 2];
            ++G__6694__i;
          }
          G__6693 = new cljs.core.IndexedSeq(G__6694__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6693);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__6695__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__6696 = y;
            var G__6697 = cljs.core.first(more);
            var G__6698 = cljs.core.next(more);
            x = G__6696;
            y = G__6697;
            more = G__6698;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6695 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6699__i = 0, G__6699__a = new Array(arguments.length - 2);
        while (G__6699__i < G__6699__a.length) {
          G__6699__a[G__6699__i] = arguments[G__6699__i + 2];
          ++G__6699__i;
        }
        more = new cljs.core.IndexedSeq(G__6699__a, 0);
      }
      return G__6695__delegate.call(this, x, y, more);
    };
    G__6695.cljs$lang$maxFixedArity = 2;
    G__6695.cljs$lang$applyTo = function(arglist__6700) {
      var x = cljs.core.first(arglist__6700);
      arglist__6700 = cljs.core.next(arglist__6700);
      var y = cljs.core.first(arglist__6700);
      var more = cljs.core.rest(arglist__6700);
      return G__6695__delegate(x, y, more);
    };
    G__6695.cljs$core$IFn$_invoke$arity$variadic = G__6695__delegate;
    return G__6695;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__6701 = null;
        if (arguments.length > 2) {
          var G__6702__i = 0, G__6702__a = new Array(arguments.length - 2);
          while (G__6702__i < G__6702__a.length) {
            G__6702__a[G__6702__i] = arguments[G__6702__i + 2];
            ++G__6702__i;
          }
          G__6701 = new cljs.core.IndexedSeq(G__6702__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6701);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__6703__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__6704 = y;
            var G__6705 = cljs.core.first(more);
            var G__6706 = cljs.core.next(more);
            x = G__6704;
            y = G__6705;
            more = G__6706;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6703 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6707__i = 0, G__6707__a = new Array(arguments.length - 2);
        while (G__6707__i < G__6707__a.length) {
          G__6707__a[G__6707__i] = arguments[G__6707__i + 2];
          ++G__6707__i;
        }
        more = new cljs.core.IndexedSeq(G__6707__a, 0);
      }
      return G__6703__delegate.call(this, x, y, more);
    };
    G__6703.cljs$lang$maxFixedArity = 2;
    G__6703.cljs$lang$applyTo = function(arglist__6708) {
      var x = cljs.core.first(arglist__6708);
      arglist__6708 = cljs.core.next(arglist__6708);
      var y = cljs.core.first(arglist__6708);
      var more = cljs.core.rest(arglist__6708);
      return G__6703__delegate(x, y, more);
    };
    G__6703.cljs$core$IFn$_invoke$arity$variadic = G__6703__delegate;
    return G__6703;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__6709 = null;
        if (arguments.length > 2) {
          var G__6710__i = 0, G__6710__a = new Array(arguments.length - 2);
          while (G__6710__i < G__6710__a.length) {
            G__6710__a[G__6710__i] = arguments[G__6710__i + 2];
            ++G__6710__i;
          }
          G__6709 = new cljs.core.IndexedSeq(G__6710__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6709);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4093__auto__ = x;
    var y__4094__auto__ = y;
    return x__4093__auto__ > y__4094__auto__ ? x__4093__auto__ : y__4094__auto__;
  };
  var max__3 = function() {
    var G__6711__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4093__auto__ = x;
        var y__4094__auto__ = y;
        return x__4093__auto__ > y__4094__auto__ ? x__4093__auto__ : y__4094__auto__;
      }(), more);
    };
    var G__6711 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6712__i = 0, G__6712__a = new Array(arguments.length - 2);
        while (G__6712__i < G__6712__a.length) {
          G__6712__a[G__6712__i] = arguments[G__6712__i + 2];
          ++G__6712__i;
        }
        more = new cljs.core.IndexedSeq(G__6712__a, 0);
      }
      return G__6711__delegate.call(this, x, y, more);
    };
    G__6711.cljs$lang$maxFixedArity = 2;
    G__6711.cljs$lang$applyTo = function(arglist__6713) {
      var x = cljs.core.first(arglist__6713);
      arglist__6713 = cljs.core.next(arglist__6713);
      var y = cljs.core.first(arglist__6713);
      var more = cljs.core.rest(arglist__6713);
      return G__6711__delegate(x, y, more);
    };
    G__6711.cljs$core$IFn$_invoke$arity$variadic = G__6711__delegate;
    return G__6711;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__6714 = null;
        if (arguments.length > 2) {
          var G__6715__i = 0, G__6715__a = new Array(arguments.length - 2);
          while (G__6715__i < G__6715__a.length) {
            G__6715__a[G__6715__i] = arguments[G__6715__i + 2];
            ++G__6715__i;
          }
          G__6714 = new cljs.core.IndexedSeq(G__6715__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6714);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4100__auto__ = x;
    var y__4101__auto__ = y;
    return x__4100__auto__ < y__4101__auto__ ? x__4100__auto__ : y__4101__auto__;
  };
  var min__3 = function() {
    var G__6716__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4100__auto__ = x;
        var y__4101__auto__ = y;
        return x__4100__auto__ < y__4101__auto__ ? x__4100__auto__ : y__4101__auto__;
      }(), more);
    };
    var G__6716 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6717__i = 0, G__6717__a = new Array(arguments.length - 2);
        while (G__6717__i < G__6717__a.length) {
          G__6717__a[G__6717__i] = arguments[G__6717__i + 2];
          ++G__6717__i;
        }
        more = new cljs.core.IndexedSeq(G__6717__a, 0);
      }
      return G__6716__delegate.call(this, x, y, more);
    };
    G__6716.cljs$lang$maxFixedArity = 2;
    G__6716.cljs$lang$applyTo = function(arglist__6718) {
      var x = cljs.core.first(arglist__6718);
      arglist__6718 = cljs.core.next(arglist__6718);
      var y = cljs.core.first(arglist__6718);
      var more = cljs.core.rest(arglist__6718);
      return G__6716__delegate(x, y, more);
    };
    G__6716.cljs$core$IFn$_invoke$arity$variadic = G__6716__delegate;
    return G__6716;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__6719 = null;
        if (arguments.length > 2) {
          var G__6720__i = 0, G__6720__a = new Array(arguments.length - 2);
          while (G__6720__i < G__6720__a.length) {
            G__6720__a[G__6720__i] = arguments[G__6720__i + 2];
            ++G__6720__i;
          }
          G__6719 = new cljs.core.IndexedSeq(G__6720__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6719);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__6721__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__6721 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6722__i = 0, G__6722__a = new Array(arguments.length - 2);
        while (G__6722__i < G__6722__a.length) {
          G__6722__a[G__6722__i] = arguments[G__6722__i + 2];
          ++G__6722__i;
        }
        more = new cljs.core.IndexedSeq(G__6722__a, 0);
      }
      return G__6721__delegate.call(this, x, y, more);
    };
    G__6721.cljs$lang$maxFixedArity = 2;
    G__6721.cljs$lang$applyTo = function(arglist__6723) {
      var x = cljs.core.first(arglist__6723);
      arglist__6723 = cljs.core.next(arglist__6723);
      var y = cljs.core.first(arglist__6723);
      var more = cljs.core.rest(arglist__6723);
      return G__6721__delegate(x, y, more);
    };
    G__6721.cljs$core$IFn$_invoke$arity$variadic = G__6721__delegate;
    return G__6721;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__6724 = null;
        if (arguments.length > 2) {
          var G__6725__i = 0, G__6725__a = new Array(arguments.length - 2);
          while (G__6725__i < G__6725__a.length) {
            G__6725__a[G__6725__i] = arguments[G__6725__i + 2];
            ++G__6725__i;
          }
          G__6724 = new cljs.core.IndexedSeq(G__6725__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6724);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__6726__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__6726 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6727__i = 0, G__6727__a = new Array(arguments.length - 2);
        while (G__6727__i < G__6727__a.length) {
          G__6727__a[G__6727__i] = arguments[G__6727__i + 2];
          ++G__6727__i;
        }
        more = new cljs.core.IndexedSeq(G__6727__a, 0);
      }
      return G__6726__delegate.call(this, x, y, more);
    };
    G__6726.cljs$lang$maxFixedArity = 2;
    G__6726.cljs$lang$applyTo = function(arglist__6728) {
      var x = cljs.core.first(arglist__6728);
      arglist__6728 = cljs.core.next(arglist__6728);
      var y = cljs.core.first(arglist__6728);
      var more = cljs.core.rest(arglist__6728);
      return G__6726__delegate(x, y, more);
    };
    G__6726.cljs$core$IFn$_invoke$arity$variadic = G__6726__delegate;
    return G__6726;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__6729 = null;
        if (arguments.length > 2) {
          var G__6730__i = 0, G__6730__a = new Array(arguments.length - 2);
          while (G__6730__i < G__6730__a.length) {
            G__6730__a[G__6730__i] = arguments[G__6730__i + 2];
            ++G__6730__i;
          }
          G__6729 = new cljs.core.IndexedSeq(G__6730__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6729);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__6735__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__6735 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6736__i = 0, G__6736__a = new Array(arguments.length - 2);
        while (G__6736__i < G__6736__a.length) {
          G__6736__a[G__6736__i] = arguments[G__6736__i + 2];
          ++G__6736__i;
        }
        more = new cljs.core.IndexedSeq(G__6736__a, 0);
      }
      return G__6735__delegate.call(this, x, y, more);
    };
    G__6735.cljs$lang$maxFixedArity = 2;
    G__6735.cljs$lang$applyTo = function(arglist__6737) {
      var x = cljs.core.first(arglist__6737);
      arglist__6737 = cljs.core.next(arglist__6737);
      var y = cljs.core.first(arglist__6737);
      var more = cljs.core.rest(arglist__6737);
      return G__6735__delegate(x, y, more);
    };
    G__6735.cljs$core$IFn$_invoke$arity$variadic = G__6735__delegate;
    return G__6735;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__6738 = null;
        if (arguments.length > 2) {
          var G__6739__i = 0, G__6739__a = new Array(arguments.length - 2);
          while (G__6739__i < G__6739__a.length) {
            G__6739__a[G__6739__i] = arguments[G__6739__i + 2];
            ++G__6739__i;
          }
          G__6738 = new cljs.core.IndexedSeq(G__6739__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6738);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__6740__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__6740 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6741__i = 0, G__6741__a = new Array(arguments.length - 2);
        while (G__6741__i < G__6741__a.length) {
          G__6741__a[G__6741__i] = arguments[G__6741__i + 2];
          ++G__6741__i;
        }
        more = new cljs.core.IndexedSeq(G__6741__a, 0);
      }
      return G__6740__delegate.call(this, x, y, more);
    };
    G__6740.cljs$lang$maxFixedArity = 2;
    G__6740.cljs$lang$applyTo = function(arglist__6742) {
      var x = cljs.core.first(arglist__6742);
      arglist__6742 = cljs.core.next(arglist__6742);
      var y = cljs.core.first(arglist__6742);
      var more = cljs.core.rest(arglist__6742);
      return G__6740__delegate(x, y, more);
    };
    G__6740.cljs$core$IFn$_invoke$arity$variadic = G__6740__delegate;
    return G__6740;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__6743 = null;
        if (arguments.length > 2) {
          var G__6744__i = 0, G__6744__a = new Array(arguments.length - 2);
          while (G__6744__i < G__6744__a.length) {
            G__6744__a[G__6744__i] = arguments[G__6744__i + 2];
            ++G__6744__i;
          }
          G__6743 = new cljs.core.IndexedSeq(G__6744__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6743);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__6745__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__6745 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6746__i = 0, G__6746__a = new Array(arguments.length - 2);
        while (G__6746__i < G__6746__a.length) {
          G__6746__a[G__6746__i] = arguments[G__6746__i + 2];
          ++G__6746__i;
        }
        more = new cljs.core.IndexedSeq(G__6746__a, 0);
      }
      return G__6745__delegate.call(this, x, y, more);
    };
    G__6745.cljs$lang$maxFixedArity = 2;
    G__6745.cljs$lang$applyTo = function(arglist__6747) {
      var x = cljs.core.first(arglist__6747);
      arglist__6747 = cljs.core.next(arglist__6747);
      var y = cljs.core.first(arglist__6747);
      var more = cljs.core.rest(arglist__6747);
      return G__6745__delegate(x, y, more);
    };
    G__6745.cljs$core$IFn$_invoke$arity$variadic = G__6745__delegate;
    return G__6745;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__6748 = null;
        if (arguments.length > 2) {
          var G__6749__i = 0, G__6749__a = new Array(arguments.length - 2);
          while (G__6749__i < G__6749__a.length) {
            G__6749__a[G__6749__i] = arguments[G__6749__i + 2];
            ++G__6749__i;
          }
          G__6748 = new cljs.core.IndexedSeq(G__6749__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6748);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__6752 = x;
  var G__6753 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6752, G__6753) : cljs.core.mod.call(null, G__6752, G__6753);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__6754__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__6754 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6755__i = 0, G__6755__a = new Array(arguments.length - 2);
        while (G__6755__i < G__6755__a.length) {
          G__6755__a[G__6755__i] = arguments[G__6755__i + 2];
          ++G__6755__i;
        }
        more = new cljs.core.IndexedSeq(G__6755__a, 0);
      }
      return G__6754__delegate.call(this, x, y, more);
    };
    G__6754.cljs$lang$maxFixedArity = 2;
    G__6754.cljs$lang$applyTo = function(arglist__6756) {
      var x = cljs.core.first(arglist__6756);
      arglist__6756 = cljs.core.next(arglist__6756);
      var y = cljs.core.first(arglist__6756);
      var more = cljs.core.rest(arglist__6756);
      return G__6754__delegate(x, y, more);
    };
    G__6754.cljs$core$IFn$_invoke$arity$variadic = G__6754__delegate;
    return G__6754;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__6757 = null;
        if (arguments.length > 2) {
          var G__6758__i = 0, G__6758__a = new Array(arguments.length - 2);
          while (G__6758__i < G__6758__a.length) {
            G__6758__a[G__6758__i] = arguments[G__6758__i + 2];
            ++G__6758__i;
          }
          G__6757 = new cljs.core.IndexedSeq(G__6758__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6757);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__6759__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__6759 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6760__i = 0, G__6760__a = new Array(arguments.length - 2);
        while (G__6760__i < G__6760__a.length) {
          G__6760__a[G__6760__i] = arguments[G__6760__i + 2];
          ++G__6760__i;
        }
        more = new cljs.core.IndexedSeq(G__6760__a, 0);
      }
      return G__6759__delegate.call(this, x, y, more);
    };
    G__6759.cljs$lang$maxFixedArity = 2;
    G__6759.cljs$lang$applyTo = function(arglist__6761) {
      var x = cljs.core.first(arglist__6761);
      arglist__6761 = cljs.core.next(arglist__6761);
      var y = cljs.core.first(arglist__6761);
      var more = cljs.core.rest(arglist__6761);
      return G__6759__delegate(x, y, more);
    };
    G__6759.cljs$core$IFn$_invoke$arity$variadic = G__6759__delegate;
    return G__6759;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__6762 = null;
        if (arguments.length > 2) {
          var G__6763__i = 0, G__6763__a = new Array(arguments.length - 2);
          while (G__6763__i < G__6763__a.length) {
            G__6763__a[G__6763__i] = arguments[G__6763__i + 2];
            ++G__6763__i;
          }
          G__6762 = new cljs.core.IndexedSeq(G__6763__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6762);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__6766 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6766) : Math.floor.call(null, G__6766);
  } else {
    var G__6767 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6767) : Math.ceil.call(null, G__6767);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__6768__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__6768 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6769__i = 0, G__6769__a = new Array(arguments.length - 2);
        while (G__6769__i < G__6769__a.length) {
          G__6769__a[G__6769__i] = arguments[G__6769__i + 2];
          ++G__6769__i;
        }
        more = new cljs.core.IndexedSeq(G__6769__a, 0);
      }
      return G__6768__delegate.call(this, x, y, more);
    };
    G__6768.cljs$lang$maxFixedArity = 2;
    G__6768.cljs$lang$applyTo = function(arglist__6770) {
      var x = cljs.core.first(arglist__6770);
      arglist__6770 = cljs.core.next(arglist__6770);
      var y = cljs.core.first(arglist__6770);
      var more = cljs.core.rest(arglist__6770);
      return G__6768__delegate(x, y, more);
    };
    G__6768.cljs$core$IFn$_invoke$arity$variadic = G__6768__delegate;
    return G__6768;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__6771 = null;
        if (arguments.length > 2) {
          var G__6772__i = 0, G__6772__a = new Array(arguments.length - 2);
          while (G__6772__i < G__6772__a.length) {
            G__6772__a[G__6772__i] = arguments[G__6772__i + 2];
            ++G__6772__i;
          }
          G__6771 = new cljs.core.IndexedSeq(G__6772__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6771);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__6773__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__6773 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6774__i = 0, G__6774__a = new Array(arguments.length - 2);
        while (G__6774__i < G__6774__a.length) {
          G__6774__a[G__6774__i] = arguments[G__6774__i + 2];
          ++G__6774__i;
        }
        more = new cljs.core.IndexedSeq(G__6774__a, 0);
      }
      return G__6773__delegate.call(this, x, y, more);
    };
    G__6773.cljs$lang$maxFixedArity = 2;
    G__6773.cljs$lang$applyTo = function(arglist__6775) {
      var x = cljs.core.first(arglist__6775);
      arglist__6775 = cljs.core.next(arglist__6775);
      var y = cljs.core.first(arglist__6775);
      var more = cljs.core.rest(arglist__6775);
      return G__6773__delegate(x, y, more);
    };
    G__6773.cljs$core$IFn$_invoke$arity$variadic = G__6773__delegate;
    return G__6773;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__6776 = null;
        if (arguments.length > 2) {
          var G__6777__i = 0, G__6777__a = new Array(arguments.length - 2);
          while (G__6777__i < G__6777__a.length) {
            G__6777__a[G__6777__i] = arguments[G__6777__i + 2];
            ++G__6777__i;
          }
          G__6776 = new cljs.core.IndexedSeq(G__6777__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6776);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__6778__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__6778 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6779__i = 0, G__6779__a = new Array(arguments.length - 2);
        while (G__6779__i < G__6779__a.length) {
          G__6779__a[G__6779__i] = arguments[G__6779__i + 2];
          ++G__6779__i;
        }
        more = new cljs.core.IndexedSeq(G__6779__a, 0);
      }
      return G__6778__delegate.call(this, x, y, more);
    };
    G__6778.cljs$lang$maxFixedArity = 2;
    G__6778.cljs$lang$applyTo = function(arglist__6780) {
      var x = cljs.core.first(arglist__6780);
      arglist__6780 = cljs.core.next(arglist__6780);
      var y = cljs.core.first(arglist__6780);
      var more = cljs.core.rest(arglist__6780);
      return G__6778__delegate(x, y, more);
    };
    G__6778.cljs$core$IFn$_invoke$arity$variadic = G__6778__delegate;
    return G__6778;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__6781 = null;
        if (arguments.length > 2) {
          var G__6782__i = 0, G__6782__a = new Array(arguments.length - 2);
          while (G__6782__i < G__6782__a.length) {
            G__6782__a[G__6782__i] = arguments[G__6782__i + 2];
            ++G__6782__i;
          }
          G__6781 = new cljs.core.IndexedSeq(G__6782__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6781);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__6783__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__6783 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6784__i = 0, G__6784__a = new Array(arguments.length - 2);
        while (G__6784__i < G__6784__a.length) {
          G__6784__a[G__6784__i] = arguments[G__6784__i + 2];
          ++G__6784__i;
        }
        more = new cljs.core.IndexedSeq(G__6784__a, 0);
      }
      return G__6783__delegate.call(this, x, y, more);
    };
    G__6783.cljs$lang$maxFixedArity = 2;
    G__6783.cljs$lang$applyTo = function(arglist__6785) {
      var x = cljs.core.first(arglist__6785);
      arglist__6785 = cljs.core.next(arglist__6785);
      var y = cljs.core.first(arglist__6785);
      var more = cljs.core.rest(arglist__6785);
      return G__6783__delegate(x, y, more);
    };
    G__6783.cljs$core$IFn$_invoke$arity$variadic = G__6783__delegate;
    return G__6783;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__6786 = null;
        if (arguments.length > 2) {
          var G__6787__i = 0, G__6787__a = new Array(arguments.length - 2);
          while (G__6787__i < G__6787__a.length) {
            G__6787__a[G__6787__i] = arguments[G__6787__i + 2];
            ++G__6787__i;
          }
          G__6786 = new cljs.core.IndexedSeq(G__6787__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6786);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__6792__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__6793 = y;
            var G__6794 = cljs.core.first(more);
            var G__6795 = cljs.core.next(more);
            x = G__6793;
            y = G__6794;
            more = G__6795;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__6792 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__6796__i = 0, G__6796__a = new Array(arguments.length - 2);
        while (G__6796__i < G__6796__a.length) {
          G__6796__a[G__6796__i] = arguments[G__6796__i + 2];
          ++G__6796__i;
        }
        more = new cljs.core.IndexedSeq(G__6796__a, 0);
      }
      return G__6792__delegate.call(this, x, y, more);
    };
    G__6792.cljs$lang$maxFixedArity = 2;
    G__6792.cljs$lang$applyTo = function(arglist__6797) {
      var x = cljs.core.first(arglist__6797);
      arglist__6797 = cljs.core.next(arglist__6797);
      var y = cljs.core.first(arglist__6797);
      var more = cljs.core.rest(arglist__6797);
      return G__6792__delegate(x, y, more);
    };
    G__6792.cljs$core$IFn$_invoke$arity$variadic = G__6792__delegate;
    return G__6792;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__6798 = null;
        if (arguments.length > 2) {
          var G__6799__i = 0, G__6799__a = new Array(arguments.length - 2);
          while (G__6799__i < G__6799__a.length) {
            G__6799__a[G__6799__i] = arguments[G__6799__i + 2];
            ++G__6799__i;
          }
          G__6798 = new cljs.core.IndexedSeq(G__6799__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6798);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__6800 = n__$1 - 1;
      var G__6801 = cljs.core.next(xs);
      n__$1 = G__6800;
      xs = G__6801;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__6805 = x;
      return goog.string.buildString(G__6805);
    }
  };
  var str__2 = function() {
    var G__6806__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__6807 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__6808 = cljs.core.next(more);
          sb = G__6807;
          more = G__6808;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__6806 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__6809__i = 0, G__6809__a = new Array(arguments.length - 1);
        while (G__6809__i < G__6809__a.length) {
          G__6809__a[G__6809__i] = arguments[G__6809__i + 1];
          ++G__6809__i;
        }
        ys = new cljs.core.IndexedSeq(G__6809__a, 0);
      }
      return G__6806__delegate.call(this, x, ys);
    };
    G__6806.cljs$lang$maxFixedArity = 1;
    G__6806.cljs$lang$applyTo = function(arglist__6810) {
      var x = cljs.core.first(arglist__6810);
      var ys = cljs.core.rest(arglist__6810);
      return G__6806__delegate(x, ys);
    };
    G__6806.cljs$core$IFn$_invoke$arity$variadic = G__6806__delegate;
    return G__6806;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__6811 = null;
        if (arguments.length > 1) {
          var G__6812__i = 0, G__6812__a = new Array(arguments.length - 1);
          while (G__6812__i < G__6812__a.length) {
            G__6812__a[G__6812__i] = arguments[G__6812__i + 1];
            ++G__6812__i;
          }
          G__6811 = new cljs.core.IndexedSeq(G__6812__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6811);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__6813 = cljs.core.next(xs);
            var G__6814 = cljs.core.next(ys);
            xs = G__6813;
            ys = G__6814;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__6815 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__6816 = cljs.core.next(s);
        res = G__6815;
        s = G__6816;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__6821 = (h + (cljs.core.hash(function() {
        var G__6819 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6819) : cljs.core.key.call(null, G__6819);
      }()) ^ cljs.core.hash(function() {
        var G__6820 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6820) : cljs.core.val.call(null, G__6820);
      }()))) % 4503599627370496;
      var G__6822 = cljs.core.next(s);
      h = G__6821;
      s = G__6822;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__6823 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__6824 = cljs.core.next(s__$1);
      h = G__6823;
      s__$1 = G__6824;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__6835_6845 = cljs.core.seq(fn_map);
  var chunk__6836_6846 = null;
  var count__6837_6847 = 0;
  var i__6838_6848 = 0;
  while (true) {
    if (i__6838_6848 < count__6837_6847) {
      var vec__6839_6849 = chunk__6836_6846.cljs$core$IIndexed$_nth$arity$2(null, i__6838_6848);
      var key_name_6850 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6839_6849, 0, null);
      var f_6851 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6839_6849, 1, null);
      var str_name_6852 = function() {
        var G__6840 = key_name_6850;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6840) : cljs.core.name.call(null, G__6840);
      }();
      obj[str_name_6852] = f_6851;
      var G__6853 = seq__6835_6845;
      var G__6854 = chunk__6836_6846;
      var G__6855 = count__6837_6847;
      var G__6856 = i__6838_6848 + 1;
      seq__6835_6845 = G__6853;
      chunk__6836_6846 = G__6854;
      count__6837_6847 = G__6855;
      i__6838_6848 = G__6856;
      continue;
    } else {
      var temp__4126__auto___6857 = cljs.core.seq(seq__6835_6845);
      if (temp__4126__auto___6857) {
        var seq__6835_6858__$1 = temp__4126__auto___6857;
        if (cljs.core.chunked_seq_QMARK_(seq__6835_6858__$1)) {
          var c__4563__auto___6859 = function() {
            var G__6841 = seq__6835_6858__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6841) : cljs.core.chunk_first.call(null, G__6841);
          }();
          var G__6860 = function() {
            var G__6842 = seq__6835_6858__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6842) : cljs.core.chunk_rest.call(null, G__6842);
          }();
          var G__6861 = c__4563__auto___6859;
          var G__6862 = cljs.core.count(c__4563__auto___6859);
          var G__6863 = 0;
          seq__6835_6845 = G__6860;
          chunk__6836_6846 = G__6861;
          count__6837_6847 = G__6862;
          i__6838_6848 = G__6863;
          continue;
        } else {
          var vec__6843_6864 = cljs.core.first(seq__6835_6858__$1);
          var key_name_6865 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6843_6864, 0, null);
          var f_6866 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6843_6864, 1, null);
          var str_name_6867 = function() {
            var G__6844 = key_name_6865;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6844) : cljs.core.name.call(null, G__6844);
          }();
          obj[str_name_6867] = f_6866;
          var G__6868 = cljs.core.next(seq__6835_6858__$1);
          var G__6869 = null;
          var G__6870 = 0;
          var G__6871 = 0;
          seq__6835_6845 = G__6868;
          chunk__6836_6846 = G__6869;
          count__6837_6847 = G__6870;
          i__6838_6848 = G__6871;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__6873 = coll;
  if (G__6873) {
    var bit__4457__auto__ = G__6873.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4457__auto__ || G__6873.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__6873.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6873);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__6873);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__6874 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__6874;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__6875 = i - 1;
        var G__6876 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__6875;
        r = G__6876;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__6877__i = 0, G__6877__a = new Array(arguments.length - 0);
      while (G__6877__i < G__6877__a.length) {
        G__6877__a[G__6877__i] = arguments[G__6877__i + 0];
        ++G__6877__i;
      }
      xs = new cljs.core.IndexedSeq(G__6877__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__6878) {
    var xs = cljs.core.seq(arglist__6878);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3776__auto__ = coll == null;
    if (or__3776__auto__) {
      return or__3776__auto__;
    } else {
      var G__6882 = coll;
      if (G__6882) {
        var bit__4450__auto__ = G__6882.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4450__auto__ || G__6882.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__6884 = x;
  if (G__6884) {
    var bit__4457__auto__ = G__6884.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4457__auto__ || G__6884.cljs$core$IList$) {
      return true;
    } else {
      if (!G__6884.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6884);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__6884);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = cljs.core.not(a.ns);
      if (and__3764__auto__) {
        return b.ns;
      } else {
        return and__3764__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6891 = a.ns;
            var G__6892 = b.ns;
            return goog.array.defaultCompare(G__6891, G__6892);
          }();
          if (0 === nsc) {
            var G__6893 = a.name;
            var G__6894 = b.name;
            return goog.array.defaultCompare(G__6893, G__6894);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6895 = a.name;
        var G__6896 = b.name;
        return goog.array.defaultCompare(G__6895, G__6896);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4197__auto__ = self__._hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__6898 = null;
  var G__6898__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__6898__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__6898 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6898__2.call(this, self__, coll);
      case 3:
        return G__6898__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6898.cljs$core$IFn$_invoke$arity$2 = G__6898__2;
  G__6898.cljs$core$IFn$_invoke$arity$3 = G__6898__3;
  return G__6898;
}();
cljs.core.Keyword.prototype.apply = function(self__, args6897) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6897)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__6900 = x;
    if (G__6900) {
      var bit__4450__auto__ = G__6900.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4450__auto__ || G__6900.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__6902 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6902) : cljs.core.name.call(null, G__6902);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__6903 = ls.sval();
        ls = G__6903;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__6905 = s;
    if (G__6905) {
      var bit__4450__auto__ = G__6905.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4450__auto__ || G__6905.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__6906 = cljs.core.next(s__$1);
      s__$1 = G__6906;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_6907 = 0;
  var xs_6908 = cljs.core.seq(coll);
  while (true) {
    if (xs_6908) {
      ret[i_6907] = cljs.core.to_array(cljs.core.first(xs_6908));
      var G__6909 = i_6907 + 1;
      var G__6910 = cljs.core.next(xs_6908);
      i_6907 = G__6909;
      xs_6908 = G__6910;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6913 = i + 1;
          var G__6914 = cljs.core.next(s__$1);
          i = G__6913;
          s__$1 = G__6914;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___6915 = size;
      var i_6916 = 0;
      while (true) {
        if (i_6916 < n__4663__auto___6915) {
          a[i_6916] = init_val_or_seq;
          var G__6917 = i_6916 + 1;
          i_6916 = G__6917;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6920 = i + 1;
          var G__6921 = cljs.core.next(s__$1);
          i = G__6920;
          s__$1 = G__6921;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___6922 = size;
      var i_6923 = 0;
      while (true) {
        if (i_6923 < n__4663__auto___6922) {
          a[i_6923] = init_val_or_seq;
          var G__6924 = i_6923 + 1;
          i_6923 = G__6924;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6927 = i + 1;
          var G__6928 = cljs.core.next(s__$1);
          i = G__6927;
          s__$1 = G__6928;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___6929 = size;
      var i_6930 = 0;
      while (true) {
        if (i_6930 < n__4663__auto___6929) {
          a[i_6930] = init_val_or_seq;
          var G__6931 = i_6930 + 1;
          i_6930 = G__6931;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__6934 = i + 1;
          var G__6935 = cljs.core.next(s__$1);
          i = G__6934;
          s__$1 = G__6935;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4663__auto___6936 = size;
      var i_6937 = 0;
      while (true) {
        if (i_6937 < n__4663__auto___6936) {
          a[i_6937] = init_val_or_seq;
          var G__6938 = i_6937 + 1;
          i_6937 = G__6938;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__6939 = cljs.core.next(s__$1);
        var G__6940 = i - 1;
        var G__6941 = sum + 1;
        s__$1 = G__6939;
        i = G__6940;
        sum = G__6941;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__6961__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__6961 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__6962__i = 0, G__6962__a = new Array(arguments.length - 2);
        while (G__6962__i < G__6962__a.length) {
          G__6962__a[G__6962__i] = arguments[G__6962__i + 2];
          ++G__6962__i;
        }
        zs = new cljs.core.IndexedSeq(G__6962__a, 0);
      }
      return G__6961__delegate.call(this, x, y, zs);
    };
    G__6961.cljs$lang$maxFixedArity = 2;
    G__6961.cljs$lang$applyTo = function(arglist__6963) {
      var x = cljs.core.first(arglist__6963);
      arglist__6963 = cljs.core.next(arglist__6963);
      var y = cljs.core.first(arglist__6963);
      var zs = cljs.core.rest(arglist__6963);
      return G__6961__delegate(x, y, zs);
    };
    G__6961.cljs$core$IFn$_invoke$arity$variadic = G__6961__delegate;
    return G__6961;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__6964 = null;
        if (arguments.length > 2) {
          var G__6965__i = 0, G__6965__a = new Array(arguments.length - 2);
          while (G__6965__i < G__6965__a.length) {
            G__6965__a[G__6965__i] = arguments[G__6965__i + 2];
            ++G__6965__i;
          }
          G__6964 = new cljs.core.IndexedSeq(G__6965__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__6964);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__6966__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__6966 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__6967__i = 0, G__6967__a = new Array(arguments.length - 4);
        while (G__6967__i < G__6967__a.length) {
          G__6967__a[G__6967__i] = arguments[G__6967__i + 4];
          ++G__6967__i;
        }
        more = new cljs.core.IndexedSeq(G__6967__a, 0);
      }
      return G__6966__delegate.call(this, a, b, c, d, more);
    };
    G__6966.cljs$lang$maxFixedArity = 4;
    G__6966.cljs$lang$applyTo = function(arglist__6968) {
      var a = cljs.core.first(arglist__6968);
      arglist__6968 = cljs.core.next(arglist__6968);
      var b = cljs.core.first(arglist__6968);
      arglist__6968 = cljs.core.next(arglist__6968);
      var c = cljs.core.first(arglist__6968);
      arglist__6968 = cljs.core.next(arglist__6968);
      var d = cljs.core.first(arglist__6968);
      var more = cljs.core.rest(arglist__6968);
      return G__6966__delegate(a, b, c, d, more);
    };
    G__6966.cljs$core$IFn$_invoke$arity$variadic = G__6966__delegate;
    return G__6966;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__6969 = null;
        if (arguments.length > 4) {
          var G__6970__i = 0, G__6970__a = new Array(arguments.length - 4);
          while (G__6970__i < G__6970__a.length) {
            G__6970__a[G__6970__i] = arguments[G__6970__i + 4];
            ++G__6970__i;
          }
          G__6969 = new cljs.core.IndexedSeq(G__6970__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__6969);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__6971__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6972 = ntcoll;
          var G__6973 = cljs.core.first(vals);
          var G__6974 = cljs.core.next(vals);
          tcoll = G__6972;
          val = G__6973;
          vals = G__6974;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6971 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__6975__i = 0, G__6975__a = new Array(arguments.length - 2);
        while (G__6975__i < G__6975__a.length) {
          G__6975__a[G__6975__i] = arguments[G__6975__i + 2];
          ++G__6975__i;
        }
        vals = new cljs.core.IndexedSeq(G__6975__a, 0);
      }
      return G__6971__delegate.call(this, tcoll, val, vals);
    };
    G__6971.cljs$lang$maxFixedArity = 2;
    G__6971.cljs$lang$applyTo = function(arglist__6976) {
      var tcoll = cljs.core.first(arglist__6976);
      arglist__6976 = cljs.core.next(arglist__6976);
      var val = cljs.core.first(arglist__6976);
      var vals = cljs.core.rest(arglist__6976);
      return G__6971__delegate(tcoll, val, vals);
    };
    G__6971.cljs$core$IFn$_invoke$arity$variadic = G__6971__delegate;
    return G__6971;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__6977 = null;
        if (arguments.length > 2) {
          var G__6978__i = 0, G__6978__a = new Array(arguments.length - 2);
          while (G__6978__i < G__6978__a.length) {
            G__6978__a[G__6978__i] = arguments[G__6978__i + 2];
            ++G__6978__i;
          }
          G__6977 = new cljs.core.IndexedSeq(G__6978__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__6977);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__6979__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__6980 = ntcoll;
          var G__6981 = cljs.core.first(kvs);
          var G__6982 = cljs.core.second(kvs);
          var G__6983 = cljs.core.nnext(kvs);
          tcoll = G__6980;
          key = G__6981;
          val = G__6982;
          kvs = G__6983;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6979 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__6984__i = 0, G__6984__a = new Array(arguments.length - 3);
        while (G__6984__i < G__6984__a.length) {
          G__6984__a[G__6984__i] = arguments[G__6984__i + 3];
          ++G__6984__i;
        }
        kvs = new cljs.core.IndexedSeq(G__6984__a, 0);
      }
      return G__6979__delegate.call(this, tcoll, key, val, kvs);
    };
    G__6979.cljs$lang$maxFixedArity = 3;
    G__6979.cljs$lang$applyTo = function(arglist__6985) {
      var tcoll = cljs.core.first(arglist__6985);
      arglist__6985 = cljs.core.next(arglist__6985);
      var key = cljs.core.first(arglist__6985);
      arglist__6985 = cljs.core.next(arglist__6985);
      var val = cljs.core.first(arglist__6985);
      var kvs = cljs.core.rest(arglist__6985);
      return G__6979__delegate(tcoll, key, val, kvs);
    };
    G__6979.cljs$core$IFn$_invoke$arity$variadic = G__6979__delegate;
    return G__6979;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__6986 = null;
        if (arguments.length > 3) {
          var G__6987__i = 0, G__6987__a = new Array(arguments.length - 3);
          while (G__6987__i < G__6987__a.length) {
            G__6987__a[G__6987__i] = arguments[G__6987__i + 3];
            ++G__6987__i;
          }
          G__6986 = new cljs.core.IndexedSeq(G__6987__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__6986);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__6988__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__6989 = ntcoll;
          var G__6990 = cljs.core.first(ks);
          var G__6991 = cljs.core.next(ks);
          tcoll = G__6989;
          key = G__6990;
          ks = G__6991;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6988 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__6992__i = 0, G__6992__a = new Array(arguments.length - 2);
        while (G__6992__i < G__6992__a.length) {
          G__6992__a[G__6992__i] = arguments[G__6992__i + 2];
          ++G__6992__i;
        }
        ks = new cljs.core.IndexedSeq(G__6992__a, 0);
      }
      return G__6988__delegate.call(this, tcoll, key, ks);
    };
    G__6988.cljs$lang$maxFixedArity = 2;
    G__6988.cljs$lang$applyTo = function(arglist__6993) {
      var tcoll = cljs.core.first(arglist__6993);
      arglist__6993 = cljs.core.next(arglist__6993);
      var key = cljs.core.first(arglist__6993);
      var ks = cljs.core.rest(arglist__6993);
      return G__6988__delegate(tcoll, key, ks);
    };
    G__6988.cljs$core$IFn$_invoke$arity$variadic = G__6988__delegate;
    return G__6988;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__6994 = null;
        if (arguments.length > 2) {
          var G__6995__i = 0, G__6995__a = new Array(arguments.length - 2);
          while (G__6995__i < G__6995__a.length) {
            G__6995__a[G__6995__i] = arguments[G__6995__i + 2];
            ++G__6995__i;
          }
          G__6994 = new cljs.core.IndexedSeq(G__6995__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__6994);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__6996__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__6997 = ntcoll;
          var G__6998 = cljs.core.first(vals);
          var G__6999 = cljs.core.next(vals);
          tcoll = G__6997;
          val = G__6998;
          vals = G__6999;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__6996 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__7000__i = 0, G__7000__a = new Array(arguments.length - 2);
        while (G__7000__i < G__7000__a.length) {
          G__7000__a[G__7000__i] = arguments[G__7000__i + 2];
          ++G__7000__i;
        }
        vals = new cljs.core.IndexedSeq(G__7000__a, 0);
      }
      return G__6996__delegate.call(this, tcoll, val, vals);
    };
    G__6996.cljs$lang$maxFixedArity = 2;
    G__6996.cljs$lang$applyTo = function(arglist__7001) {
      var tcoll = cljs.core.first(arglist__7001);
      arglist__7001 = cljs.core.next(arglist__7001);
      var val = cljs.core.first(arglist__7001);
      var vals = cljs.core.rest(arglist__7001);
      return G__6996__delegate(tcoll, val, vals);
    };
    G__6996.cljs$core$IFn$_invoke$arity$variadic = G__6996__delegate;
    return G__6996;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__7002 = null;
        if (arguments.length > 2) {
          var G__7003__i = 0, G__7003__a = new Array(arguments.length - 2);
          while (G__7003__i < G__7003__a.length) {
            G__7003__a[G__7003__i] = arguments[G__7003__i + 2];
            ++G__7003__i;
          }
          G__7002 = new cljs.core.IndexedSeq(G__7003__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__7002);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4707 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4707);
      } else {
        var G__7214 = a4707;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7214) : f.call(null, G__7214);
      }
    } else {
      var b4708 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4707, b4708);
        } else {
          var G__7215 = a4707;
          var G__7216 = b4708;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7215, G__7216) : f.call(null, G__7215, G__7216);
        }
      } else {
        var c4709 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4707, b4708, c4709);
          } else {
            var G__7217 = a4707;
            var G__7218 = b4708;
            var G__7219 = c4709;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7217, G__7218, G__7219) : f.call(null, G__7217, G__7218, G__7219);
          }
        } else {
          var d4710 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4707, b4708, c4709, d4710);
            } else {
              var G__7220 = a4707;
              var G__7221 = b4708;
              var G__7222 = c4709;
              var G__7223 = d4710;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7220, G__7221, G__7222, G__7223) : f.call(null, G__7220, G__7221, G__7222, G__7223);
            }
          } else {
            var e4711 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4707, b4708, c4709, d4710, e4711);
              } else {
                var G__7224 = a4707;
                var G__7225 = b4708;
                var G__7226 = c4709;
                var G__7227 = d4710;
                var G__7228 = e4711;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7224, G__7225, G__7226, G__7227, G__7228) : f.call(null, G__7224, G__7225, G__7226, G__7227, G__7228);
              }
            } else {
              var f4712 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4707, b4708, c4709, d4710, e4711, f4712);
                } else {
                  var G__7229 = a4707;
                  var G__7230 = b4708;
                  var G__7231 = c4709;
                  var G__7232 = d4710;
                  var G__7233 = e4711;
                  var G__7234 = f4712;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7229, G__7230, G__7231, G__7232, G__7233, G__7234) : f.call(null, G__7229, G__7230, G__7231, G__7232, G__7233, G__7234);
                }
              } else {
                var g4713 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4707, b4708, c4709, d4710, e4711, f4712, g4713);
                  } else {
                    var G__7235 = a4707;
                    var G__7236 = b4708;
                    var G__7237 = c4709;
                    var G__7238 = d4710;
                    var G__7239 = e4711;
                    var G__7240 = f4712;
                    var G__7241 = g4713;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7235, G__7236, G__7237, G__7238, G__7239, G__7240, G__7241) : f.call(null, G__7235, G__7236, G__7237, G__7238, G__7239, G__7240, G__7241);
                  }
                } else {
                  var h4714 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714);
                    } else {
                      var G__7242 = a4707;
                      var G__7243 = b4708;
                      var G__7244 = c4709;
                      var G__7245 = d4710;
                      var G__7246 = e4711;
                      var G__7247 = f4712;
                      var G__7248 = g4713;
                      var G__7249 = h4714;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7242, G__7243, G__7244, G__7245, G__7246, G__7247, G__7248, G__7249) : f.call(null, G__7242, G__7243, G__7244, G__7245, G__7246, G__7247, G__7248, G__7249);
                    }
                  } else {
                    var i4715 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715);
                      } else {
                        var G__7250 = a4707;
                        var G__7251 = b4708;
                        var G__7252 = c4709;
                        var G__7253 = d4710;
                        var G__7254 = e4711;
                        var G__7255 = f4712;
                        var G__7256 = g4713;
                        var G__7257 = h4714;
                        var G__7258 = i4715;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7250, G__7251, G__7252, G__7253, G__7254, G__7255, G__7256, G__7257, G__7258) : f.call(null, G__7250, G__7251, G__7252, G__7253, G__7254, G__7255, G__7256, G__7257, G__7258);
                      }
                    } else {
                      var j4716 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716);
                        } else {
                          var G__7259 = a4707;
                          var G__7260 = b4708;
                          var G__7261 = c4709;
                          var G__7262 = d4710;
                          var G__7263 = e4711;
                          var G__7264 = f4712;
                          var G__7265 = g4713;
                          var G__7266 = h4714;
                          var G__7267 = i4715;
                          var G__7268 = j4716;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7259, G__7260, G__7261, G__7262, G__7263, G__7264, G__7265, G__7266, G__7267, G__7268) : f.call(null, G__7259, G__7260, G__7261, G__7262, G__7263, G__7264, G__7265, G__7266, G__7267, G__7268);
                        }
                      } else {
                        var k4717 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717);
                          } else {
                            var G__7269 = a4707;
                            var G__7270 = b4708;
                            var G__7271 = c4709;
                            var G__7272 = d4710;
                            var G__7273 = e4711;
                            var G__7274 = f4712;
                            var G__7275 = g4713;
                            var G__7276 = h4714;
                            var G__7277 = i4715;
                            var G__7278 = j4716;
                            var G__7279 = k4717;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7269, G__7270, G__7271, G__7272, G__7273, G__7274, G__7275, G__7276, G__7277, G__7278, G__7279) : f.call(null, G__7269, G__7270, G__7271, G__7272, G__7273, G__7274, G__7275, G__7276, G__7277, G__7278, G__7279);
                          }
                        } else {
                          var l4718 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718);
                            } else {
                              var G__7280 = a4707;
                              var G__7281 = b4708;
                              var G__7282 = c4709;
                              var G__7283 = d4710;
                              var G__7284 = e4711;
                              var G__7285 = f4712;
                              var G__7286 = g4713;
                              var G__7287 = h4714;
                              var G__7288 = i4715;
                              var G__7289 = j4716;
                              var G__7290 = k4717;
                              var G__7291 = l4718;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7280, G__7281, G__7282, G__7283, G__7284, G__7285, G__7286, G__7287, G__7288, G__7289, G__7290, G__7291) : f.call(null, G__7280, G__7281, G__7282, G__7283, G__7284, G__7285, G__7286, G__7287, G__7288, G__7289, G__7290, G__7291);
                            }
                          } else {
                            var m4719 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719);
                              } else {
                                var G__7292 = a4707;
                                var G__7293 = b4708;
                                var G__7294 = c4709;
                                var G__7295 = d4710;
                                var G__7296 = e4711;
                                var G__7297 = f4712;
                                var G__7298 = g4713;
                                var G__7299 = h4714;
                                var G__7300 = i4715;
                                var G__7301 = j4716;
                                var G__7302 = k4717;
                                var G__7303 = l4718;
                                var G__7304 = m4719;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7292, G__7293, G__7294, G__7295, G__7296, G__7297, G__7298, G__7299, G__7300, G__7301, G__7302, G__7303, G__7304) : f.call(null, G__7292, G__7293, G__7294, G__7295, G__7296, G__7297, G__7298, G__7299, G__7300, G__7301, G__7302, G__7303, G__7304);
                              }
                            } else {
                              var n4720 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720);
                                } else {
                                  var G__7305 = a4707;
                                  var G__7306 = b4708;
                                  var G__7307 = c4709;
                                  var G__7308 = d4710;
                                  var G__7309 = e4711;
                                  var G__7310 = f4712;
                                  var G__7311 = g4713;
                                  var G__7312 = h4714;
                                  var G__7313 = i4715;
                                  var G__7314 = j4716;
                                  var G__7315 = k4717;
                                  var G__7316 = l4718;
                                  var G__7317 = m4719;
                                  var G__7318 = n4720;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7305, G__7306, G__7307, G__7308, G__7309, G__7310, G__7311, G__7312, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318) : f.call(null, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310, G__7311, G__7312, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318);
                                }
                              } else {
                                var o4721 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721);
                                  } else {
                                    var G__7319 = a4707;
                                    var G__7320 = b4708;
                                    var G__7321 = c4709;
                                    var G__7322 = d4710;
                                    var G__7323 = e4711;
                                    var G__7324 = f4712;
                                    var G__7325 = g4713;
                                    var G__7326 = h4714;
                                    var G__7327 = i4715;
                                    var G__7328 = j4716;
                                    var G__7329 = k4717;
                                    var G__7330 = l4718;
                                    var G__7331 = m4719;
                                    var G__7332 = n4720;
                                    var G__7333 = o4721;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326, G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333) : f.call(null, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325, G__7326, G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333);
                                  }
                                } else {
                                  var p4722 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722);
                                    } else {
                                      var G__7334 = a4707;
                                      var G__7335 = b4708;
                                      var G__7336 = c4709;
                                      var G__7337 = d4710;
                                      var G__7338 = e4711;
                                      var G__7339 = f4712;
                                      var G__7340 = g4713;
                                      var G__7341 = h4714;
                                      var G__7342 = i4715;
                                      var G__7343 = j4716;
                                      var G__7344 = k4717;
                                      var G__7345 = l4718;
                                      var G__7346 = m4719;
                                      var G__7347 = n4720;
                                      var G__7348 = o4721;
                                      var G__7349 = p4722;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7334, G__7335, G__7336, G__7337, G__7338, G__7339, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349) : f.call(null, G__7334, G__7335, G__7336, G__7337, G__7338, G__7339, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349);
                                    }
                                  } else {
                                    var q4723 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723);
                                      } else {
                                        var G__7350 = a4707;
                                        var G__7351 = b4708;
                                        var G__7352 = c4709;
                                        var G__7353 = d4710;
                                        var G__7354 = e4711;
                                        var G__7355 = f4712;
                                        var G__7356 = g4713;
                                        var G__7357 = h4714;
                                        var G__7358 = i4715;
                                        var G__7359 = j4716;
                                        var G__7360 = k4717;
                                        var G__7361 = l4718;
                                        var G__7362 = m4719;
                                        var G__7363 = n4720;
                                        var G__7364 = o4721;
                                        var G__7365 = p4722;
                                        var G__7366 = q4723;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366) : f.call(null, G__7350, G__7351, G__7352, G__7353, G__7354, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366);
                                      }
                                    } else {
                                      var r4724 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723, r4724);
                                        } else {
                                          var G__7367 = a4707;
                                          var G__7368 = b4708;
                                          var G__7369 = c4709;
                                          var G__7370 = d4710;
                                          var G__7371 = e4711;
                                          var G__7372 = f4712;
                                          var G__7373 = g4713;
                                          var G__7374 = h4714;
                                          var G__7375 = i4715;
                                          var G__7376 = j4716;
                                          var G__7377 = k4717;
                                          var G__7378 = l4718;
                                          var G__7379 = m4719;
                                          var G__7380 = n4720;
                                          var G__7381 = o4721;
                                          var G__7382 = p4722;
                                          var G__7383 = q4723;
                                          var G__7384 = r4724;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384) : f.call(null, G__7367, G__7368, G__7369, G__7370, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384);
                                        }
                                      } else {
                                        var s4725 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723, r4724, s4725);
                                          } else {
                                            var G__7385 = a4707;
                                            var G__7386 = b4708;
                                            var G__7387 = c4709;
                                            var G__7388 = d4710;
                                            var G__7389 = e4711;
                                            var G__7390 = f4712;
                                            var G__7391 = g4713;
                                            var G__7392 = h4714;
                                            var G__7393 = i4715;
                                            var G__7394 = j4716;
                                            var G__7395 = k4717;
                                            var G__7396 = l4718;
                                            var G__7397 = m4719;
                                            var G__7398 = n4720;
                                            var G__7399 = o4721;
                                            var G__7400 = p4722;
                                            var G__7401 = q4723;
                                            var G__7402 = r4724;
                                            var G__7403 = s4725;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7385, G__7386, G__7387, G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403) : f.call(null, G__7385, G__7386, G__7387, G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403);
                                          }
                                        } else {
                                          var t4726 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4707, b4708, c4709, d4710, e4711, f4712, g4713, h4714, i4715, j4716, k4717, l4718, m4719, n4720, o4721, p4722, q4723, r4724, s4725, t4726);
                                            } else {
                                              var G__7404 = a4707;
                                              var G__7405 = b4708;
                                              var G__7406 = c4709;
                                              var G__7407 = d4710;
                                              var G__7408 = e4711;
                                              var G__7409 = f4712;
                                              var G__7410 = g4713;
                                              var G__7411 = h4714;
                                              var G__7412 = i4715;
                                              var G__7413 = j4716;
                                              var G__7414 = k4717;
                                              var G__7415 = l4718;
                                              var G__7416 = m4719;
                                              var G__7417 = n4720;
                                              var G__7418 = o4721;
                                              var G__7419 = p4722;
                                              var G__7420 = q4723;
                                              var G__7421 = r4724;
                                              var G__7422 = s4725;
                                              var G__7423 = t4726;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7404, G__7405, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418, G__7419, G__7420, G__7421, G__7422, G__7423) : f.call(null, G__7404, G__7405, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418, G__7419, G__7420, G__7421, G__7422, G__7423);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__7424__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__7424 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__7425__i = 0, G__7425__a = new Array(arguments.length - 5);
        while (G__7425__i < G__7425__a.length) {
          G__7425__a[G__7425__i] = arguments[G__7425__i + 5];
          ++G__7425__i;
        }
        args = new cljs.core.IndexedSeq(G__7425__a, 0);
      }
      return G__7424__delegate.call(this, f, a, b, c, d, args);
    };
    G__7424.cljs$lang$maxFixedArity = 5;
    G__7424.cljs$lang$applyTo = function(arglist__7426) {
      var f = cljs.core.first(arglist__7426);
      arglist__7426 = cljs.core.next(arglist__7426);
      var a = cljs.core.first(arglist__7426);
      arglist__7426 = cljs.core.next(arglist__7426);
      var b = cljs.core.first(arglist__7426);
      arglist__7426 = cljs.core.next(arglist__7426);
      var c = cljs.core.first(arglist__7426);
      arglist__7426 = cljs.core.next(arglist__7426);
      var d = cljs.core.first(arglist__7426);
      var args = cljs.core.rest(arglist__7426);
      return G__7424__delegate(f, a, b, c, d, args);
    };
    G__7424.cljs$core$IFn$_invoke$arity$variadic = G__7424__delegate;
    return G__7424;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__7427 = null;
        if (arguments.length > 5) {
          var G__7428__i = 0, G__7428__a = new Array(arguments.length - 5);
          while (G__7428__i < G__7428__a.length) {
            G__7428__a[G__7428__i] = arguments[G__7428__i + 5];
            ++G__7428__i;
          }
          G__7427 = new cljs.core.IndexedSeq(G__7428__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__7427);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__7444 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7444) : f.call(null, G__7444);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__7445 = cljs.core.meta(obj);
      var G__7446 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7445, G__7446) : f.call(null, G__7445, G__7446);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__7447 = cljs.core.meta(obj);
      var G__7448 = a;
      var G__7449 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7447, G__7448, G__7449) : f.call(null, G__7447, G__7448, G__7449);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__7450 = cljs.core.meta(obj);
      var G__7451 = a;
      var G__7452 = b;
      var G__7453 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7450, G__7451, G__7452, G__7453) : f.call(null, G__7450, G__7451, G__7452, G__7453);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__7454 = cljs.core.meta(obj);
      var G__7455 = a;
      var G__7456 = b;
      var G__7457 = c;
      var G__7458 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7454, G__7455, G__7456, G__7457, G__7458) : f.call(null, G__7454, G__7455, G__7456, G__7457, G__7458);
    }());
  };
  var vary_meta__7 = function() {
    var G__7459__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__7459 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__7460__i = 0, G__7460__a = new Array(arguments.length - 6);
        while (G__7460__i < G__7460__a.length) {
          G__7460__a[G__7460__i] = arguments[G__7460__i + 6];
          ++G__7460__i;
        }
        args = new cljs.core.IndexedSeq(G__7460__a, 0);
      }
      return G__7459__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__7459.cljs$lang$maxFixedArity = 6;
    G__7459.cljs$lang$applyTo = function(arglist__7461) {
      var obj = cljs.core.first(arglist__7461);
      arglist__7461 = cljs.core.next(arglist__7461);
      var f = cljs.core.first(arglist__7461);
      arglist__7461 = cljs.core.next(arglist__7461);
      var a = cljs.core.first(arglist__7461);
      arglist__7461 = cljs.core.next(arglist__7461);
      var b = cljs.core.first(arglist__7461);
      arglist__7461 = cljs.core.next(arglist__7461);
      var c = cljs.core.first(arglist__7461);
      arglist__7461 = cljs.core.next(arglist__7461);
      var d = cljs.core.first(arglist__7461);
      var args = cljs.core.rest(arglist__7461);
      return G__7459__delegate(obj, f, a, b, c, d, args);
    };
    G__7459.cljs$core$IFn$_invoke$arity$variadic = G__7459__delegate;
    return G__7459;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__7462 = null;
        if (arguments.length > 6) {
          var G__7463__i = 0, G__7463__a = new Array(arguments.length - 6);
          while (G__7463__i < G__7463__a.length) {
            G__7463__a[G__7463__i] = arguments[G__7463__i + 6];
            ++G__7463__i;
          }
          G__7462 = new cljs.core.IndexedSeq(G__7463__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__7462);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__7464__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__7464 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__7465__i = 0, G__7465__a = new Array(arguments.length - 2);
        while (G__7465__i < G__7465__a.length) {
          G__7465__a[G__7465__i] = arguments[G__7465__i + 2];
          ++G__7465__i;
        }
        more = new cljs.core.IndexedSeq(G__7465__a, 0);
      }
      return G__7464__delegate.call(this, x, y, more);
    };
    G__7464.cljs$lang$maxFixedArity = 2;
    G__7464.cljs$lang$applyTo = function(arglist__7466) {
      var x = cljs.core.first(arglist__7466);
      arglist__7466 = cljs.core.next(arglist__7466);
      var y = cljs.core.first(arglist__7466);
      var more = cljs.core.rest(arglist__7466);
      return G__7464__delegate(x, y, more);
    };
    G__7464.cljs$core$IFn$_invoke$arity$variadic = G__7464__delegate;
    return G__7464;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__7467 = null;
        if (arguments.length > 2) {
          var G__7468__i = 0, G__7468__a = new Array(arguments.length - 2);
          while (G__7468__i < G__7468__a.length) {
            G__7468__a[G__7468__i] = arguments[G__7468__i + 2];
            ++G__7468__i;
          }
          G__7467 = new cljs.core.IndexedSeq(G__7468__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7467);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t7472 !== "undefined") {
  } else {
    cljs.core.t7472 = function(nil_iter, meta7473) {
      this.nil_iter = nil_iter;
      this.meta7473 = meta7473;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t7472.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t7472.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t7472.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t7472.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7474) {
      var self__ = this;
      var _7474__$1 = this;
      return self__.meta7473;
    };
    cljs.core.t7472.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7474, meta7473__$1) {
      var self__ = this;
      var _7474__$1 = this;
      return new cljs.core.t7472(self__.nil_iter, meta7473__$1);
    };
    cljs.core.t7472.cljs$lang$type = true;
    cljs.core.t7472.cljs$lang$ctorStr = "cljs.core/t7472";
    cljs.core.t7472.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
      return cljs.core._write(writer__4364__auto__, "cljs.core/t7472");
    };
    cljs.core.__GT_t7472 = function __GT_t7472(nil_iter__$1, meta7473) {
      return new cljs.core.t7472(nil_iter__$1, meta7473);
    };
  }
  return new cljs.core.t7472(nil_iter, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 54, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 3063, new cljs.core.Keyword(null, "column", "column", 2078222095), 3, new cljs.core.Keyword(null, "line", "line", 212345235), 3059, new cljs.core.Keyword(null, "file", "file", -1269645878), "C:\\cygwin\\home\\Larry\\professional\\projects\\hf-cljs\\target\\cljsbuild-compiler-0\\cljs\\core.cljs"], 
  null));
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = !(lt.stepper == null);
      if (and__3764__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3764__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7475 = lt;
        var G__7476 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7475, G__7476) : self__.xform.call(null, G__7475, G__7476);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7477 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7477) : self__.xform.call(null, G__7477);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__7479 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7479) : xform.call(null, G__7479);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7481 = cljs.core.next(iters__$1);
        iters__$1 = G__7481;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4663__auto___7482 = self__.iters.length;
  var i_7483 = 0;
  while (true) {
    if (i_7483 < n__4663__auto___7482) {
      self__.nexts[i_7483] = self__.iters[i_7483].next();
      var G__7484 = i_7483 + 1;
      i_7483 = G__7484;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3764__auto__ = !(lt.stepper == null);
      if (and__3764__auto__) {
        return this$.hasNext();
      } else {
        return and__3764__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__7480 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__7480) : self__.xform.call(null, G__7480);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__7489 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7489) : xform.call(null, G__7489);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7490_7494 = cljs.core.seq(colls);
  var chunk__7491_7495 = null;
  var count__7492_7496 = 0;
  var i__7493_7497 = 0;
  while (true) {
    if (i__7493_7497 < count__7492_7496) {
      var coll_7498 = chunk__7491_7495.cljs$core$IIndexed$_nth$arity$2(null, i__7493_7497);
      iters.push(cljs.core.iter(coll_7498));
      var G__7499 = seq__7490_7494;
      var G__7500 = chunk__7491_7495;
      var G__7501 = count__7492_7496;
      var G__7502 = i__7493_7497 + 1;
      seq__7490_7494 = G__7499;
      chunk__7491_7495 = G__7500;
      count__7492_7496 = G__7501;
      i__7493_7497 = G__7502;
      continue;
    } else {
      var temp__4126__auto___7503 = cljs.core.seq(seq__7490_7494);
      if (temp__4126__auto___7503) {
        var seq__7490_7504__$1 = temp__4126__auto___7503;
        if (cljs.core.chunked_seq_QMARK_(seq__7490_7504__$1)) {
          var c__4563__auto___7505 = cljs.core.chunk_first(seq__7490_7504__$1);
          var G__7506 = cljs.core.chunk_rest(seq__7490_7504__$1);
          var G__7507 = c__4563__auto___7505;
          var G__7508 = cljs.core.count(c__4563__auto___7505);
          var G__7509 = 0;
          seq__7490_7494 = G__7506;
          chunk__7491_7495 = G__7507;
          count__7492_7496 = G__7508;
          i__7493_7497 = G__7509;
          continue;
        } else {
          var coll_7510 = cljs.core.first(seq__7490_7504__$1);
          iters.push(cljs.core.iter(coll_7510));
          var G__7511 = cljs.core.next(seq__7490_7504__$1);
          var G__7512 = null;
          var G__7513 = 0;
          var G__7514 = 0;
          seq__7490_7494 = G__7511;
          chunk__7491_7495 = G__7512;
          count__7492_7496 = G__7513;
          i__7493_7497 = G__7514;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3776__auto__ = cljs.core.seq(coll);
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__7515__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__7515 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__7516__i = 0, G__7516__a = new Array(arguments.length - 2);
        while (G__7516__i < G__7516__a.length) {
          G__7516__a[G__7516__i] = arguments[G__7516__i + 2];
          ++G__7516__i;
        }
        colls = new cljs.core.IndexedSeq(G__7516__a, 0);
      }
      return G__7515__delegate.call(this, xform, coll, colls);
    };
    G__7515.cljs$lang$maxFixedArity = 2;
    G__7515.cljs$lang$applyTo = function(arglist__7517) {
      var xform = cljs.core.first(arglist__7517);
      arglist__7517 = cljs.core.next(arglist__7517);
      var coll = cljs.core.first(arglist__7517);
      var colls = cljs.core.rest(arglist__7517);
      return G__7515__delegate(xform, coll, colls);
    };
    G__7515.cljs$core$IFn$_invoke$arity$variadic = G__7515__delegate;
    return G__7515;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__7518 = null;
        if (arguments.length > 2) {
          var G__7519__i = 0, G__7519__a = new Array(arguments.length - 2);
          while (G__7519__i < G__7519__a.length) {
            G__7519__a[G__7519__i] = arguments[G__7519__i + 2];
            ++G__7519__i;
          }
          G__7518 = new cljs.core.IndexedSeq(G__7519__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__7518);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7521 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7521) : pred.call(null, G__7521);
      }())) {
        var G__7522 = pred;
        var G__7523 = cljs.core.next(coll);
        pred = G__7522;
        coll = G__7523;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3776__auto__ = function() {
        var G__7527 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7527) : pred.call(null, G__7527);
      }();
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        var G__7528 = pred;
        var G__7529 = cljs.core.next(coll);
        pred = G__7528;
        coll = G__7529;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__7536 = null;
    var G__7536__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__7536__1 = function(x) {
      return cljs.core.not(function() {
        var G__7533 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7533) : f.call(null, G__7533);
      }());
    };
    var G__7536__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__7534 = x;
        var G__7535 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7534, G__7535) : f.call(null, G__7534, G__7535);
      }());
    };
    var G__7536__3 = function() {
      var G__7537__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7537 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7538__i = 0, G__7538__a = new Array(arguments.length - 2);
          while (G__7538__i < G__7538__a.length) {
            G__7538__a[G__7538__i] = arguments[G__7538__i + 2];
            ++G__7538__i;
          }
          zs = new cljs.core.IndexedSeq(G__7538__a, 0);
        }
        return G__7537__delegate.call(this, x, y, zs);
      };
      G__7537.cljs$lang$maxFixedArity = 2;
      G__7537.cljs$lang$applyTo = function(arglist__7539) {
        var x = cljs.core.first(arglist__7539);
        arglist__7539 = cljs.core.next(arglist__7539);
        var y = cljs.core.first(arglist__7539);
        var zs = cljs.core.rest(arglist__7539);
        return G__7537__delegate(x, y, zs);
      };
      G__7537.cljs$core$IFn$_invoke$arity$variadic = G__7537__delegate;
      return G__7537;
    }();
    G__7536 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7536__0.call(this);
        case 1:
          return G__7536__1.call(this, x);
        case 2:
          return G__7536__2.call(this, x, y);
        default:
          var G__7540 = null;
          if (arguments.length > 2) {
            var G__7541__i = 0, G__7541__a = new Array(arguments.length - 2);
            while (G__7541__i < G__7541__a.length) {
              G__7541__a[G__7541__i] = arguments[G__7541__i + 2];
              ++G__7541__i;
            }
            G__7540 = new cljs.core.IndexedSeq(G__7541__a, 0);
          }
          return G__7536__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7540);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7536.cljs$lang$maxFixedArity = 2;
    G__7536.cljs$lang$applyTo = G__7536__3.cljs$lang$applyTo;
    G__7536.cljs$core$IFn$_invoke$arity$0 = G__7536__0;
    G__7536.cljs$core$IFn$_invoke$arity$1 = G__7536__1;
    G__7536.cljs$core$IFn$_invoke$arity$2 = G__7536__2;
    G__7536.cljs$core$IFn$_invoke$arity$variadic = G__7536__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7536;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__7542__delegate = function(args) {
      return x;
    };
    var G__7542 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7543__i = 0, G__7543__a = new Array(arguments.length - 0);
        while (G__7543__i < G__7543__a.length) {
          G__7543__a[G__7543__i] = arguments[G__7543__i + 0];
          ++G__7543__i;
        }
        args = new cljs.core.IndexedSeq(G__7543__a, 0);
      }
      return G__7542__delegate.call(this, args);
    };
    G__7542.cljs$lang$maxFixedArity = 0;
    G__7542.cljs$lang$applyTo = function(arglist__7544) {
      var args = cljs.core.seq(arglist__7544);
      return G__7542__delegate(args);
    };
    G__7542.cljs$core$IFn$_invoke$arity$variadic = G__7542__delegate;
    return G__7542;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__7599 = null;
      var G__7599__0 = function() {
        var G__7572 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7572) : f.call(null, G__7572);
      };
      var G__7599__1 = function(x) {
        var G__7573 = function() {
          var G__7574 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7574) : g.call(null, G__7574);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7573) : f.call(null, G__7573);
      };
      var G__7599__2 = function(x, y) {
        var G__7575 = function() {
          var G__7576 = x;
          var G__7577 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7576, G__7577) : g.call(null, G__7576, G__7577);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7575) : f.call(null, G__7575);
      };
      var G__7599__3 = function(x, y, z) {
        var G__7578 = function() {
          var G__7579 = x;
          var G__7580 = y;
          var G__7581 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7579, G__7580, G__7581) : g.call(null, G__7579, G__7580, G__7581);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7578) : f.call(null, G__7578);
      };
      var G__7599__4 = function() {
        var G__7600__delegate = function(x, y, z, args) {
          var G__7582 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7582) : f.call(null, G__7582);
        };
        var G__7600 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7601__i = 0, G__7601__a = new Array(arguments.length - 3);
            while (G__7601__i < G__7601__a.length) {
              G__7601__a[G__7601__i] = arguments[G__7601__i + 3];
              ++G__7601__i;
            }
            args = new cljs.core.IndexedSeq(G__7601__a, 0);
          }
          return G__7600__delegate.call(this, x, y, z, args);
        };
        G__7600.cljs$lang$maxFixedArity = 3;
        G__7600.cljs$lang$applyTo = function(arglist__7602) {
          var x = cljs.core.first(arglist__7602);
          arglist__7602 = cljs.core.next(arglist__7602);
          var y = cljs.core.first(arglist__7602);
          arglist__7602 = cljs.core.next(arglist__7602);
          var z = cljs.core.first(arglist__7602);
          var args = cljs.core.rest(arglist__7602);
          return G__7600__delegate(x, y, z, args);
        };
        G__7600.cljs$core$IFn$_invoke$arity$variadic = G__7600__delegate;
        return G__7600;
      }();
      G__7599 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7599__0.call(this);
          case 1:
            return G__7599__1.call(this, x);
          case 2:
            return G__7599__2.call(this, x, y);
          case 3:
            return G__7599__3.call(this, x, y, z);
          default:
            var G__7603 = null;
            if (arguments.length > 3) {
              var G__7604__i = 0, G__7604__a = new Array(arguments.length - 3);
              while (G__7604__i < G__7604__a.length) {
                G__7604__a[G__7604__i] = arguments[G__7604__i + 3];
                ++G__7604__i;
              }
              G__7603 = new cljs.core.IndexedSeq(G__7604__a, 0);
            }
            return G__7599__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7603);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7599.cljs$lang$maxFixedArity = 3;
      G__7599.cljs$lang$applyTo = G__7599__4.cljs$lang$applyTo;
      G__7599.cljs$core$IFn$_invoke$arity$0 = G__7599__0;
      G__7599.cljs$core$IFn$_invoke$arity$1 = G__7599__1;
      G__7599.cljs$core$IFn$_invoke$arity$2 = G__7599__2;
      G__7599.cljs$core$IFn$_invoke$arity$3 = G__7599__3;
      G__7599.cljs$core$IFn$_invoke$arity$variadic = G__7599__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7599;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__7605 = null;
      var G__7605__0 = function() {
        var G__7583 = function() {
          var G__7584 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7584) : g.call(null, G__7584);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7583) : f.call(null, G__7583);
      };
      var G__7605__1 = function(x) {
        var G__7585 = function() {
          var G__7586 = function() {
            var G__7587 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7587) : h.call(null, G__7587);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7586) : g.call(null, G__7586);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7585) : f.call(null, G__7585);
      };
      var G__7605__2 = function(x, y) {
        var G__7588 = function() {
          var G__7589 = function() {
            var G__7590 = x;
            var G__7591 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7590, G__7591) : h.call(null, G__7590, G__7591);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7589) : g.call(null, G__7589);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7588) : f.call(null, G__7588);
      };
      var G__7605__3 = function(x, y, z) {
        var G__7592 = function() {
          var G__7593 = function() {
            var G__7594 = x;
            var G__7595 = y;
            var G__7596 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7594, G__7595, G__7596) : h.call(null, G__7594, G__7595, G__7596);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7593) : g.call(null, G__7593);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7592) : f.call(null, G__7592);
      };
      var G__7605__4 = function() {
        var G__7606__delegate = function(x, y, z, args) {
          var G__7597 = function() {
            var G__7598 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7598) : g.call(null, G__7598);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7597) : f.call(null, G__7597);
        };
        var G__7606 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7607__i = 0, G__7607__a = new Array(arguments.length - 3);
            while (G__7607__i < G__7607__a.length) {
              G__7607__a[G__7607__i] = arguments[G__7607__i + 3];
              ++G__7607__i;
            }
            args = new cljs.core.IndexedSeq(G__7607__a, 0);
          }
          return G__7606__delegate.call(this, x, y, z, args);
        };
        G__7606.cljs$lang$maxFixedArity = 3;
        G__7606.cljs$lang$applyTo = function(arglist__7608) {
          var x = cljs.core.first(arglist__7608);
          arglist__7608 = cljs.core.next(arglist__7608);
          var y = cljs.core.first(arglist__7608);
          arglist__7608 = cljs.core.next(arglist__7608);
          var z = cljs.core.first(arglist__7608);
          var args = cljs.core.rest(arglist__7608);
          return G__7606__delegate(x, y, z, args);
        };
        G__7606.cljs$core$IFn$_invoke$arity$variadic = G__7606__delegate;
        return G__7606;
      }();
      G__7605 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7605__0.call(this);
          case 1:
            return G__7605__1.call(this, x);
          case 2:
            return G__7605__2.call(this, x, y);
          case 3:
            return G__7605__3.call(this, x, y, z);
          default:
            var G__7609 = null;
            if (arguments.length > 3) {
              var G__7610__i = 0, G__7610__a = new Array(arguments.length - 3);
              while (G__7610__i < G__7610__a.length) {
                G__7610__a[G__7610__i] = arguments[G__7610__i + 3];
                ++G__7610__i;
              }
              G__7609 = new cljs.core.IndexedSeq(G__7610__a, 0);
            }
            return G__7605__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7609);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7605.cljs$lang$maxFixedArity = 3;
      G__7605.cljs$lang$applyTo = G__7605__4.cljs$lang$applyTo;
      G__7605.cljs$core$IFn$_invoke$arity$0 = G__7605__0;
      G__7605.cljs$core$IFn$_invoke$arity$1 = G__7605__1;
      G__7605.cljs$core$IFn$_invoke$arity$2 = G__7605__2;
      G__7605.cljs$core$IFn$_invoke$arity$3 = G__7605__3;
      G__7605.cljs$core$IFn$_invoke$arity$variadic = G__7605__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7605;
    }();
  };
  var comp__4 = function() {
    var G__7611__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__7612__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__7613 = cljs.core.first(fs__$2).call(null, ret);
                var G__7614 = cljs.core.next(fs__$2);
                ret = G__7613;
                fs__$2 = G__7614;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__7612 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__7615__i = 0, G__7615__a = new Array(arguments.length - 0);
              while (G__7615__i < G__7615__a.length) {
                G__7615__a[G__7615__i] = arguments[G__7615__i + 0];
                ++G__7615__i;
              }
              args = new cljs.core.IndexedSeq(G__7615__a, 0);
            }
            return G__7612__delegate.call(this, args);
          };
          G__7612.cljs$lang$maxFixedArity = 0;
          G__7612.cljs$lang$applyTo = function(arglist__7616) {
            var args = cljs.core.seq(arglist__7616);
            return G__7612__delegate(args);
          };
          G__7612.cljs$core$IFn$_invoke$arity$variadic = G__7612__delegate;
          return G__7612;
        }();
      }(fs__$1);
    };
    var G__7611 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__7617__i = 0, G__7617__a = new Array(arguments.length - 3);
        while (G__7617__i < G__7617__a.length) {
          G__7617__a[G__7617__i] = arguments[G__7617__i + 3];
          ++G__7617__i;
        }
        fs = new cljs.core.IndexedSeq(G__7617__a, 0);
      }
      return G__7611__delegate.call(this, f1, f2, f3, fs);
    };
    G__7611.cljs$lang$maxFixedArity = 3;
    G__7611.cljs$lang$applyTo = function(arglist__7618) {
      var f1 = cljs.core.first(arglist__7618);
      arglist__7618 = cljs.core.next(arglist__7618);
      var f2 = cljs.core.first(arglist__7618);
      arglist__7618 = cljs.core.next(arglist__7618);
      var f3 = cljs.core.first(arglist__7618);
      var fs = cljs.core.rest(arglist__7618);
      return G__7611__delegate(f1, f2, f3, fs);
    };
    G__7611.cljs$core$IFn$_invoke$arity$variadic = G__7611__delegate;
    return G__7611;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__7619 = null;
        if (arguments.length > 3) {
          var G__7620__i = 0, G__7620__a = new Array(arguments.length - 3);
          while (G__7620__i < G__7620__a.length) {
            G__7620__a[G__7620__i] = arguments[G__7620__i + 3];
            ++G__7620__i;
          }
          G__7619 = new cljs.core.IndexedSeq(G__7620__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__7619);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__7705 = null;
      var G__7705__0 = function() {
        var G__7663 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7663) : f.call(null, G__7663);
      };
      var G__7705__1 = function(x) {
        var G__7664 = arg1;
        var G__7665 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7664, G__7665) : f.call(null, G__7664, G__7665);
      };
      var G__7705__2 = function(x, y) {
        var G__7666 = arg1;
        var G__7667 = x;
        var G__7668 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7666, G__7667, G__7668) : f.call(null, G__7666, G__7667, G__7668);
      };
      var G__7705__3 = function(x, y, z) {
        var G__7669 = arg1;
        var G__7670 = x;
        var G__7671 = y;
        var G__7672 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7669, G__7670, G__7671, G__7672) : f.call(null, G__7669, G__7670, G__7671, G__7672);
      };
      var G__7705__4 = function() {
        var G__7706__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__7706 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7707__i = 0, G__7707__a = new Array(arguments.length - 3);
            while (G__7707__i < G__7707__a.length) {
              G__7707__a[G__7707__i] = arguments[G__7707__i + 3];
              ++G__7707__i;
            }
            args = new cljs.core.IndexedSeq(G__7707__a, 0);
          }
          return G__7706__delegate.call(this, x, y, z, args);
        };
        G__7706.cljs$lang$maxFixedArity = 3;
        G__7706.cljs$lang$applyTo = function(arglist__7708) {
          var x = cljs.core.first(arglist__7708);
          arglist__7708 = cljs.core.next(arglist__7708);
          var y = cljs.core.first(arglist__7708);
          arglist__7708 = cljs.core.next(arglist__7708);
          var z = cljs.core.first(arglist__7708);
          var args = cljs.core.rest(arglist__7708);
          return G__7706__delegate(x, y, z, args);
        };
        G__7706.cljs$core$IFn$_invoke$arity$variadic = G__7706__delegate;
        return G__7706;
      }();
      G__7705 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7705__0.call(this);
          case 1:
            return G__7705__1.call(this, x);
          case 2:
            return G__7705__2.call(this, x, y);
          case 3:
            return G__7705__3.call(this, x, y, z);
          default:
            var G__7709 = null;
            if (arguments.length > 3) {
              var G__7710__i = 0, G__7710__a = new Array(arguments.length - 3);
              while (G__7710__i < G__7710__a.length) {
                G__7710__a[G__7710__i] = arguments[G__7710__i + 3];
                ++G__7710__i;
              }
              G__7709 = new cljs.core.IndexedSeq(G__7710__a, 0);
            }
            return G__7705__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7709);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7705.cljs$lang$maxFixedArity = 3;
      G__7705.cljs$lang$applyTo = G__7705__4.cljs$lang$applyTo;
      G__7705.cljs$core$IFn$_invoke$arity$0 = G__7705__0;
      G__7705.cljs$core$IFn$_invoke$arity$1 = G__7705__1;
      G__7705.cljs$core$IFn$_invoke$arity$2 = G__7705__2;
      G__7705.cljs$core$IFn$_invoke$arity$3 = G__7705__3;
      G__7705.cljs$core$IFn$_invoke$arity$variadic = G__7705__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7705;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__7711 = null;
      var G__7711__0 = function() {
        var G__7673 = arg1;
        var G__7674 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7673, G__7674) : f.call(null, G__7673, G__7674);
      };
      var G__7711__1 = function(x) {
        var G__7675 = arg1;
        var G__7676 = arg2;
        var G__7677 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7675, G__7676, G__7677) : f.call(null, G__7675, G__7676, G__7677);
      };
      var G__7711__2 = function(x, y) {
        var G__7678 = arg1;
        var G__7679 = arg2;
        var G__7680 = x;
        var G__7681 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7678, G__7679, G__7680, G__7681) : f.call(null, G__7678, G__7679, G__7680, G__7681);
      };
      var G__7711__3 = function(x, y, z) {
        var G__7682 = arg1;
        var G__7683 = arg2;
        var G__7684 = x;
        var G__7685 = y;
        var G__7686 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7682, G__7683, G__7684, G__7685, G__7686) : f.call(null, G__7682, G__7683, G__7684, G__7685, G__7686);
      };
      var G__7711__4 = function() {
        var G__7712__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__7712 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7713__i = 0, G__7713__a = new Array(arguments.length - 3);
            while (G__7713__i < G__7713__a.length) {
              G__7713__a[G__7713__i] = arguments[G__7713__i + 3];
              ++G__7713__i;
            }
            args = new cljs.core.IndexedSeq(G__7713__a, 0);
          }
          return G__7712__delegate.call(this, x, y, z, args);
        };
        G__7712.cljs$lang$maxFixedArity = 3;
        G__7712.cljs$lang$applyTo = function(arglist__7714) {
          var x = cljs.core.first(arglist__7714);
          arglist__7714 = cljs.core.next(arglist__7714);
          var y = cljs.core.first(arglist__7714);
          arglist__7714 = cljs.core.next(arglist__7714);
          var z = cljs.core.first(arglist__7714);
          var args = cljs.core.rest(arglist__7714);
          return G__7712__delegate(x, y, z, args);
        };
        G__7712.cljs$core$IFn$_invoke$arity$variadic = G__7712__delegate;
        return G__7712;
      }();
      G__7711 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7711__0.call(this);
          case 1:
            return G__7711__1.call(this, x);
          case 2:
            return G__7711__2.call(this, x, y);
          case 3:
            return G__7711__3.call(this, x, y, z);
          default:
            var G__7715 = null;
            if (arguments.length > 3) {
              var G__7716__i = 0, G__7716__a = new Array(arguments.length - 3);
              while (G__7716__i < G__7716__a.length) {
                G__7716__a[G__7716__i] = arguments[G__7716__i + 3];
                ++G__7716__i;
              }
              G__7715 = new cljs.core.IndexedSeq(G__7716__a, 0);
            }
            return G__7711__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7715);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7711.cljs$lang$maxFixedArity = 3;
      G__7711.cljs$lang$applyTo = G__7711__4.cljs$lang$applyTo;
      G__7711.cljs$core$IFn$_invoke$arity$0 = G__7711__0;
      G__7711.cljs$core$IFn$_invoke$arity$1 = G__7711__1;
      G__7711.cljs$core$IFn$_invoke$arity$2 = G__7711__2;
      G__7711.cljs$core$IFn$_invoke$arity$3 = G__7711__3;
      G__7711.cljs$core$IFn$_invoke$arity$variadic = G__7711__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7711;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__7717 = null;
      var G__7717__0 = function() {
        var G__7687 = arg1;
        var G__7688 = arg2;
        var G__7689 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7687, G__7688, G__7689) : f.call(null, G__7687, G__7688, G__7689);
      };
      var G__7717__1 = function(x) {
        var G__7690 = arg1;
        var G__7691 = arg2;
        var G__7692 = arg3;
        var G__7693 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7690, G__7691, G__7692, G__7693) : f.call(null, G__7690, G__7691, G__7692, G__7693);
      };
      var G__7717__2 = function(x, y) {
        var G__7694 = arg1;
        var G__7695 = arg2;
        var G__7696 = arg3;
        var G__7697 = x;
        var G__7698 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7694, G__7695, G__7696, G__7697, G__7698) : f.call(null, G__7694, G__7695, G__7696, G__7697, G__7698);
      };
      var G__7717__3 = function(x, y, z) {
        var G__7699 = arg1;
        var G__7700 = arg2;
        var G__7701 = arg3;
        var G__7702 = x;
        var G__7703 = y;
        var G__7704 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7699, G__7700, G__7701, G__7702, G__7703, G__7704) : f.call(null, G__7699, G__7700, G__7701, G__7702, G__7703, G__7704);
      };
      var G__7717__4 = function() {
        var G__7718__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__7718 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7719__i = 0, G__7719__a = new Array(arguments.length - 3);
            while (G__7719__i < G__7719__a.length) {
              G__7719__a[G__7719__i] = arguments[G__7719__i + 3];
              ++G__7719__i;
            }
            args = new cljs.core.IndexedSeq(G__7719__a, 0);
          }
          return G__7718__delegate.call(this, x, y, z, args);
        };
        G__7718.cljs$lang$maxFixedArity = 3;
        G__7718.cljs$lang$applyTo = function(arglist__7720) {
          var x = cljs.core.first(arglist__7720);
          arglist__7720 = cljs.core.next(arglist__7720);
          var y = cljs.core.first(arglist__7720);
          arglist__7720 = cljs.core.next(arglist__7720);
          var z = cljs.core.first(arglist__7720);
          var args = cljs.core.rest(arglist__7720);
          return G__7718__delegate(x, y, z, args);
        };
        G__7718.cljs$core$IFn$_invoke$arity$variadic = G__7718__delegate;
        return G__7718;
      }();
      G__7717 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__7717__0.call(this);
          case 1:
            return G__7717__1.call(this, x);
          case 2:
            return G__7717__2.call(this, x, y);
          case 3:
            return G__7717__3.call(this, x, y, z);
          default:
            var G__7721 = null;
            if (arguments.length > 3) {
              var G__7722__i = 0, G__7722__a = new Array(arguments.length - 3);
              while (G__7722__i < G__7722__a.length) {
                G__7722__a[G__7722__i] = arguments[G__7722__i + 3];
                ++G__7722__i;
              }
              G__7721 = new cljs.core.IndexedSeq(G__7722__a, 0);
            }
            return G__7717__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7721);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7717.cljs$lang$maxFixedArity = 3;
      G__7717.cljs$lang$applyTo = G__7717__4.cljs$lang$applyTo;
      G__7717.cljs$core$IFn$_invoke$arity$0 = G__7717__0;
      G__7717.cljs$core$IFn$_invoke$arity$1 = G__7717__1;
      G__7717.cljs$core$IFn$_invoke$arity$2 = G__7717__2;
      G__7717.cljs$core$IFn$_invoke$arity$3 = G__7717__3;
      G__7717.cljs$core$IFn$_invoke$arity$variadic = G__7717__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7717;
    }();
  };
  var partial__5 = function() {
    var G__7723__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__7724__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__7724 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__7725__i = 0, G__7725__a = new Array(arguments.length - 0);
            while (G__7725__i < G__7725__a.length) {
              G__7725__a[G__7725__i] = arguments[G__7725__i + 0];
              ++G__7725__i;
            }
            args = new cljs.core.IndexedSeq(G__7725__a, 0);
          }
          return G__7724__delegate.call(this, args);
        };
        G__7724.cljs$lang$maxFixedArity = 0;
        G__7724.cljs$lang$applyTo = function(arglist__7726) {
          var args = cljs.core.seq(arglist__7726);
          return G__7724__delegate(args);
        };
        G__7724.cljs$core$IFn$_invoke$arity$variadic = G__7724__delegate;
        return G__7724;
      }();
    };
    var G__7723 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7727__i = 0, G__7727__a = new Array(arguments.length - 4);
        while (G__7727__i < G__7727__a.length) {
          G__7727__a[G__7727__i] = arguments[G__7727__i + 4];
          ++G__7727__i;
        }
        more = new cljs.core.IndexedSeq(G__7727__a, 0);
      }
      return G__7723__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__7723.cljs$lang$maxFixedArity = 4;
    G__7723.cljs$lang$applyTo = function(arglist__7728) {
      var f = cljs.core.first(arglist__7728);
      arglist__7728 = cljs.core.next(arglist__7728);
      var arg1 = cljs.core.first(arglist__7728);
      arglist__7728 = cljs.core.next(arglist__7728);
      var arg2 = cljs.core.first(arglist__7728);
      arglist__7728 = cljs.core.next(arglist__7728);
      var arg3 = cljs.core.first(arglist__7728);
      var more = cljs.core.rest(arglist__7728);
      return G__7723__delegate(f, arg1, arg2, arg3, more);
    };
    G__7723.cljs$core$IFn$_invoke$arity$variadic = G__7723__delegate;
    return G__7723;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__7729 = null;
        if (arguments.length > 4) {
          var G__7730__i = 0, G__7730__a = new Array(arguments.length - 4);
          while (G__7730__i < G__7730__a.length) {
            G__7730__a[G__7730__i] = arguments[G__7730__i + 4];
            ++G__7730__i;
          }
          G__7729 = new cljs.core.IndexedSeq(G__7730__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__7729);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__7763 = null;
      var G__7763__1 = function(a) {
        var G__7747 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7747) : f.call(null, G__7747);
      };
      var G__7763__2 = function(a, b) {
        var G__7748 = a == null ? x : a;
        var G__7749 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7748, G__7749) : f.call(null, G__7748, G__7749);
      };
      var G__7763__3 = function(a, b, c) {
        var G__7750 = a == null ? x : a;
        var G__7751 = b;
        var G__7752 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7750, G__7751, G__7752) : f.call(null, G__7750, G__7751, G__7752);
      };
      var G__7763__4 = function() {
        var G__7764__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__7764 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7765__i = 0, G__7765__a = new Array(arguments.length - 3);
            while (G__7765__i < G__7765__a.length) {
              G__7765__a[G__7765__i] = arguments[G__7765__i + 3];
              ++G__7765__i;
            }
            ds = new cljs.core.IndexedSeq(G__7765__a, 0);
          }
          return G__7764__delegate.call(this, a, b, c, ds);
        };
        G__7764.cljs$lang$maxFixedArity = 3;
        G__7764.cljs$lang$applyTo = function(arglist__7766) {
          var a = cljs.core.first(arglist__7766);
          arglist__7766 = cljs.core.next(arglist__7766);
          var b = cljs.core.first(arglist__7766);
          arglist__7766 = cljs.core.next(arglist__7766);
          var c = cljs.core.first(arglist__7766);
          var ds = cljs.core.rest(arglist__7766);
          return G__7764__delegate(a, b, c, ds);
        };
        G__7764.cljs$core$IFn$_invoke$arity$variadic = G__7764__delegate;
        return G__7764;
      }();
      G__7763 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__7763__1.call(this, a);
          case 2:
            return G__7763__2.call(this, a, b);
          case 3:
            return G__7763__3.call(this, a, b, c);
          default:
            var G__7767 = null;
            if (arguments.length > 3) {
              var G__7768__i = 0, G__7768__a = new Array(arguments.length - 3);
              while (G__7768__i < G__7768__a.length) {
                G__7768__a[G__7768__i] = arguments[G__7768__i + 3];
                ++G__7768__i;
              }
              G__7767 = new cljs.core.IndexedSeq(G__7768__a, 0);
            }
            return G__7763__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7767);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7763.cljs$lang$maxFixedArity = 3;
      G__7763.cljs$lang$applyTo = G__7763__4.cljs$lang$applyTo;
      G__7763.cljs$core$IFn$_invoke$arity$1 = G__7763__1;
      G__7763.cljs$core$IFn$_invoke$arity$2 = G__7763__2;
      G__7763.cljs$core$IFn$_invoke$arity$3 = G__7763__3;
      G__7763.cljs$core$IFn$_invoke$arity$variadic = G__7763__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7763;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__7769 = null;
      var G__7769__2 = function(a, b) {
        var G__7753 = a == null ? x : a;
        var G__7754 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7753, G__7754) : f.call(null, G__7753, G__7754);
      };
      var G__7769__3 = function(a, b, c) {
        var G__7755 = a == null ? x : a;
        var G__7756 = b == null ? y : b;
        var G__7757 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7755, G__7756, G__7757) : f.call(null, G__7755, G__7756, G__7757);
      };
      var G__7769__4 = function() {
        var G__7770__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__7770 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7771__i = 0, G__7771__a = new Array(arguments.length - 3);
            while (G__7771__i < G__7771__a.length) {
              G__7771__a[G__7771__i] = arguments[G__7771__i + 3];
              ++G__7771__i;
            }
            ds = new cljs.core.IndexedSeq(G__7771__a, 0);
          }
          return G__7770__delegate.call(this, a, b, c, ds);
        };
        G__7770.cljs$lang$maxFixedArity = 3;
        G__7770.cljs$lang$applyTo = function(arglist__7772) {
          var a = cljs.core.first(arglist__7772);
          arglist__7772 = cljs.core.next(arglist__7772);
          var b = cljs.core.first(arglist__7772);
          arglist__7772 = cljs.core.next(arglist__7772);
          var c = cljs.core.first(arglist__7772);
          var ds = cljs.core.rest(arglist__7772);
          return G__7770__delegate(a, b, c, ds);
        };
        G__7770.cljs$core$IFn$_invoke$arity$variadic = G__7770__delegate;
        return G__7770;
      }();
      G__7769 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7769__2.call(this, a, b);
          case 3:
            return G__7769__3.call(this, a, b, c);
          default:
            var G__7773 = null;
            if (arguments.length > 3) {
              var G__7774__i = 0, G__7774__a = new Array(arguments.length - 3);
              while (G__7774__i < G__7774__a.length) {
                G__7774__a[G__7774__i] = arguments[G__7774__i + 3];
                ++G__7774__i;
              }
              G__7773 = new cljs.core.IndexedSeq(G__7774__a, 0);
            }
            return G__7769__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7773);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7769.cljs$lang$maxFixedArity = 3;
      G__7769.cljs$lang$applyTo = G__7769__4.cljs$lang$applyTo;
      G__7769.cljs$core$IFn$_invoke$arity$2 = G__7769__2;
      G__7769.cljs$core$IFn$_invoke$arity$3 = G__7769__3;
      G__7769.cljs$core$IFn$_invoke$arity$variadic = G__7769__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7769;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__7775 = null;
      var G__7775__2 = function(a, b) {
        var G__7758 = a == null ? x : a;
        var G__7759 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7758, G__7759) : f.call(null, G__7758, G__7759);
      };
      var G__7775__3 = function(a, b, c) {
        var G__7760 = a == null ? x : a;
        var G__7761 = b == null ? y : b;
        var G__7762 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7760, G__7761, G__7762) : f.call(null, G__7760, G__7761, G__7762);
      };
      var G__7775__4 = function() {
        var G__7776__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__7776 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__7777__i = 0, G__7777__a = new Array(arguments.length - 3);
            while (G__7777__i < G__7777__a.length) {
              G__7777__a[G__7777__i] = arguments[G__7777__i + 3];
              ++G__7777__i;
            }
            ds = new cljs.core.IndexedSeq(G__7777__a, 0);
          }
          return G__7776__delegate.call(this, a, b, c, ds);
        };
        G__7776.cljs$lang$maxFixedArity = 3;
        G__7776.cljs$lang$applyTo = function(arglist__7778) {
          var a = cljs.core.first(arglist__7778);
          arglist__7778 = cljs.core.next(arglist__7778);
          var b = cljs.core.first(arglist__7778);
          arglist__7778 = cljs.core.next(arglist__7778);
          var c = cljs.core.first(arglist__7778);
          var ds = cljs.core.rest(arglist__7778);
          return G__7776__delegate(a, b, c, ds);
        };
        G__7776.cljs$core$IFn$_invoke$arity$variadic = G__7776__delegate;
        return G__7776;
      }();
      G__7775 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__7775__2.call(this, a, b);
          case 3:
            return G__7775__3.call(this, a, b, c);
          default:
            var G__7779 = null;
            if (arguments.length > 3) {
              var G__7780__i = 0, G__7780__a = new Array(arguments.length - 3);
              while (G__7780__i < G__7780__a.length) {
                G__7780__a[G__7780__i] = arguments[G__7780__i + 3];
                ++G__7780__i;
              }
              G__7779 = new cljs.core.IndexedSeq(G__7780__a, 0);
            }
            return G__7775__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7779);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7775.cljs$lang$maxFixedArity = 3;
      G__7775.cljs$lang$applyTo = G__7775__4.cljs$lang$applyTo;
      G__7775.cljs$core$IFn$_invoke$arity$2 = G__7775__2;
      G__7775.cljs$core$IFn$_invoke$arity$3 = G__7775__3;
      G__7775.cljs$core$IFn$_invoke$arity$variadic = G__7775__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__7775;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__7811 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7811) : cljs.core.volatile_BANG_.call(null, G__7811);
      }();
      return function(i) {
        return function() {
          var G__7841 = null;
          var G__7841__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7841__1 = function(result) {
            var G__7812 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7812) : rf.call(null, G__7812);
          };
          var G__7841__2 = function(result, input) {
            var G__7813 = result;
            var G__7814 = function() {
              var G__7815 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__7816 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7815, G__7816) : f.call(null, G__7815, G__7816);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7813, G__7814) : rf.call(null, G__7813, G__7814);
          };
          G__7841 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7841__0.call(this);
              case 1:
                return G__7841__1.call(this, result);
              case 2:
                return G__7841__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7841.cljs$core$IFn$_invoke$arity$0 = G__7841__0;
          G__7841.cljs$core$IFn$_invoke$arity$1 = G__7841__1;
          G__7841.cljs$core$IFn$_invoke$arity$2 = G__7841__2;
          return G__7841;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4663__auto___7842 = size;
            var i_7843 = 0;
            while (true) {
              if (i_7843 < n__4663__auto___7842) {
                cljs.core.chunk_append(b, function() {
                  var G__7837 = idx + i_7843;
                  var G__7838 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7843);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7837, G__7838) : f.call(null, G__7837, G__7838);
                }());
                var G__7844 = i_7843 + 1;
                i_7843 = G__7844;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__7839 = idx;
              var G__7840 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7839, G__7840) : f.call(null, G__7839, G__7840);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__7863 = null;
        var G__7863__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7863__1 = function(result) {
          var G__7857 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7857) : rf.call(null, G__7857);
        };
        var G__7863__2 = function(result, input) {
          var v = function() {
            var G__7858 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7858) : f.call(null, G__7858);
          }();
          if (v == null) {
            return result;
          } else {
            var G__7859 = result;
            var G__7860 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7859, G__7860) : rf.call(null, G__7859, G__7860);
          }
        };
        G__7863 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7863__0.call(this);
            case 1:
              return G__7863__1.call(this, result);
            case 2:
              return G__7863__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7863.cljs$core$IFn$_invoke$arity$0 = G__7863__0;
        G__7863.cljs$core$IFn$_invoke$arity$1 = G__7863__1;
        G__7863.cljs$core$IFn$_invoke$arity$2 = G__7863__2;
        return G__7863;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4663__auto___7864 = size;
          var i_7865 = 0;
          while (true) {
            if (i_7865 < n__4663__auto___7864) {
              var x_7866 = function() {
                var G__7861 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7865);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7861) : f.call(null, G__7861);
              }();
              if (x_7866 == null) {
              } else {
                cljs.core.chunk_append(b, x_7866);
              }
              var G__7867 = i_7865 + 1;
              i_7865 = G__7867;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7862 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7862) : f.call(null, G__7862);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__7868 = this$__$1;
  return goog.getUid(G__7868);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7869 = cljs.core.seq(self__.watches);
  var chunk__7870 = null;
  var count__7871 = 0;
  var i__7872 = 0;
  while (true) {
    if (i__7872 < count__7871) {
      var vec__7873 = chunk__7870.cljs$core$IIndexed$_nth$arity$2(null, i__7872);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7873, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7873, 1, null);
      var G__7874_7883 = key;
      var G__7875_7884 = this$__$1;
      var G__7876_7885 = oldval;
      var G__7877_7886 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7874_7883, G__7875_7884, G__7876_7885, G__7877_7886) : f.call(null, G__7874_7883, G__7875_7884, G__7876_7885, G__7877_7886);
      var G__7887 = seq__7869;
      var G__7888 = chunk__7870;
      var G__7889 = count__7871;
      var G__7890 = i__7872 + 1;
      seq__7869 = G__7887;
      chunk__7870 = G__7888;
      count__7871 = G__7889;
      i__7872 = G__7890;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__7869);
      if (temp__4126__auto__) {
        var seq__7869__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7869__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__7869__$1);
          var G__7891 = cljs.core.chunk_rest(seq__7869__$1);
          var G__7892 = c__4563__auto__;
          var G__7893 = cljs.core.count(c__4563__auto__);
          var G__7894 = 0;
          seq__7869 = G__7891;
          chunk__7870 = G__7892;
          count__7871 = G__7893;
          i__7872 = G__7894;
          continue;
        } else {
          var vec__7878 = cljs.core.first(seq__7869__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7878, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7878, 1, null);
          var G__7879_7895 = key;
          var G__7880_7896 = this$__$1;
          var G__7881_7897 = oldval;
          var G__7882_7898 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7879_7895, G__7880_7896, G__7881_7897, G__7882_7898) : f.call(null, G__7879_7895, G__7880_7896, G__7881_7897, G__7882_7898);
          var G__7899 = cljs.core.next(seq__7869__$1);
          var G__7900 = null;
          var G__7901 = 0;
          var G__7902 = 0;
          seq__7869 = G__7899;
          chunk__7870 = G__7900;
          count__7871 = G__7901;
          i__7872 = G__7902;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__7906__delegate = function(x, p__7903) {
      var map__7905 = p__7903;
      var map__7905__$1 = cljs.core.seq_QMARK_(map__7905) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7905) : map__7905;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7905__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7905__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__7906 = function(x, var_args) {
      var p__7903 = null;
      if (arguments.length > 1) {
        var G__7907__i = 0, G__7907__a = new Array(arguments.length - 1);
        while (G__7907__i < G__7907__a.length) {
          G__7907__a[G__7907__i] = arguments[G__7907__i + 1];
          ++G__7907__i;
        }
        p__7903 = new cljs.core.IndexedSeq(G__7907__a, 0);
      }
      return G__7906__delegate.call(this, x, p__7903);
    };
    G__7906.cljs$lang$maxFixedArity = 1;
    G__7906.cljs$lang$applyTo = function(arglist__7908) {
      var x = cljs.core.first(arglist__7908);
      var p__7903 = cljs.core.rest(arglist__7908);
      return G__7906__delegate(x, p__7903);
    };
    G__7906.cljs$core$IFn$_invoke$arity$variadic = G__7906__delegate;
    return G__7906;
  }();
  atom = function(x, var_args) {
    var p__7903 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__7909 = null;
        if (arguments.length > 1) {
          var G__7910__i = 0, G__7910__a = new Array(arguments.length - 1);
          while (G__7910__i < G__7910__a.length) {
            G__7910__a[G__7910__i] = arguments[G__7910__i + 1];
            ++G__7910__i;
          }
          G__7909 = new cljs.core.IndexedSeq(G__7910__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7909);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__7913 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7913) : validate.call(null, G__7913);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7914 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7914) : cljs.core.pr_str.call(null, G__7914);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7921 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7921) : f.call(null, G__7921);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7922 = a.state;
        var G__7923 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7922, G__7923) : f.call(null, G__7922, G__7923);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__7924 = a.state;
        var G__7925 = x;
        var G__7926 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7924, G__7925, G__7926) : f.call(null, G__7924, G__7925, G__7926);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__7927__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__7927 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__7928__i = 0, G__7928__a = new Array(arguments.length - 4);
        while (G__7928__i < G__7928__a.length) {
          G__7928__a[G__7928__i] = arguments[G__7928__i + 4];
          ++G__7928__i;
        }
        more = new cljs.core.IndexedSeq(G__7928__a, 0);
      }
      return G__7927__delegate.call(this, a, f, x, y, more);
    };
    G__7927.cljs$lang$maxFixedArity = 4;
    G__7927.cljs$lang$applyTo = function(arglist__7929) {
      var a = cljs.core.first(arglist__7929);
      arglist__7929 = cljs.core.next(arglist__7929);
      var f = cljs.core.first(arglist__7929);
      arglist__7929 = cljs.core.next(arglist__7929);
      var x = cljs.core.first(arglist__7929);
      arglist__7929 = cljs.core.next(arglist__7929);
      var y = cljs.core.first(arglist__7929);
      var more = cljs.core.rest(arglist__7929);
      return G__7927__delegate(a, f, x, y, more);
    };
    G__7927.cljs$core$IFn$_invoke$arity$variadic = G__7927__delegate;
    return G__7927;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__7930 = null;
        if (arguments.length > 4) {
          var G__7931__i = 0, G__7931__a = new Array(arguments.length - 4);
          while (G__7931__i < G__7931__a.length) {
            G__7931__a[G__7931__i] = arguments[G__7931__i + 4];
            ++G__7931__i;
          }
          G__7930 = new cljs.core.IndexedSeq(G__7931__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__7930);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__7998 = null;
          var G__7998__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__7998__1 = function(result) {
            var G__7965 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7965) : rf.call(null, G__7965);
          };
          var G__7998__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__7966 = i;
              var G__7967 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7966, G__7967) : f.call(null, G__7966, G__7967);
            }();
            if (v == null) {
              return result;
            } else {
              var G__7968 = result;
              var G__7969 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7968, G__7969) : rf.call(null, G__7968, G__7969);
            }
          };
          G__7998 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__7998__0.call(this);
              case 1:
                return G__7998__1.call(this, result);
              case 2:
                return G__7998__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__7998.cljs$core$IFn$_invoke$arity$0 = G__7998__0;
          G__7998.cljs$core$IFn$_invoke$arity$1 = G__7998__1;
          G__7998.cljs$core$IFn$_invoke$arity$2 = G__7998__2;
          return G__7998;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4663__auto___7999 = size;
            var i_8000 = 0;
            while (true) {
              if (i_8000 < n__4663__auto___7999) {
                var x_8001 = function() {
                  var G__7994 = idx + i_8000;
                  var G__7995 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8000);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7994, G__7995) : f.call(null, G__7994, G__7995);
                }();
                if (x_8001 == null) {
                } else {
                  cljs.core.chunk_append(b, x_8001);
                }
                var G__8002 = i_8000 + 1;
                i_8000 = G__8002;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__7996 = idx;
              var G__7997 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7996, G__7997) : f.call(null, G__7996, G__7997);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__8216 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8216) : p.call(null, G__8216);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8218 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8218) : p.call(null, G__8218);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var G__8219 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8219) : p.call(null, G__8219);
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8221 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8221) : p.call(null, G__8221);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__8223 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8223) : p.call(null, G__8223);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var G__8224 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8224) : p.call(null, G__8224);
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__8393__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__8393 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8394__i = 0, G__8394__a = new Array(arguments.length - 3);
            while (G__8394__i < G__8394__a.length) {
              G__8394__a[G__8394__i] = arguments[G__8394__i + 3];
              ++G__8394__i;
            }
            args = new cljs.core.IndexedSeq(G__8394__a, 0);
          }
          return G__8393__delegate.call(this, x, y, z, args);
        };
        G__8393.cljs$lang$maxFixedArity = 3;
        G__8393.cljs$lang$applyTo = function(arglist__8395) {
          var x = cljs.core.first(arglist__8395);
          arglist__8395 = cljs.core.next(arglist__8395);
          var y = cljs.core.first(arglist__8395);
          arglist__8395 = cljs.core.next(arglist__8395);
          var z = cljs.core.first(arglist__8395);
          var args = cljs.core.rest(arglist__8395);
          return G__8393__delegate(x, y, z, args);
        };
        G__8393.cljs$core$IFn$_invoke$arity$variadic = G__8393__delegate;
        return G__8393;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__8396 = null;
            if (arguments.length > 3) {
              var G__8397__i = 0, G__8397__a = new Array(arguments.length - 3);
              while (G__8397__i < G__8397__a.length) {
                G__8397__a[G__8397__i] = arguments[G__8397__i + 3];
                ++G__8397__i;
              }
              G__8396 = new cljs.core.IndexedSeq(G__8397__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8396);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8256 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8256) : p1.call(null, G__8256);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var G__8257 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8257) : p2.call(null, G__8257);
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8259 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8259) : p1.call(null, G__8259);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__8261 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8261) : p1.call(null, G__8261);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__8263 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8263) : p2.call(null, G__8263);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var G__8264 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8264) : p2.call(null, G__8264);
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8266 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8266) : p1.call(null, G__8266);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__8268 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8268) : p1.call(null, G__8268);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__8270 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8270) : p1.call(null, G__8270);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var and__3764__auto____$3 = function() {
                  var G__8272 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8272) : p2.call(null, G__8272);
                }();
                if (cljs.core.truth_(and__3764__auto____$3)) {
                  var and__3764__auto____$4 = function() {
                    var G__8274 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8274) : p2.call(null, G__8274);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$4)) {
                    var G__8275 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8275) : p2.call(null, G__8275);
                  } else {
                    return and__3764__auto____$4;
                  }
                } else {
                  return and__3764__auto____$3;
                }
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__8398__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__8003_SHARP_) {
            var and__3764__auto__ = function() {
              var G__8280 = p1__8003_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8280) : p1.call(null, G__8280);
            }();
            if (cljs.core.truth_(and__3764__auto__)) {
              var G__8281 = p1__8003_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8281) : p2.call(null, G__8281);
            } else {
              return and__3764__auto__;
            }
          }, args));
        };
        var G__8398 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8399__i = 0, G__8399__a = new Array(arguments.length - 3);
            while (G__8399__i < G__8399__a.length) {
              G__8399__a[G__8399__i] = arguments[G__8399__i + 3];
              ++G__8399__i;
            }
            args = new cljs.core.IndexedSeq(G__8399__a, 0);
          }
          return G__8398__delegate.call(this, x, y, z, args);
        };
        G__8398.cljs$lang$maxFixedArity = 3;
        G__8398.cljs$lang$applyTo = function(arglist__8400) {
          var x = cljs.core.first(arglist__8400);
          arglist__8400 = cljs.core.next(arglist__8400);
          var y = cljs.core.first(arglist__8400);
          arglist__8400 = cljs.core.next(arglist__8400);
          var z = cljs.core.first(arglist__8400);
          var args = cljs.core.rest(arglist__8400);
          return G__8398__delegate(x, y, z, args);
        };
        G__8398.cljs$core$IFn$_invoke$arity$variadic = G__8398__delegate;
        return G__8398;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__8401 = null;
            if (arguments.length > 3) {
              var G__8402__i = 0, G__8402__a = new Array(arguments.length - 3);
              while (G__8402__i < G__8402__a.length) {
                G__8402__a[G__8402__i] = arguments[G__8402__i + 3];
                ++G__8402__i;
              }
              G__8401 = new cljs.core.IndexedSeq(G__8402__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8401);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8327 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8327) : p1.call(null, G__8327);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__8329 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8329) : p2.call(null, G__8329);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var G__8330 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8330) : p3.call(null, G__8330);
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8332 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8332) : p1.call(null, G__8332);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__8334 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8334) : p2.call(null, G__8334);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__8336 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8336) : p3.call(null, G__8336);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var and__3764__auto____$3 = function() {
                  var G__8338 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8338) : p1.call(null, G__8338);
                }();
                if (cljs.core.truth_(and__3764__auto____$3)) {
                  var and__3764__auto____$4 = function() {
                    var G__8340 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8340) : p2.call(null, G__8340);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$4)) {
                    var G__8341 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8341) : p3.call(null, G__8341);
                  } else {
                    return and__3764__auto____$4;
                  }
                } else {
                  return and__3764__auto____$3;
                }
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3764__auto__ = function() {
            var G__8343 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8343) : p1.call(null, G__8343);
          }();
          if (cljs.core.truth_(and__3764__auto__)) {
            var and__3764__auto____$1 = function() {
              var G__8345 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8345) : p2.call(null, G__8345);
            }();
            if (cljs.core.truth_(and__3764__auto____$1)) {
              var and__3764__auto____$2 = function() {
                var G__8347 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8347) : p3.call(null, G__8347);
              }();
              if (cljs.core.truth_(and__3764__auto____$2)) {
                var and__3764__auto____$3 = function() {
                  var G__8349 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8349) : p1.call(null, G__8349);
                }();
                if (cljs.core.truth_(and__3764__auto____$3)) {
                  var and__3764__auto____$4 = function() {
                    var G__8351 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8351) : p2.call(null, G__8351);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$4)) {
                    var and__3764__auto____$5 = function() {
                      var G__8353 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8353) : p3.call(null, G__8353);
                    }();
                    if (cljs.core.truth_(and__3764__auto____$5)) {
                      var and__3764__auto____$6 = function() {
                        var G__8355 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8355) : p1.call(null, G__8355);
                      }();
                      if (cljs.core.truth_(and__3764__auto____$6)) {
                        var and__3764__auto____$7 = function() {
                          var G__8357 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8357) : p2.call(null, G__8357);
                        }();
                        if (cljs.core.truth_(and__3764__auto____$7)) {
                          var G__8358 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8358) : p3.call(null, G__8358);
                        } else {
                          return and__3764__auto____$7;
                        }
                      } else {
                        return and__3764__auto____$6;
                      }
                    } else {
                      return and__3764__auto____$5;
                    }
                  } else {
                    return and__3764__auto____$4;
                  }
                } else {
                  return and__3764__auto____$3;
                }
              } else {
                return and__3764__auto____$2;
              }
            } else {
              return and__3764__auto____$1;
            }
          } else {
            return and__3764__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__8403__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__8004_SHARP_) {
            var and__3764__auto__ = function() {
              var G__8365 = p1__8004_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8365) : p1.call(null, G__8365);
            }();
            if (cljs.core.truth_(and__3764__auto__)) {
              var and__3764__auto____$1 = function() {
                var G__8367 = p1__8004_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8367) : p2.call(null, G__8367);
              }();
              if (cljs.core.truth_(and__3764__auto____$1)) {
                var G__8368 = p1__8004_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8368) : p3.call(null, G__8368);
              } else {
                return and__3764__auto____$1;
              }
            } else {
              return and__3764__auto__;
            }
          }, args));
        };
        var G__8403 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8404__i = 0, G__8404__a = new Array(arguments.length - 3);
            while (G__8404__i < G__8404__a.length) {
              G__8404__a[G__8404__i] = arguments[G__8404__i + 3];
              ++G__8404__i;
            }
            args = new cljs.core.IndexedSeq(G__8404__a, 0);
          }
          return G__8403__delegate.call(this, x, y, z, args);
        };
        G__8403.cljs$lang$maxFixedArity = 3;
        G__8403.cljs$lang$applyTo = function(arglist__8405) {
          var x = cljs.core.first(arglist__8405);
          arglist__8405 = cljs.core.next(arglist__8405);
          var y = cljs.core.first(arglist__8405);
          arglist__8405 = cljs.core.next(arglist__8405);
          var z = cljs.core.first(arglist__8405);
          var args = cljs.core.rest(arglist__8405);
          return G__8403__delegate(x, y, z, args);
        };
        G__8403.cljs$core$IFn$_invoke$arity$variadic = G__8403__delegate;
        return G__8403;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__8406 = null;
            if (arguments.length > 3) {
              var G__8407__i = 0, G__8407__a = new Array(arguments.length - 3);
              while (G__8407__i < G__8407__a.length) {
                G__8407__a[G__8407__i] = arguments[G__8407__i + 3];
                ++G__8407__i;
              }
              G__8406 = new cljs.core.IndexedSeq(G__8407__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8406);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__8408__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8005_SHARP_) {
                var G__8384 = x;
                return p1__8005_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8005_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8384) : p1__8005_SHARP_.call(null, G__8384);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8006_SHARP_) {
                var and__3764__auto__ = function() {
                  var G__8386 = x;
                  return p1__8006_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8006_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8386) : p1__8006_SHARP_.call(null, G__8386);
                }();
                if (cljs.core.truth_(and__3764__auto__)) {
                  var G__8387 = y;
                  return p1__8006_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8006_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8387) : p1__8006_SHARP_.call(null, G__8387);
                } else {
                  return and__3764__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__8007_SHARP_) {
                var and__3764__auto__ = function() {
                  var G__8389 = x;
                  return p1__8007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8389) : p1__8007_SHARP_.call(null, G__8389);
                }();
                if (cljs.core.truth_(and__3764__auto__)) {
                  var and__3764__auto____$1 = function() {
                    var G__8391 = y;
                    return p1__8007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8391) : p1__8007_SHARP_.call(null, G__8391);
                  }();
                  if (cljs.core.truth_(and__3764__auto____$1)) {
                    var G__8392 = z;
                    return p1__8007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8392) : p1__8007_SHARP_.call(null, G__8392);
                  } else {
                    return and__3764__auto____$1;
                  }
                } else {
                  return and__3764__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__8409__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__8008_SHARP_) {
                  return cljs.core.every_QMARK_(p1__8008_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__8409 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8410__i = 0, G__8410__a = new Array(arguments.length - 3);
                while (G__8410__i < G__8410__a.length) {
                  G__8410__a[G__8410__i] = arguments[G__8410__i + 3];
                  ++G__8410__i;
                }
                args = new cljs.core.IndexedSeq(G__8410__a, 0);
              }
              return G__8409__delegate.call(this, x, y, z, args);
            };
            G__8409.cljs$lang$maxFixedArity = 3;
            G__8409.cljs$lang$applyTo = function(arglist__8411) {
              var x = cljs.core.first(arglist__8411);
              arglist__8411 = cljs.core.next(arglist__8411);
              var y = cljs.core.first(arglist__8411);
              arglist__8411 = cljs.core.next(arglist__8411);
              var z = cljs.core.first(arglist__8411);
              var args = cljs.core.rest(arglist__8411);
              return G__8409__delegate(x, y, z, args);
            };
            G__8409.cljs$core$IFn$_invoke$arity$variadic = G__8409__delegate;
            return G__8409;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__8412 = null;
                if (arguments.length > 3) {
                  var G__8413__i = 0, G__8413__a = new Array(arguments.length - 3);
                  while (G__8413__i < G__8413__a.length) {
                    G__8413__a[G__8413__i] = arguments[G__8413__i + 3];
                    ++G__8413__i;
                  }
                  G__8412 = new cljs.core.IndexedSeq(G__8413__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8412);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__8408 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8414__i = 0, G__8414__a = new Array(arguments.length - 3);
        while (G__8414__i < G__8414__a.length) {
          G__8414__a[G__8414__i] = arguments[G__8414__i + 3];
          ++G__8414__i;
        }
        ps = new cljs.core.IndexedSeq(G__8414__a, 0);
      }
      return G__8408__delegate.call(this, p1, p2, p3, ps);
    };
    G__8408.cljs$lang$maxFixedArity = 3;
    G__8408.cljs$lang$applyTo = function(arglist__8415) {
      var p1 = cljs.core.first(arglist__8415);
      arglist__8415 = cljs.core.next(arglist__8415);
      var p2 = cljs.core.first(arglist__8415);
      arglist__8415 = cljs.core.next(arglist__8415);
      var p3 = cljs.core.first(arglist__8415);
      var ps = cljs.core.rest(arglist__8415);
      return G__8408__delegate(p1, p2, p3, ps);
    };
    G__8408.cljs$core$IFn$_invoke$arity$variadic = G__8408__delegate;
    return G__8408;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__8416 = null;
        if (arguments.length > 3) {
          var G__8417__i = 0, G__8417__a = new Array(arguments.length - 3);
          while (G__8417__i < G__8417__a.length) {
            G__8417__a[G__8417__i] = arguments[G__8417__i + 3];
            ++G__8417__i;
          }
          G__8416 = new cljs.core.IndexedSeq(G__8417__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8416);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__8623 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8623) : p.call(null, G__8623);
      };
      var sp1__2 = function(x, y) {
        var or__3776__auto__ = function() {
          var G__8625 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8625) : p.call(null, G__8625);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var G__8626 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8626) : p.call(null, G__8626);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3776__auto__ = function() {
          var G__8628 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8628) : p.call(null, G__8628);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__8630 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8630) : p.call(null, G__8630);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var G__8631 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8631) : p.call(null, G__8631);
          }
        }
      };
      var sp1__4 = function() {
        var G__8792__delegate = function(x, y, z, args) {
          var or__3776__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__8792 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8793__i = 0, G__8793__a = new Array(arguments.length - 3);
            while (G__8793__i < G__8793__a.length) {
              G__8793__a[G__8793__i] = arguments[G__8793__i + 3];
              ++G__8793__i;
            }
            args = new cljs.core.IndexedSeq(G__8793__a, 0);
          }
          return G__8792__delegate.call(this, x, y, z, args);
        };
        G__8792.cljs$lang$maxFixedArity = 3;
        G__8792.cljs$lang$applyTo = function(arglist__8794) {
          var x = cljs.core.first(arglist__8794);
          arglist__8794 = cljs.core.next(arglist__8794);
          var y = cljs.core.first(arglist__8794);
          arglist__8794 = cljs.core.next(arglist__8794);
          var z = cljs.core.first(arglist__8794);
          var args = cljs.core.rest(arglist__8794);
          return G__8792__delegate(x, y, z, args);
        };
        G__8792.cljs$core$IFn$_invoke$arity$variadic = G__8792__delegate;
        return G__8792;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__8795 = null;
            if (arguments.length > 3) {
              var G__8796__i = 0, G__8796__a = new Array(arguments.length - 3);
              while (G__8796__i < G__8796__a.length) {
                G__8796__a[G__8796__i] = arguments[G__8796__i + 3];
                ++G__8796__i;
              }
              G__8795 = new cljs.core.IndexedSeq(G__8796__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8795);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3776__auto__ = function() {
          var G__8663 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8663) : p1.call(null, G__8663);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var G__8664 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8664) : p2.call(null, G__8664);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3776__auto__ = function() {
          var G__8666 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8666) : p1.call(null, G__8666);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__8668 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8668) : p1.call(null, G__8668);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__8670 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8670) : p2.call(null, G__8670);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var G__8671 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8671) : p2.call(null, G__8671);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3776__auto__ = function() {
          var G__8673 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8673) : p1.call(null, G__8673);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__8675 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8675) : p1.call(null, G__8675);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__8677 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8677) : p1.call(null, G__8677);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var or__3776__auto____$3 = function() {
                var G__8679 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8679) : p2.call(null, G__8679);
              }();
              if (cljs.core.truth_(or__3776__auto____$3)) {
                return or__3776__auto____$3;
              } else {
                var or__3776__auto____$4 = function() {
                  var G__8681 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8681) : p2.call(null, G__8681);
                }();
                if (cljs.core.truth_(or__3776__auto____$4)) {
                  return or__3776__auto____$4;
                } else {
                  var G__8682 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8682) : p2.call(null, G__8682);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__8797__delegate = function(x, y, z, args) {
          var or__3776__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.some(function(or__3776__auto__) {
              return function(p1__8418_SHARP_) {
                var or__3776__auto____$1 = function() {
                  var G__8684 = p1__8418_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8684) : p1.call(null, G__8684);
                }();
                if (cljs.core.truth_(or__3776__auto____$1)) {
                  return or__3776__auto____$1;
                } else {
                  var G__8685 = p1__8418_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8685) : p2.call(null, G__8685);
                }
              };
            }(or__3776__auto__), args);
          }
        };
        var G__8797 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8798__i = 0, G__8798__a = new Array(arguments.length - 3);
            while (G__8798__i < G__8798__a.length) {
              G__8798__a[G__8798__i] = arguments[G__8798__i + 3];
              ++G__8798__i;
            }
            args = new cljs.core.IndexedSeq(G__8798__a, 0);
          }
          return G__8797__delegate.call(this, x, y, z, args);
        };
        G__8797.cljs$lang$maxFixedArity = 3;
        G__8797.cljs$lang$applyTo = function(arglist__8799) {
          var x = cljs.core.first(arglist__8799);
          arglist__8799 = cljs.core.next(arglist__8799);
          var y = cljs.core.first(arglist__8799);
          arglist__8799 = cljs.core.next(arglist__8799);
          var z = cljs.core.first(arglist__8799);
          var args = cljs.core.rest(arglist__8799);
          return G__8797__delegate(x, y, z, args);
        };
        G__8797.cljs$core$IFn$_invoke$arity$variadic = G__8797__delegate;
        return G__8797;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__8800 = null;
            if (arguments.length > 3) {
              var G__8801__i = 0, G__8801__a = new Array(arguments.length - 3);
              while (G__8801__i < G__8801__a.length) {
                G__8801__a[G__8801__i] = arguments[G__8801__i + 3];
                ++G__8801__i;
              }
              G__8800 = new cljs.core.IndexedSeq(G__8801__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8800);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3776__auto__ = function() {
          var G__8731 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8731) : p1.call(null, G__8731);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__8733 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8733) : p2.call(null, G__8733);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var G__8734 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8734) : p3.call(null, G__8734);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3776__auto__ = function() {
          var G__8736 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8736) : p1.call(null, G__8736);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__8738 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8738) : p2.call(null, G__8738);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__8740 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8740) : p3.call(null, G__8740);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var or__3776__auto____$3 = function() {
                var G__8742 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8742) : p1.call(null, G__8742);
              }();
              if (cljs.core.truth_(or__3776__auto____$3)) {
                return or__3776__auto____$3;
              } else {
                var or__3776__auto____$4 = function() {
                  var G__8744 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8744) : p2.call(null, G__8744);
                }();
                if (cljs.core.truth_(or__3776__auto____$4)) {
                  return or__3776__auto____$4;
                } else {
                  var G__8745 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8745) : p3.call(null, G__8745);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3776__auto__ = function() {
          var G__8747 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8747) : p1.call(null, G__8747);
        }();
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          var or__3776__auto____$1 = function() {
            var G__8749 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8749) : p2.call(null, G__8749);
          }();
          if (cljs.core.truth_(or__3776__auto____$1)) {
            return or__3776__auto____$1;
          } else {
            var or__3776__auto____$2 = function() {
              var G__8751 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8751) : p3.call(null, G__8751);
            }();
            if (cljs.core.truth_(or__3776__auto____$2)) {
              return or__3776__auto____$2;
            } else {
              var or__3776__auto____$3 = function() {
                var G__8753 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8753) : p1.call(null, G__8753);
              }();
              if (cljs.core.truth_(or__3776__auto____$3)) {
                return or__3776__auto____$3;
              } else {
                var or__3776__auto____$4 = function() {
                  var G__8755 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8755) : p2.call(null, G__8755);
                }();
                if (cljs.core.truth_(or__3776__auto____$4)) {
                  return or__3776__auto____$4;
                } else {
                  var or__3776__auto____$5 = function() {
                    var G__8757 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8757) : p3.call(null, G__8757);
                  }();
                  if (cljs.core.truth_(or__3776__auto____$5)) {
                    return or__3776__auto____$5;
                  } else {
                    var or__3776__auto____$6 = function() {
                      var G__8759 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8759) : p1.call(null, G__8759);
                    }();
                    if (cljs.core.truth_(or__3776__auto____$6)) {
                      return or__3776__auto____$6;
                    } else {
                      var or__3776__auto____$7 = function() {
                        var G__8761 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8761) : p2.call(null, G__8761);
                      }();
                      if (cljs.core.truth_(or__3776__auto____$7)) {
                        return or__3776__auto____$7;
                      } else {
                        var G__8762 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8762) : p3.call(null, G__8762);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__8802__delegate = function(x, y, z, args) {
          var or__3776__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.some(function(or__3776__auto__) {
              return function(p1__8419_SHARP_) {
                var or__3776__auto____$1 = function() {
                  var G__8764 = p1__8419_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8764) : p1.call(null, G__8764);
                }();
                if (cljs.core.truth_(or__3776__auto____$1)) {
                  return or__3776__auto____$1;
                } else {
                  var or__3776__auto____$2 = function() {
                    var G__8766 = p1__8419_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8766) : p2.call(null, G__8766);
                  }();
                  if (cljs.core.truth_(or__3776__auto____$2)) {
                    return or__3776__auto____$2;
                  } else {
                    var G__8767 = p1__8419_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8767) : p3.call(null, G__8767);
                  }
                }
              };
            }(or__3776__auto__), args);
          }
        };
        var G__8802 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8803__i = 0, G__8803__a = new Array(arguments.length - 3);
            while (G__8803__i < G__8803__a.length) {
              G__8803__a[G__8803__i] = arguments[G__8803__i + 3];
              ++G__8803__i;
            }
            args = new cljs.core.IndexedSeq(G__8803__a, 0);
          }
          return G__8802__delegate.call(this, x, y, z, args);
        };
        G__8802.cljs$lang$maxFixedArity = 3;
        G__8802.cljs$lang$applyTo = function(arglist__8804) {
          var x = cljs.core.first(arglist__8804);
          arglist__8804 = cljs.core.next(arglist__8804);
          var y = cljs.core.first(arglist__8804);
          arglist__8804 = cljs.core.next(arglist__8804);
          var z = cljs.core.first(arglist__8804);
          var args = cljs.core.rest(arglist__8804);
          return G__8802__delegate(x, y, z, args);
        };
        G__8802.cljs$core$IFn$_invoke$arity$variadic = G__8802__delegate;
        return G__8802;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__8805 = null;
            if (arguments.length > 3) {
              var G__8806__i = 0, G__8806__a = new Array(arguments.length - 3);
              while (G__8806__i < G__8806__a.length) {
                G__8806__a[G__8806__i] = arguments[G__8806__i + 3];
                ++G__8806__i;
              }
              G__8805 = new cljs.core.IndexedSeq(G__8806__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8805);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__8807__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8420_SHARP_) {
                var G__8783 = x;
                return p1__8420_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8420_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8783) : p1__8420_SHARP_.call(null, G__8783);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8421_SHARP_) {
                var or__3776__auto__ = function() {
                  var G__8785 = x;
                  return p1__8421_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8421_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8785) : p1__8421_SHARP_.call(null, G__8785);
                }();
                if (cljs.core.truth_(or__3776__auto__)) {
                  return or__3776__auto__;
                } else {
                  var G__8786 = y;
                  return p1__8421_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8421_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8786) : p1__8421_SHARP_.call(null, G__8786);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__8422_SHARP_) {
                var or__3776__auto__ = function() {
                  var G__8788 = x;
                  return p1__8422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8788) : p1__8422_SHARP_.call(null, G__8788);
                }();
                if (cljs.core.truth_(or__3776__auto__)) {
                  return or__3776__auto__;
                } else {
                  var or__3776__auto____$1 = function() {
                    var G__8790 = y;
                    return p1__8422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8790) : p1__8422_SHARP_.call(null, G__8790);
                  }();
                  if (cljs.core.truth_(or__3776__auto____$1)) {
                    return or__3776__auto____$1;
                  } else {
                    var G__8791 = z;
                    return p1__8422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8791) : p1__8422_SHARP_.call(null, G__8791);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__8808__delegate = function(x, y, z, args) {
              var or__3776__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3776__auto__)) {
                return or__3776__auto__;
              } else {
                return cljs.core.some(function(or__3776__auto__, ps__$1) {
                  return function(p1__8423_SHARP_) {
                    return cljs.core.some(p1__8423_SHARP_, args);
                  };
                }(or__3776__auto__, ps__$1), ps__$1);
              }
            };
            var G__8808 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__8809__i = 0, G__8809__a = new Array(arguments.length - 3);
                while (G__8809__i < G__8809__a.length) {
                  G__8809__a[G__8809__i] = arguments[G__8809__i + 3];
                  ++G__8809__i;
                }
                args = new cljs.core.IndexedSeq(G__8809__a, 0);
              }
              return G__8808__delegate.call(this, x, y, z, args);
            };
            G__8808.cljs$lang$maxFixedArity = 3;
            G__8808.cljs$lang$applyTo = function(arglist__8810) {
              var x = cljs.core.first(arglist__8810);
              arglist__8810 = cljs.core.next(arglist__8810);
              var y = cljs.core.first(arglist__8810);
              arglist__8810 = cljs.core.next(arglist__8810);
              var z = cljs.core.first(arglist__8810);
              var args = cljs.core.rest(arglist__8810);
              return G__8808__delegate(x, y, z, args);
            };
            G__8808.cljs$core$IFn$_invoke$arity$variadic = G__8808__delegate;
            return G__8808;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__8811 = null;
                if (arguments.length > 3) {
                  var G__8812__i = 0, G__8812__a = new Array(arguments.length - 3);
                  while (G__8812__i < G__8812__a.length) {
                    G__8812__a[G__8812__i] = arguments[G__8812__i + 3];
                    ++G__8812__i;
                  }
                  G__8811 = new cljs.core.IndexedSeq(G__8812__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8811);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__8807 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__8813__i = 0, G__8813__a = new Array(arguments.length - 3);
        while (G__8813__i < G__8813__a.length) {
          G__8813__a[G__8813__i] = arguments[G__8813__i + 3];
          ++G__8813__i;
        }
        ps = new cljs.core.IndexedSeq(G__8813__a, 0);
      }
      return G__8807__delegate.call(this, p1, p2, p3, ps);
    };
    G__8807.cljs$lang$maxFixedArity = 3;
    G__8807.cljs$lang$applyTo = function(arglist__8814) {
      var p1 = cljs.core.first(arglist__8814);
      arglist__8814 = cljs.core.next(arglist__8814);
      var p2 = cljs.core.first(arglist__8814);
      arglist__8814 = cljs.core.next(arglist__8814);
      var p3 = cljs.core.first(arglist__8814);
      var ps = cljs.core.rest(arglist__8814);
      return G__8807__delegate(p1, p2, p3, ps);
    };
    G__8807.cljs$core$IFn$_invoke$arity$variadic = G__8807__delegate;
    return G__8807;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__8815 = null;
        if (arguments.length > 3) {
          var G__8816__i = 0, G__8816__a = new Array(arguments.length - 3);
          while (G__8816__i < G__8816__a.length) {
            G__8816__a[G__8816__i] = arguments[G__8816__i + 3];
            ++G__8816__i;
          }
          G__8815 = new cljs.core.IndexedSeq(G__8816__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__8815);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__8871 = null;
        var G__8871__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8871__1 = function(result) {
          var G__8857 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8857) : rf.call(null, G__8857);
        };
        var G__8871__2 = function(result, input) {
          var G__8858 = result;
          var G__8859 = function() {
            var G__8860 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8860) : f.call(null, G__8860);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8858, G__8859) : rf.call(null, G__8858, G__8859);
        };
        var G__8871__3 = function() {
          var G__8872__delegate = function(result, input, inputs) {
            var G__8861 = result;
            var G__8862 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8861, G__8862) : rf.call(null, G__8861, G__8862);
          };
          var G__8872 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__8873__i = 0, G__8873__a = new Array(arguments.length - 2);
              while (G__8873__i < G__8873__a.length) {
                G__8873__a[G__8873__i] = arguments[G__8873__i + 2];
                ++G__8873__i;
              }
              inputs = new cljs.core.IndexedSeq(G__8873__a, 0);
            }
            return G__8872__delegate.call(this, result, input, inputs);
          };
          G__8872.cljs$lang$maxFixedArity = 2;
          G__8872.cljs$lang$applyTo = function(arglist__8874) {
            var result = cljs.core.first(arglist__8874);
            arglist__8874 = cljs.core.next(arglist__8874);
            var input = cljs.core.first(arglist__8874);
            var inputs = cljs.core.rest(arglist__8874);
            return G__8872__delegate(result, input, inputs);
          };
          G__8872.cljs$core$IFn$_invoke$arity$variadic = G__8872__delegate;
          return G__8872;
        }();
        G__8871 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__8871__0.call(this);
            case 1:
              return G__8871__1.call(this, result);
            case 2:
              return G__8871__2.call(this, result, input);
            default:
              var G__8875 = null;
              if (arguments.length > 2) {
                var G__8876__i = 0, G__8876__a = new Array(arguments.length - 2);
                while (G__8876__i < G__8876__a.length) {
                  G__8876__a[G__8876__i] = arguments[G__8876__i + 2];
                  ++G__8876__i;
                }
                G__8875 = new cljs.core.IndexedSeq(G__8876__a, 0);
              }
              return G__8871__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__8875);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8871.cljs$lang$maxFixedArity = 2;
        G__8871.cljs$lang$applyTo = G__8871__3.cljs$lang$applyTo;
        G__8871.cljs$core$IFn$_invoke$arity$0 = G__8871__0;
        G__8871.cljs$core$IFn$_invoke$arity$1 = G__8871__1;
        G__8871.cljs$core$IFn$_invoke$arity$2 = G__8871__2;
        G__8871.cljs$core$IFn$_invoke$arity$variadic = G__8871__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__8871;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4663__auto___8877 = size;
          var i_8878 = 0;
          while (true) {
            if (i_8878 < n__4663__auto___8877) {
              cljs.core.chunk_append(b, function() {
                var G__8863 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8878);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8863) : f.call(null, G__8863);
              }());
              var G__8879 = i_8878 + 1;
              i_8878 = G__8879;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8864 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8864) : f.call(null, G__8864);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__8865 = cljs.core.first(s1);
          var G__8866 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8865, G__8866) : f.call(null, G__8865, G__8866);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__8867 = cljs.core.first(s1);
          var G__8868 = cljs.core.first(s2);
          var G__8869 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8867, G__8868, G__8869) : f.call(null, G__8867, G__8868, G__8869);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__8880__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__8817_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__8817_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__8880 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__8881__i = 0, G__8881__a = new Array(arguments.length - 4);
        while (G__8881__i < G__8881__a.length) {
          G__8881__a[G__8881__i] = arguments[G__8881__i + 4];
          ++G__8881__i;
        }
        colls = new cljs.core.IndexedSeq(G__8881__a, 0);
      }
      return G__8880__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__8880.cljs$lang$maxFixedArity = 4;
    G__8880.cljs$lang$applyTo = function(arglist__8882) {
      var f = cljs.core.first(arglist__8882);
      arglist__8882 = cljs.core.next(arglist__8882);
      var c1 = cljs.core.first(arglist__8882);
      arglist__8882 = cljs.core.next(arglist__8882);
      var c2 = cljs.core.first(arglist__8882);
      arglist__8882 = cljs.core.next(arglist__8882);
      var c3 = cljs.core.first(arglist__8882);
      var colls = cljs.core.rest(arglist__8882);
      return G__8880__delegate(f, c1, c2, c3, colls);
    };
    G__8880.cljs$core$IFn$_invoke$arity$variadic = G__8880__delegate;
    return G__8880;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__8883 = null;
        if (arguments.length > 4) {
          var G__8884__i = 0, G__8884__a = new Array(arguments.length - 4);
          while (G__8884__i < G__8884__a.length) {
            G__8884__a[G__8884__i] = arguments[G__8884__i + 4];
            ++G__8884__i;
          }
          G__8883 = new cljs.core.IndexedSeq(G__8884__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__8883);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8893 = null;
          var G__8893__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8893__1 = function(result) {
            var G__8890 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8890) : rf.call(null, G__8890);
          };
          var G__8893__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__8891 = result;
              var G__8892 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8891, G__8892) : rf.call(null, G__8891, G__8892);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__8893 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8893__0.call(this);
              case 1:
                return G__8893__1.call(this, result);
              case 2:
                return G__8893__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8893.cljs$core$IFn$_invoke$arity$0 = G__8893__0;
          G__8893.cljs$core$IFn$_invoke$arity$1 = G__8893__1;
          G__8893.cljs$core$IFn$_invoke$arity$2 = G__8893__2;
          return G__8893;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__8900 = null;
          var G__8900__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8900__1 = function(result) {
            var G__8897 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8897) : rf.call(null, G__8897);
          };
          var G__8900__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__8898 = result;
              var G__8899 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8898, G__8899) : rf.call(null, G__8898, G__8899);
            }
          };
          G__8900 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8900__0.call(this);
              case 1:
                return G__8900__1.call(this, result);
              case 2:
                return G__8900__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8900.cljs$core$IFn$_invoke$arity$0 = G__8900__0;
          G__8900.cljs$core$IFn$_invoke$arity$1 = G__8900__1;
          G__8900.cljs$core$IFn$_invoke$arity$2 = G__8900__2;
          return G__8900;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__8901 = n__$1 - 1;
          var G__8902 = cljs.core.rest(s);
          n__$1 = G__8901;
          coll__$1 = G__8902;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__8905 = cljs.core.next(s);
      var G__8906 = cljs.core.next(lead);
      s = G__8905;
      lead = G__8906;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__8919 = null;
          var G__8919__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8919__1 = function(result) {
            var G__8913 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8913) : rf.call(null, G__8913);
          };
          var G__8919__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3764__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3764__auto__)) {
                var G__8914 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8914) : pred.call(null, G__8914);
              } else {
                return and__3764__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__8915 = result;
              var G__8916 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8915, G__8916) : rf.call(null, G__8915, G__8916);
            }
          };
          G__8919 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8919__0.call(this);
              case 1:
                return G__8919__1.call(this, result);
              case 2:
                return G__8919__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8919.cljs$core$IFn$_invoke$arity$0 = G__8919__0;
          G__8919.cljs$core$IFn$_invoke$arity$1 = G__8919__1;
          G__8919.cljs$core$IFn$_invoke$arity$2 = G__8919__2;
          return G__8919;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3764__auto__ = s;
          if (and__3764__auto__) {
            var G__8918 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8918) : pred__$1.call(null, G__8918);
          } else {
            return and__3764__auto__;
          }
        }())) {
          var G__8920 = pred__$1;
          var G__8921 = cljs.core.rest(s);
          pred__$1 = G__8920;
          coll__$1 = G__8921;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__8930 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8930) : f.call(null, G__8930);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__8933__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__8933 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__8934__i = 0, G__8934__a = new Array(arguments.length - 2);
        while (G__8934__i < G__8934__a.length) {
          G__8934__a[G__8934__i] = arguments[G__8934__i + 2];
          ++G__8934__i;
        }
        colls = new cljs.core.IndexedSeq(G__8934__a, 0);
      }
      return G__8933__delegate.call(this, c1, c2, colls);
    };
    G__8933.cljs$lang$maxFixedArity = 2;
    G__8933.cljs$lang$applyTo = function(arglist__8935) {
      var c1 = cljs.core.first(arglist__8935);
      arglist__8935 = cljs.core.next(arglist__8935);
      var c2 = cljs.core.first(arglist__8935);
      var colls = cljs.core.rest(arglist__8935);
      return G__8933__delegate(c1, c2, colls);
    };
    G__8933.cljs$core$IFn$_invoke$arity$variadic = G__8933__delegate;
    return G__8933;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__8936 = null;
        if (arguments.length > 2) {
          var G__8937__i = 0, G__8937__a = new Array(arguments.length - 2);
          while (G__8937__i < G__8937__a.length) {
            G__8937__a[G__8937__i] = arguments[G__8937__i + 2];
            ++G__8937__i;
          }
          G__8936 = new cljs.core.IndexedSeq(G__8937__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__8936);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__8952 = null;
          var G__8952__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__8952__1 = function(result) {
            var G__8945 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8945) : rf.call(null, G__8945);
          };
          var G__8952__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__8946 = result;
                var G__8947 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8946, G__8947) : rf.call(null, G__8946, G__8947);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__8948 = sepr;
                var G__8949 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8948, G__8949) : rf.call(null, G__8948, G__8949);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__8950 = result;
              var G__8951 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8950, G__8951) : rf.call(null, G__8950, G__8951);
            }
          };
          G__8952 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__8952__0.call(this);
              case 1:
                return G__8952__1.call(this, result);
              case 2:
                return G__8952__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__8952.cljs$core$IFn$_invoke$arity$0 = G__8952__0;
          G__8952.cljs$core$IFn$_invoke$arity$1 = G__8952__1;
          G__8952.cljs$core$IFn$_invoke$arity$2 = G__8952__2;
          return G__8952;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__8961__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__8961 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__8962__i = 0, G__8962__a = new Array(arguments.length - 1);
        while (G__8962__i < G__8962__a.length) {
          G__8962__a[G__8962__i] = arguments[G__8962__i + 1];
          ++G__8962__i;
        }
        colls = new cljs.core.IndexedSeq(G__8962__a, 0);
      }
      return G__8961__delegate.call(this, f, colls);
    };
    G__8961.cljs$lang$maxFixedArity = 1;
    G__8961.cljs$lang$applyTo = function(arglist__8963) {
      var f = cljs.core.first(arglist__8963);
      var colls = cljs.core.rest(arglist__8963);
      return G__8961__delegate(f, colls);
    };
    G__8961.cljs$core$IFn$_invoke$arity$variadic = G__8961__delegate;
    return G__8961;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__8964 = null;
        if (arguments.length > 1) {
          var G__8965__i = 0, G__8965__a = new Array(arguments.length - 1);
          while (G__8965__i < G__8965__a.length) {
            G__8965__a[G__8965__i] = arguments[G__8965__i + 1];
            ++G__8965__i;
          }
          G__8964 = new cljs.core.IndexedSeq(G__8965__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8964);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__8984 = null;
        var G__8984__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8984__1 = function(result) {
          var G__8978 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8978) : rf.call(null, G__8978);
        };
        var G__8984__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__8979 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8979) : pred.call(null, G__8979);
          }())) {
            var G__8980 = result;
            var G__8981 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8980, G__8981) : rf.call(null, G__8980, G__8981);
          } else {
            return result;
          }
        };
        G__8984 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8984__0.call(this);
            case 1:
              return G__8984__1.call(this, result);
            case 2:
              return G__8984__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8984.cljs$core$IFn$_invoke$arity$0 = G__8984__0;
        G__8984.cljs$core$IFn$_invoke$arity$1 = G__8984__1;
        G__8984.cljs$core$IFn$_invoke$arity$2 = G__8984__2;
        return G__8984;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4663__auto___8985 = size;
          var i_8986 = 0;
          while (true) {
            if (i_8986 < n__4663__auto___8985) {
              if (cljs.core.truth_(function() {
                var G__8982 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8986);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8982) : pred.call(null, G__8982);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8986));
              } else {
              }
              var G__8987 = i_8986 + 1;
              i_8986 = G__8987;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__8983 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8983) : pred.call(null, G__8983);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__8994 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8994) : branch_QMARK_.call(null, G__8994);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__8995 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8995) : children.call(null, G__8995);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__8996_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__8996_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__8999 = to;
        if (G__8999) {
          var bit__4450__auto__ = G__8999.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4450__auto__ || G__8999.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__9000 = to;
      if (G__9000) {
        var bit__4450__auto__ = G__9000.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4450__auto__ || G__9000.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__9002 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9002) : f.call(null, G__9002);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__9003__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__9003 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__9004__i = 0, G__9004__a = new Array(arguments.length - 4);
        while (G__9004__i < G__9004__a.length) {
          G__9004__a[G__9004__i] = arguments[G__9004__i + 4];
          ++G__9004__i;
        }
        colls = new cljs.core.IndexedSeq(G__9004__a, 0);
      }
      return G__9003__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__9003.cljs$lang$maxFixedArity = 4;
    G__9003.cljs$lang$applyTo = function(arglist__9005) {
      var f = cljs.core.first(arglist__9005);
      arglist__9005 = cljs.core.next(arglist__9005);
      var c1 = cljs.core.first(arglist__9005);
      arglist__9005 = cljs.core.next(arglist__9005);
      var c2 = cljs.core.first(arglist__9005);
      arglist__9005 = cljs.core.next(arglist__9005);
      var c3 = cljs.core.first(arglist__9005);
      var colls = cljs.core.rest(arglist__9005);
      return G__9003__delegate(f, c1, c2, c3, colls);
    };
    G__9003.cljs$core$IFn$_invoke$arity$variadic = G__9003__delegate;
    return G__9003;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__9006 = null;
        if (arguments.length > 4) {
          var G__9007__i = 0, G__9007__a = new Array(arguments.length - 4);
          while (G__9007__i < G__9007__a.length) {
            G__9007__a[G__9007__i] = arguments[G__9007__i + 4];
            ++G__9007__i;
          }
          G__9006 = new cljs.core.IndexedSeq(G__9007__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__9006);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__9009 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9009) : pred.call(null, G__9009);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__9024 = m__$1;
          if (G__9024) {
            var bit__4457__auto__ = G__9024.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4457__auto__ || G__9024.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__9024.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9024);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9024);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__9025 = sentinel;
            var G__9026 = m__$2;
            var G__9027 = cljs.core.next(ks__$1);
            sentinel = G__9025;
            m__$1 = G__9026;
            ks__$1 = G__9027;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__9028, v) {
  var vec__9033 = p__9028;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9033, 0, null);
  var ks = cljs.core.nthnext(vec__9033, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__9034, f) {
    var vec__9072 = p__9034;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9072, 0, null);
    var ks = cljs.core.nthnext(vec__9072, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9073 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9073) : f.call(null, G__9073);
      }());
    }
  };
  var update_in__4 = function(m, p__9035, f, a) {
    var vec__9074 = p__9035;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9074, 0, null);
    var ks = cljs.core.nthnext(vec__9074, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9075 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9076 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9075, G__9076) : f.call(null, G__9075, G__9076);
      }());
    }
  };
  var update_in__5 = function(m, p__9036, f, a, b) {
    var vec__9077 = p__9036;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9077, 0, null);
    var ks = cljs.core.nthnext(vec__9077, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9078 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9079 = a;
        var G__9080 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9078, G__9079, G__9080) : f.call(null, G__9078, G__9079, G__9080);
      }());
    }
  };
  var update_in__6 = function(m, p__9037, f, a, b, c) {
    var vec__9081 = p__9037;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9081, 0, null);
    var ks = cljs.core.nthnext(vec__9081, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__9082 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__9083 = a;
        var G__9084 = b;
        var G__9085 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9082, G__9083, G__9084, G__9085) : f.call(null, G__9082, G__9083, G__9084, G__9085);
      }());
    }
  };
  var update_in__7 = function() {
    var G__9087__delegate = function(m, p__9038, f, a, b, c, args) {
      var vec__9086 = p__9038;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9086, 0, null);
      var ks = cljs.core.nthnext(vec__9086, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__9087 = function(m, p__9038, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__9088__i = 0, G__9088__a = new Array(arguments.length - 6);
        while (G__9088__i < G__9088__a.length) {
          G__9088__a[G__9088__i] = arguments[G__9088__i + 6];
          ++G__9088__i;
        }
        args = new cljs.core.IndexedSeq(G__9088__a, 0);
      }
      return G__9087__delegate.call(this, m, p__9038, f, a, b, c, args);
    };
    G__9087.cljs$lang$maxFixedArity = 6;
    G__9087.cljs$lang$applyTo = function(arglist__9089) {
      var m = cljs.core.first(arglist__9089);
      arglist__9089 = cljs.core.next(arglist__9089);
      var p__9038 = cljs.core.first(arglist__9089);
      arglist__9089 = cljs.core.next(arglist__9089);
      var f = cljs.core.first(arglist__9089);
      arglist__9089 = cljs.core.next(arglist__9089);
      var a = cljs.core.first(arglist__9089);
      arglist__9089 = cljs.core.next(arglist__9089);
      var b = cljs.core.first(arglist__9089);
      arglist__9089 = cljs.core.next(arglist__9089);
      var c = cljs.core.first(arglist__9089);
      var args = cljs.core.rest(arglist__9089);
      return G__9087__delegate(m, p__9038, f, a, b, c, args);
    };
    G__9087.cljs$core$IFn$_invoke$arity$variadic = G__9087__delegate;
    return G__9087;
  }();
  update_in = function(m, p__9038, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__9038, f);
      case 4:
        return update_in__4.call(this, m, p__9038, f, a);
      case 5:
        return update_in__5.call(this, m, p__9038, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__9038, f, a, b, c);
      default:
        var G__9090 = null;
        if (arguments.length > 6) {
          var G__9091__i = 0, G__9091__a = new Array(arguments.length - 6);
          while (G__9091__i < G__9091__a.length) {
            G__9091__a[G__9091__i] = arguments[G__9091__i + 6];
            ++G__9091__i;
          }
          G__9090 = new cljs.core.IndexedSeq(G__9091__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__9038, f, a, b, c, G__9090);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9102 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9102) : f.call(null, G__9102);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9103 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9104 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9103, G__9104) : f.call(null, G__9103, G__9104);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9105 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9106 = x;
      var G__9107 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9105, G__9106, G__9107) : f.call(null, G__9105, G__9106, G__9107);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9108 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9109 = x;
      var G__9110 = y;
      var G__9111 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9108, G__9109, G__9110, G__9111) : f.call(null, G__9108, G__9109, G__9110, G__9111);
    }());
  };
  var update__7 = function() {
    var G__9112__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__9112 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__9113__i = 0, G__9113__a = new Array(arguments.length - 6);
        while (G__9113__i < G__9113__a.length) {
          G__9113__a[G__9113__i] = arguments[G__9113__i + 6];
          ++G__9113__i;
        }
        more = new cljs.core.IndexedSeq(G__9113__a, 0);
      }
      return G__9112__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__9112.cljs$lang$maxFixedArity = 6;
    G__9112.cljs$lang$applyTo = function(arglist__9114) {
      var m = cljs.core.first(arglist__9114);
      arglist__9114 = cljs.core.next(arglist__9114);
      var k = cljs.core.first(arglist__9114);
      arglist__9114 = cljs.core.next(arglist__9114);
      var f = cljs.core.first(arglist__9114);
      arglist__9114 = cljs.core.next(arglist__9114);
      var x = cljs.core.first(arglist__9114);
      arglist__9114 = cljs.core.next(arglist__9114);
      var y = cljs.core.first(arglist__9114);
      arglist__9114 = cljs.core.next(arglist__9114);
      var z = cljs.core.first(arglist__9114);
      var more = cljs.core.rest(arglist__9114);
      return G__9112__delegate(m, k, f, x, y, z, more);
    };
    G__9112.cljs$core$IFn$_invoke$arity$variadic = G__9112__delegate;
    return G__9112;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__9115 = null;
        if (arguments.length > 6) {
          var G__9116__i = 0, G__9116__a = new Array(arguments.length - 6);
          while (G__9116__i < G__9116__a.length) {
            G__9116__a[G__9116__i] = arguments[G__9116__i + 6];
            ++G__9116__i;
          }
          G__9115 = new cljs.core.IndexedSeq(G__9116__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__9115);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__9117 = ll - 5;
      var G__9118 = r;
      ll = G__9117;
      ret = G__9118;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__9123 = cljs.core.pv_aget(node, 0);
      var G__9124 = level - 5;
      node = G__9123;
      level = G__9124;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__9125 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__9126 = level - 5;
        node = G__9125;
        level = G__9126;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9136 = init__$2;
              var G__9137 = j + i;
              var G__9138 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9136, G__9137, G__9138) : f.call(null, G__9136, G__9137, G__9138);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9149 = j + 1;
              var G__9150 = init__$3;
              j = G__9149;
              init__$2 = G__9150;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9139 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9139) : cljs.core.deref.call(null, G__9139);
      } else {
        var G__9151 = i + len;
        var G__9152 = init__$2;
        i = G__9151;
        init__$1 = G__9152;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__9140 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9140) : cljs.core.tv_editable_root.call(null, G__9140);
  }(), function() {
    var G__9141 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9141) : cljs.core.tv_editable_tail.call(null, G__9141);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9142 = init__$2;
              var G__9143 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9142, G__9143) : f.call(null, G__9142, G__9143);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9153 = j + 1;
              var G__9154 = init__$3;
              j = G__9153;
              init__$2 = G__9154;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9144 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9144) : cljs.core.deref.call(null, G__9144);
      } else {
        var G__9155 = i + len;
        var G__9156 = init__$2;
        i = G__9155;
        init__$1 = G__9156;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__9145 = coll__$1;
      var G__9146 = cljs.core.first_array_for_longvec(coll__$1);
      var G__9147 = 0;
      var G__9148 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9145, G__9146, G__9147, G__9148) : cljs.core.chunked_seq.call(null, G__9145, G__9146, G__9147, G__9148);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4663__auto___9157 = len;
    var i_9158 = 0;
    while (true) {
      if (i_9158 < n__4663__auto___9157) {
        new_tail[i_9158] = self__.tail[i_9158];
        var G__9159 = i_9158 + 1;
        i_9158 = G__9159;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9160 = null;
  var G__9160__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9160__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9160 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9160__2.call(this, self__, k);
      case 3:
        return G__9160__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9160.cljs$core$IFn$_invoke$arity$2 = G__9160__2;
  G__9160.cljs$core$IFn$_invoke$arity$3 = G__9160__3;
  return G__9160;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9135) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9135)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__9161 = i + 1;
        var G__9162 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__9161;
        out = G__9162;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__9163__i = 0, G__9163__a = new Array(arguments.length - 0);
      while (G__9163__i < G__9163__a.length) {
        G__9163__a[G__9163__i] = arguments[G__9163__i + 0];
        ++G__9163__i;
      }
      args = new cljs.core.IndexedSeq(G__9163__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9164) {
    var args = cljs.core.seq(arglist__9164);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9165 = self__.vec;
      var G__9166 = self__.node;
      var G__9167 = self__.i;
      var G__9168 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9165, G__9166, G__9167, G__9168) : cljs.core.chunked_seq.call(null, G__9165, G__9166, G__9167, G__9168);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9169 = self__.vec;
    var G__9170 = self__.i + self__.off;
    var G__9171 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9169, G__9170, G__9171) : cljs.core.subvec.call(null, G__9169, G__9170, G__9171);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9172 = self__.vec;
    var G__9173 = self__.i + self__.off;
    var G__9174 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9172, G__9173, G__9174) : cljs.core.subvec.call(null, G__9172, G__9173, G__9174);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9175 = self__.vec;
      var G__9176 = self__.node;
      var G__9177 = self__.i;
      var G__9178 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9175, G__9176, G__9177, G__9178) : cljs.core.chunked_seq.call(null, G__9175, G__9176, G__9177, G__9178);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9179 = self__.vec;
    var G__9180 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9181 = end;
    var G__9182 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9179, G__9180, G__9181, G__9182) : cljs.core.chunked_seq.call(null, G__9179, G__9180, G__9181, G__9182);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__9183 = self__.vec;
  var G__9184 = self__.node;
  var G__9185 = self__.i;
  var G__9186 = self__.off;
  var G__9187 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9183, G__9184, G__9185, G__9186, G__9187) : cljs.core.chunked_seq.call(null, G__9183, G__9184, G__9185, G__9186, G__9187);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9188 = self__.vec;
    var G__9189 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9190 = end;
    var G__9191 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9188, G__9189, G__9190, G__9191) : cljs.core.chunked_seq.call(null, G__9188, G__9189, G__9190, G__9191);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__9193 = self__.meta;
  var G__9194 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__9195 = self__.start;
  var G__9196 = function() {
    var x__4093__auto__ = self__.end;
    var y__4094__auto__ = v_pos + 1;
    return x__4093__auto__ > y__4094__auto__ ? x__4093__auto__ : y__4094__auto__;
  }();
  var G__9197 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9193, G__9194, G__9195, G__9196, G__9197) : cljs.core.build_subvec.call(null, G__9193, G__9194, G__9195, G__9196, G__9197);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__9198 = self__.meta;
    var G__9199 = self__.v;
    var G__9200 = self__.start;
    var G__9201 = self__.end - 1;
    var G__9202 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9198, G__9199, G__9200, G__9201, G__9202) : cljs.core.build_subvec.call(null, G__9198, G__9199, G__9200, G__9201, G__9202);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__9204 = meta__$1;
  var G__9205 = self__.v;
  var G__9206 = self__.start;
  var G__9207 = self__.end;
  var G__9208 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9204, G__9205, G__9206, G__9207, G__9208) : cljs.core.build_subvec.call(null, G__9204, G__9205, G__9206, G__9207, G__9208);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9209 = self__.meta;
  var G__9210 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__9211 = self__.start;
  var G__9212 = self__.end + 1;
  var G__9213 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9209, G__9210, G__9211, G__9212, G__9213) : cljs.core.build_subvec.call(null, G__9209, G__9210, G__9211, G__9212, G__9213);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9214 = null;
  var G__9214__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9214__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9214 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9214__2.call(this, self__, k);
      case 3:
        return G__9214__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9214.cljs$core$IFn$_invoke$arity$2 = G__9214__2;
  G__9214.cljs$core$IFn$_invoke$arity$3 = G__9214__3;
  return G__9214;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9192) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9192)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9215 = meta;
      var G__9216 = v.v;
      var G__9217 = v.start + start;
      var G__9218 = v.start + end;
      var G__9219 = __hash;
      meta = G__9215;
      v = G__9216;
      start = G__9217;
      end = G__9218;
      __hash = G__9219;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9226 = {};
    return obj9226;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9234 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__9235 = level - 5;
        node = G__9234;
        level = G__9235;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9239 = null;
  var G__9239__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9239__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9239 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9239__2.call(this, self__, k);
      case 3:
        return G__9239__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9239.cljs$core$IFn$_invoke$arity$2 = G__9239__2;
  G__9239.cljs$core$IFn$_invoke$arity$3 = G__9239__3;
  return G__9239;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9236) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9236)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3776__auto__ = self__.front;
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3776__auto__ = self__.rear;
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9240 = i + incr;
        i = G__9240;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9241 = i + 1;
      var G__9242 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__9241;
      out = G__9242;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9246 = {};
    return obj9246;
  }();
  var l = ks.length;
  var i_9247 = 0;
  while (true) {
    if (i_9247 < l) {
      var k_9248 = ks[i_9247];
      new_obj[k_9248] = obj[k_9248];
      var G__9249 = i_9247 + 1;
      i_9247 = G__9249;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = function() {
      var G__9253 = k;
      return goog.isString(G__9253);
    }();
    if (cljs.core.truth_(and__3764__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3764__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__9254 = init__$1;
        var G__9255 = k;
        var G__9256 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9254, G__9255, G__9256) : f.call(null, G__9254, G__9255, G__9256);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9257 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9257) : cljs.core.deref.call(null, G__9257);
      } else {
        var G__9263 = cljs.core.rest(keys__$1);
        var G__9264 = init__$2;
        keys__$1 = G__9263;
        init__$1 = G__9264;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = function() {
      var G__9259 = k;
      return goog.isString(G__9259);
    }();
    if (cljs.core.truth_(and__3764__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3764__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__9260 = k;
    return goog.isString(G__9260);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3764__auto__ = function() {
      var G__9262 = k;
      return goog.isString(G__9262);
    }();
    if (cljs.core.truth_(and__3764__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3764__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__9250_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9250_SHARP_, self__.strobj[p1__9250_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9265 = null;
  var G__9265__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9265__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9265 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9265__2.call(this, self__, k);
      case 3:
        return G__9265__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9265.cljs$core$IFn$_invoke$arity$2 = G__9265__2;
  G__9265.cljs$core$IFn$_invoke$arity$3 = G__9265__3;
  return G__9265;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9251) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9251)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9267 = {};
  return obj9267;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__9268 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9268, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9268, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__9269 = i + 2;
        i = G__9269;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__9270 = i + 2;
        i = G__9270;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__9271 = i + 2;
        i = G__9271;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__9272 = i + 2;
        i = G__9272;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__9273 = i + 2;
        i = G__9273;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3776__auto__ = function() {
        var G__9277 = k;
        return goog.isString(G__9277);
      }();
      if (cljs.core.truth_(or__3776__auto__)) {
        return or__3776__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9278 = 0;
  while (true) {
    if (i_9278 < l) {
      narr[i_9278] = arr[i_9278];
      var G__9279 = i_9278 + 1;
      i_9278 = G__9279;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9281 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9281) : cljs.core.keys.call(null, G__9281);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9282 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9282) : cljs.core.vals.call(null, G__9282);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9283 = cljs.core.seq(coll);
  var chunk__9284 = null;
  var count__9285 = 0;
  var i__9286 = 0;
  while (true) {
    if (i__9286 < count__9285) {
      var vec__9287 = chunk__9284.cljs$core$IIndexed$_nth$arity$2(null, i__9286);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9287, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9287, 1, null);
      var G__9288_9301 = v;
      var G__9289_9302 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9288_9301, G__9289_9302) : f.call(null, G__9288_9301, G__9289_9302);
      var G__9303 = seq__9283;
      var G__9304 = chunk__9284;
      var G__9305 = count__9285;
      var G__9306 = i__9286 + 1;
      seq__9283 = G__9303;
      chunk__9284 = G__9304;
      count__9285 = G__9305;
      i__9286 = G__9306;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9283);
      if (temp__4126__auto__) {
        var seq__9283__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9283__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__9283__$1);
          var G__9307 = cljs.core.chunk_rest(seq__9283__$1);
          var G__9308 = c__4563__auto__;
          var G__9309 = cljs.core.count(c__4563__auto__);
          var G__9310 = 0;
          seq__9283 = G__9307;
          chunk__9284 = G__9308;
          count__9285 = G__9309;
          i__9286 = G__9310;
          continue;
        } else {
          var vec__9290 = cljs.core.first(seq__9283__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9290, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9290, 1, null);
          var G__9291_9311 = v;
          var G__9292_9312 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9291_9311, G__9292_9312) : f.call(null, G__9291_9311, G__9292_9312);
          var G__9313 = cljs.core.next(seq__9283__$1);
          var G__9314 = null;
          var G__9315 = 0;
          var G__9316 = 0;
          seq__9283 = G__9313;
          chunk__9284 = G__9314;
          count__9285 = G__9315;
          i__9286 = G__9316;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__9293 = init__$1;
        var G__9294 = self__.arr[i];
        var G__9295 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9293, G__9294, G__9295) : f.call(null, G__9293, G__9294, G__9295);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9296 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9296) : cljs.core.deref.call(null, G__9296);
      } else {
        var G__9317 = i + 2;
        var G__9318 = init__$2;
        i = G__9317;
        init__$1 = G__9318;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__9297 = other;
    if (G__9297) {
      var bit__4450__auto__ = G__9297.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4450__auto__ || G__9297.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__9319 = i + 2;
              i = G__9319;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9299 = {};
    return obj9299;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__9320 = s + 2;
            var G__9321 = d;
            s = G__9320;
            d = G__9321;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__9322 = s + 2;
            var G__9323 = d + 2;
            s = G__9322;
            d = G__9323;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__9300 = cljs.core.aclone(self__.arr);
        G__9300[idx + 1] = v;
        return G__9300;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9324 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9325 = cljs.core.next(es);
          ret = G__9324;
          es = G__9325;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9326 = null;
  var G__9326__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9326__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9326 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9326__2.call(this, self__, k);
      case 3:
        return G__9326__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9326.cljs$core$IFn$_invoke$arity$2 = G__9326__2;
  G__9326.cljs$core$IFn$_invoke$arity$3 = G__9326__3;
  return G__9326;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9280) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9280)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9327 = i + 2;
        var G__9328 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__9327;
        ret = G__9328;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9329_9337 = self__.arr;
      G__9329_9337.pop();
      G__9329_9337.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9330 = self__.len;
          var G__9331 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9330, G__9331) : cljs.core.array__GT_transient_hash_map.call(null, G__9330, G__9331);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9332 = o;
      if (G__9332) {
        var bit__4457__auto__ = G__9332.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4457__auto__ || G__9332.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9332.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9332);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9332);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__9333 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9333) : cljs.core.key.call(null, G__9333);
      }(), function() {
        var G__9334 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9334) : cljs.core.val.call(null, G__9334);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9338 = cljs.core.next(es);
          var G__9339 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__9335 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9335) : cljs.core.key.call(null, G__9335);
          }(), function() {
            var G__9336 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9336) : cljs.core.val.call(null, G__9336);
          }());
          es = G__9338;
          tcoll__$2 = G__9339;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9340 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__9341 = i + 2;
      out = G__9340;
      i = G__9341;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9344 = cljs.core.aclone(arr);
    G__9344[i] = a;
    return G__9344;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9345 = cljs.core.aclone(arr);
    G__9345[i] = a;
    G__9345[j] = b;
    return G__9345;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__9350 = init__$1;
          var G__9351 = k;
          var G__9352 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9350, G__9351, G__9352) : f.call(null, G__9350, G__9351, G__9352);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9353 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9353) : cljs.core.deref.call(null, G__9353);
      } else {
        var G__9354 = i + 2;
        var G__9355 = init__$2;
        i = G__9354;
        init__$1 = G__9355;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9356 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9356) : cljs.core.create_inode_seq.call(null, G__9356);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9370 = 0;
        var j_9371 = 0;
        while (true) {
          if (i_9370 < 32) {
            if ((self__.bitmap >>> i_9370 & 1) === 0) {
              var G__9372 = i_9370 + 1;
              var G__9373 = j_9371;
              i_9370 = G__9372;
              j_9371 = G__9373;
              continue;
            } else {
              nodes[i_9370] = !(self__.arr[j_9371] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_9371]), self__.arr[j_9371], self__.arr[j_9371 + 1], added_leaf_QMARK_) : self__.arr[j_9371 + 1];
              var G__9374 = i_9370 + 1;
              var G__9375 = j_9371 + 2;
              i_9370 = G__9374;
              j_9371 = G__9375;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__9357 = edit__$1;
          var G__9358 = shift + 5;
          var G__9359 = key_or_nil;
          var G__9360 = val_or_node;
          var G__9361 = hash;
          var G__9362 = key;
          var G__9363 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9357, G__9358, G__9359, G__9360, G__9361, G__9362, G__9363) : cljs.core.create_node.call(null, G__9357, G__9358, G__9359, G__9360, G__9361, G__9362, G__9363);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9376 = 0;
      var j_9377 = 0;
      while (true) {
        if (i_9376 < 32) {
          if ((self__.bitmap >>> i_9376 & 1) === 0) {
            var G__9378 = i_9376 + 1;
            var G__9379 = j_9377;
            i_9376 = G__9378;
            j_9377 = G__9379;
            continue;
          } else {
            nodes[i_9376] = !(self__.arr[j_9377] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_9377]), self__.arr[j_9377], self__.arr[j_9377 + 1], added_leaf_QMARK_) : self__.arr[j_9377 + 1];
            var G__9380 = i_9376 + 1;
            var G__9381 = j_9377 + 2;
            i_9376 = G__9380;
            j_9377 = G__9381;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__9364 = shift + 5;
          var G__9365 = key_or_nil;
          var G__9366 = val_or_node;
          var G__9367 = hash;
          var G__9368 = key;
          var G__9369 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9364, G__9365, G__9366, G__9367, G__9368, G__9369) : cljs.core.create_node.call(null, G__9364, G__9365, G__9366, G__9367, G__9368, G__9369);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9382 = i + 1;
        var G__9383 = j + 2;
        var G__9384 = bitmap | 1 << i;
        i = G__9382;
        j = G__9383;
        bitmap = G__9384;
        continue;
      } else {
        var G__9385 = i + 1;
        var G__9386 = j;
        var G__9387 = bitmap;
        i = G__9385;
        j = G__9386;
        bitmap = G__9387;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9388 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9388) : cljs.core.create_array_node_seq.call(null, G__9388);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__9389 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9389) : cljs.core.deref.call(null, G__9389);
        } else {
          var G__9390 = i + 1;
          var G__9391 = init__$2;
          i = G__9390;
          init__$1 = G__9391;
          continue;
        }
      } else {
        var G__9392 = i + 1;
        var G__9393 = init__$1;
        i = G__9392;
        init__$1 = G__9393;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__9394 = i + 2;
        i = G__9394;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9395 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9395) : cljs.core.create_inode_seq.call(null, G__9395);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__9396 = self__.nodes;
    var G__9397 = self__.i + 2;
    var G__9398 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9396, G__9397, G__9398) : cljs.core.create_inode_seq.call(null, G__9396, G__9397, G__9398);
  } else {
    var G__9399 = self__.nodes;
    var G__9400 = self__.i;
    var G__9401 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9399, G__9400, G__9401) : cljs.core.create_inode_seq.call(null, G__9399, G__9400, G__9401);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__9405 = j + 2;
                j = G__9405;
                continue;
              }
            } else {
              var G__9406 = j + 2;
              j = G__9406;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9407 = null;
  var G__9408 = self__.nodes;
  var G__9409 = self__.i;
  var G__9410 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9407, G__9408, G__9409, G__9410) : cljs.core.create_array_node_seq.call(null, G__9407, G__9408, G__9409, G__9410);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__9415 = j + 1;
              j = G__9415;
              continue;
            }
          } else {
            var G__9416 = j + 1;
            j = G__9416;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9418 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9418) : cljs.core.keys.call(null, G__9418);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9419 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9419) : cljs.core.vals.call(null, G__9419);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9420 = cljs.core.seq(coll);
  var chunk__9421 = null;
  var count__9422 = 0;
  var i__9423 = 0;
  while (true) {
    if (i__9423 < count__9422) {
      var vec__9424 = chunk__9421.cljs$core$IIndexed$_nth$arity$2(null, i__9423);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9424, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9424, 1, null);
      var G__9425_9436 = v;
      var G__9426_9437 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9425_9436, G__9426_9437) : f.call(null, G__9425_9436, G__9426_9437);
      var G__9438 = seq__9420;
      var G__9439 = chunk__9421;
      var G__9440 = count__9422;
      var G__9441 = i__9423 + 1;
      seq__9420 = G__9438;
      chunk__9421 = G__9439;
      count__9422 = G__9440;
      i__9423 = G__9441;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9420);
      if (temp__4126__auto__) {
        var seq__9420__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9420__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__9420__$1);
          var G__9442 = cljs.core.chunk_rest(seq__9420__$1);
          var G__9443 = c__4563__auto__;
          var G__9444 = cljs.core.count(c__4563__auto__);
          var G__9445 = 0;
          seq__9420 = G__9442;
          chunk__9421 = G__9443;
          count__9422 = G__9444;
          i__9423 = G__9445;
          continue;
        } else {
          var vec__9427 = cljs.core.first(seq__9420__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9427, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9427, 1, null);
          var G__9428_9446 = v;
          var G__9429_9447 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9428_9446, G__9429_9447) : f.call(null, G__9428_9446, G__9429_9447);
          var G__9448 = cljs.core.next(seq__9420__$1);
          var G__9449 = null;
          var G__9450 = 0;
          var G__9451 = 0;
          seq__9420 = G__9448;
          chunk__9421 = G__9449;
          count__9422 = G__9450;
          i__9423 = G__9451;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__9430 = init;
    var G__9431 = null;
    var G__9432 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9430, G__9431, G__9432) : f.call(null, G__9430, G__9431, G__9432);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9433 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9433) : cljs.core.deref.call(null, G__9433);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9435 = {};
    return obj9435;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9452 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9453 = cljs.core.next(es);
          ret = G__9452;
          es = G__9453;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9454 = null;
  var G__9454__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9454__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9454 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9454__2.call(this, self__, k);
      case 3:
        return G__9454__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9454.cljs$core$IFn$_invoke$arity$2 = G__9454__2;
  G__9454.cljs$core$IFn$_invoke$arity$3 = G__9454__3;
  return G__9454;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9417) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9417)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9455 = i + 2;
      var G__9456 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__9455;
      ret = G__9456;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9457 = i + 1;
      var G__9458 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__9457;
      out = G__9458;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9459 = o;
      if (G__9459) {
        var bit__4457__auto__ = G__9459.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4457__auto__ || G__9459.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9459.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9459);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9459);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__9460 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9460) : cljs.core.key.call(null, G__9460);
      }(), function() {
        var G__9461 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9461) : cljs.core.val.call(null, G__9461);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9464 = cljs.core.next(es);
          var G__9465 = tcoll__$1.assoc_BANG_(function() {
            var G__9462 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9462) : cljs.core.key.call(null, G__9462);
          }(), function() {
            var G__9463 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9463) : cljs.core.val.call(null, G__9463);
          }());
          es = G__9464;
          tcoll__$1 = G__9465;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9466 = ascending_QMARK_ ? t.left : t.right;
      var G__9467 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__9466;
      stack__$1 = G__9467;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9480 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9480) : cljs.core.deref.call(null, G__9480);
  } else {
    var init__$2 = function() {
      var G__9481 = init__$1;
      var G__9482 = node.key;
      var G__9483 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9481, G__9482, G__9483) : f.call(null, G__9481, G__9482, G__9483);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__9484 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9484) : cljs.core.deref.call(null, G__9484);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__9485 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9485) : cljs.core.deref.call(null, G__9485);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9487 = null;
  var G__9487__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9487__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9487 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9487__2.call(this, self__, k);
      case 3:
        return G__9487__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9487.cljs$core$IFn$_invoke$arity$2 = G__9487__2;
  G__9487.cljs$core$IFn$_invoke$arity$3 = G__9487__3;
  return G__9487;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9486) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9486)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9489 = null;
  var G__9489__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9489__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9489 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9489__2.call(this, self__, k);
      case 3:
        return G__9489__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9489.cljs$core$IFn$_invoke$arity$2 = G__9489__2;
  G__9489.cljs$core$IFn$_invoke$arity$3 = G__9489__3;
  return G__9489;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9488) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9488)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__9502 = k;
      var G__9503 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9502, G__9503) : comp.call(null, G__9502, G__9503);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__9522 = k;
      var G__9523 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9522, G__9523) : comp.call(null, G__9522, G__9523);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__9534 = k;
    var G__9535 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9534, G__9535) : comp.call(null, G__9534, G__9535);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9537 = cljs.core.seq(coll);
  var chunk__9538 = null;
  var count__9539 = 0;
  var i__9540 = 0;
  while (true) {
    if (i__9540 < count__9539) {
      var vec__9541 = chunk__9538.cljs$core$IIndexed$_nth$arity$2(null, i__9540);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9541, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9541, 1, null);
      var G__9542_9554 = v;
      var G__9543_9555 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9542_9554, G__9543_9555) : f.call(null, G__9542_9554, G__9543_9555);
      var G__9556 = seq__9537;
      var G__9557 = chunk__9538;
      var G__9558 = count__9539;
      var G__9559 = i__9540 + 1;
      seq__9537 = G__9556;
      chunk__9538 = G__9557;
      count__9539 = G__9558;
      i__9540 = G__9559;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9537);
      if (temp__4126__auto__) {
        var seq__9537__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9537__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__9537__$1);
          var G__9560 = cljs.core.chunk_rest(seq__9537__$1);
          var G__9561 = c__4563__auto__;
          var G__9562 = cljs.core.count(c__4563__auto__);
          var G__9563 = 0;
          seq__9537 = G__9560;
          chunk__9538 = G__9561;
          count__9539 = G__9562;
          i__9540 = G__9563;
          continue;
        } else {
          var vec__9544 = cljs.core.first(seq__9537__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9544, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9544, 1, null);
          var G__9545_9564 = v;
          var G__9546_9565 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9545_9564, G__9546_9565) : f.call(null, G__9545_9564, G__9546_9565);
          var G__9566 = cljs.core.next(seq__9537__$1);
          var G__9567 = null;
          var G__9568 = 0;
          var G__9569 = 0;
          seq__9537 = G__9566;
          chunk__9538 = G__9567;
          count__9539 = G__9568;
          i__9540 = G__9569;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9547 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9547) : cljs.core.keys.call(null, G__9547);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9548 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9548) : cljs.core.vals.call(null, G__9548);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__9549 = k;
        var G__9550 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9549, G__9550) : self__.comp.call(null, G__9549, G__9550);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9570 = t.left;
          t = G__9570;
          continue;
        } else {
          var G__9571 = t.right;
          t = G__9571;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9572 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9573 = cljs.core.next(es);
          ret = G__9572;
          es = G__9573;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9574 = null;
  var G__9574__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9574__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9574 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9574__2.call(this, self__, k);
      case 3:
        return G__9574__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9574.cljs$core$IFn$_invoke$arity$2 = G__9574__2;
  G__9574.cljs$core$IFn$_invoke$arity$3 = G__9574__3;
  return G__9574;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9536) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9536)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__9551 = k;
          var G__9552 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9551, G__9552) : self__.comp.call(null, G__9551, G__9552);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9575 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9576 = t.left;
              stack = G__9575;
              t = G__9576;
              continue;
            } else {
              var G__9577 = stack;
              var G__9578 = t.right;
              stack = G__9577;
              t = G__9578;
              continue;
            }
          } else {
            if (c > 0) {
              var G__9579 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9580 = t.right;
              stack = G__9579;
              t = G__9580;
              continue;
            } else {
              var G__9581 = stack;
              var G__9582 = t.left;
              stack = G__9581;
              t = G__9582;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__9553 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9553) : cljs.core.key.call(null, G__9553);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__9583 = cljs.core.nnext(in$);
        var G__9584 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9583;
        out = G__9584;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9585__i = 0, G__9585__a = new Array(arguments.length - 0);
      while (G__9585__i < G__9585__a.length) {
        G__9585__a[G__9585__i] = arguments[G__9585__i + 0];
        ++G__9585__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9585__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__9586) {
    var keyvals = cljs.core.seq(arglist__9586);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9587__i = 0, G__9587__a = new Array(arguments.length - 0);
      while (G__9587__i < G__9587__a.length) {
        G__9587__a[G__9587__i] = arguments[G__9587__i + 0];
        ++G__9587__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9587__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__9588) {
    var keyvals = cljs.core.seq(arglist__9588);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj9592 = {};
      return obj9592;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__9593 = cljs.core.nnext(kvs);
        kvs = G__9593;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9594__i = 0, G__9594__a = new Array(arguments.length - 0);
      while (G__9594__i < G__9594__a.length) {
        G__9594__a[G__9594__i] = arguments[G__9594__i + 0];
        ++G__9594__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9594__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__9595) {
    var keyvals = cljs.core.seq(arglist__9595);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__9596 = cljs.core.nnext(in$);
        var G__9597 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9596;
        out = G__9597;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__9598__i = 0, G__9598__a = new Array(arguments.length - 0);
      while (G__9598__i < G__9598__a.length) {
        G__9598__a[G__9598__i] = arguments[G__9598__i + 0];
        ++G__9598__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9598__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__9599) {
    var keyvals = cljs.core.seq(arglist__9599);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__9600 = cljs.core.nnext(in$);
        var G__9601 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__9600;
        out = G__9601;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__9602__i = 0, G__9602__a = new Array(arguments.length - 1);
      while (G__9602__i < G__9602__a.length) {
        G__9602__a[G__9602__i] = arguments[G__9602__i + 1];
        ++G__9602__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__9602__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__9603) {
    var comparator = cljs.core.first(arglist__9603);
    var keyvals = cljs.core.rest(arglist__9603);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9604 = self__.mseq;
    if (G__9604) {
      var bit__4457__auto__ = G__9604.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__9604.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9604.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9604);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9604);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9605 = self__.mseq;
    if (G__9605) {
      var bit__4457__auto__ = G__9605.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__9605.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9605.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9605);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9605);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9606 = self__.mseq;
    if (G__9606) {
      var bit__4457__auto__ = G__9606.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__9606.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9606.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9606);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9606);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9607 = self__.mseq;
    if (G__9607) {
      var bit__4457__auto__ = G__9607.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4457__auto__ || G__9607.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9607.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9607);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9607);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__9608_SHARP_, p2__9609_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3776__auto__ = p1__9608_SHARP_;
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__9609_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__9610__i = 0, G__9610__a = new Array(arguments.length - 0);
      while (G__9610__i < G__9610__a.length) {
        G__9610__a[G__9610__i] = arguments[G__9610__i + 0];
        ++G__9610__i;
      }
      maps = new cljs.core.IndexedSeq(G__9610__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__9611) {
    var maps = cljs.core.seq(arglist__9611);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__9614 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__9615 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9614, G__9615) : f.call(null, G__9614, G__9615);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3776__auto__ = m1;
            if (cljs.core.truth_(or__3776__auto__)) {
              return or__3776__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__9616__i = 0, G__9616__a = new Array(arguments.length - 1);
      while (G__9616__i < G__9616__a.length) {
        G__9616__a[G__9616__i] = arguments[G__9616__i + 1];
        ++G__9616__i;
      }
      maps = new cljs.core.IndexedSeq(G__9616__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__9617) {
    var f = cljs.core.first(arglist__9617);
    var maps = cljs.core.rest(arglist__9617);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__9618 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__9619 = cljs.core.next(keys);
      ret = G__9618;
      keys = G__9619;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9622 = cljs.core.seq(coll);
  var chunk__9623 = null;
  var count__9624 = 0;
  var i__9625 = 0;
  while (true) {
    if (i__9625 < count__9624) {
      var vec__9626 = chunk__9623.cljs$core$IIndexed$_nth$arity$2(null, i__9625);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9626, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9626, 1, null);
      var G__9627_9632 = v;
      var G__9628_9633 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9627_9632, G__9628_9633) : f.call(null, G__9627_9632, G__9628_9633);
      var G__9634 = seq__9622;
      var G__9635 = chunk__9623;
      var G__9636 = count__9624;
      var G__9637 = i__9625 + 1;
      seq__9622 = G__9634;
      chunk__9623 = G__9635;
      count__9624 = G__9636;
      i__9625 = G__9637;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9622);
      if (temp__4126__auto__) {
        var seq__9622__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9622__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__9622__$1);
          var G__9638 = cljs.core.chunk_rest(seq__9622__$1);
          var G__9639 = c__4563__auto__;
          var G__9640 = cljs.core.count(c__4563__auto__);
          var G__9641 = 0;
          seq__9622 = G__9638;
          chunk__9623 = G__9639;
          count__9624 = G__9640;
          i__9625 = G__9641;
          continue;
        } else {
          var vec__9629 = cljs.core.first(seq__9622__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9629, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9629, 1, null);
          var G__9630_9642 = v;
          var G__9631_9643 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9630_9642, G__9631_9643) : f.call(null, G__9630_9642, G__9631_9643);
          var G__9644 = cljs.core.next(seq__9622__$1);
          var G__9645 = null;
          var G__9646 = 0;
          var G__9647 = 0;
          seq__9622 = G__9644;
          chunk__9623 = G__9645;
          count__9624 = G__9646;
          i__9625 = G__9647;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9620_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9620_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__9648 = null;
  var G__9648__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9648__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9648 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9648__2.call(this, self__, k);
      case 3:
        return G__9648__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9648.cljs$core$IFn$_invoke$arity$2 = G__9648__2;
  G__9648.cljs$core$IFn$_invoke$arity$3 = G__9648__3;
  return G__9648;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9621) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9621)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__9649 = i + 1;
        var G__9650 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__9649;
        out = G__9650;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__9651 = i + 1;
        var G__9652 = cljs.core._conj_BANG_(out, items[i]);
        i = G__9651;
        out = G__9652;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__9654 = null;
  var G__9654__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__9654__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__9654 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9654__2.call(this, self__, k);
      case 3:
        return G__9654__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9654.cljs$core$IFn$_invoke$arity$2 = G__9654__2;
  G__9654.cljs$core$IFn$_invoke$arity$3 = G__9654__3;
  return G__9654;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args9653) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9653)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9657 = cljs.core.seq(coll);
  var chunk__9658 = null;
  var count__9659 = 0;
  var i__9660 = 0;
  while (true) {
    if (i__9660 < count__9659) {
      var vec__9661 = chunk__9658.cljs$core$IIndexed$_nth$arity$2(null, i__9660);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9661, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9661, 1, null);
      var G__9662_9667 = v;
      var G__9663_9668 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9662_9667, G__9663_9668) : f.call(null, G__9662_9667, G__9663_9668);
      var G__9669 = seq__9657;
      var G__9670 = chunk__9658;
      var G__9671 = count__9659;
      var G__9672 = i__9660 + 1;
      seq__9657 = G__9669;
      chunk__9658 = G__9670;
      count__9659 = G__9671;
      i__9660 = G__9672;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9657);
      if (temp__4126__auto__) {
        var seq__9657__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9657__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__9657__$1);
          var G__9673 = cljs.core.chunk_rest(seq__9657__$1);
          var G__9674 = c__4563__auto__;
          var G__9675 = cljs.core.count(c__4563__auto__);
          var G__9676 = 0;
          seq__9657 = G__9673;
          chunk__9658 = G__9674;
          count__9659 = G__9675;
          i__9660 = G__9676;
          continue;
        } else {
          var vec__9664 = cljs.core.first(seq__9657__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9664, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9664, 1, null);
          var G__9665_9677 = v;
          var G__9666_9678 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9665_9677, G__9666_9678) : f.call(null, G__9665_9677, G__9666_9678);
          var G__9679 = cljs.core.next(seq__9657__$1);
          var G__9680 = null;
          var G__9681 = 0;
          var G__9682 = 0;
          seq__9657 = G__9679;
          chunk__9658 = G__9680;
          count__9659 = G__9681;
          i__9660 = G__9682;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9655_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9655_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__9683 = null;
  var G__9683__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9683__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9683 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9683__2.call(this, self__, k);
      case 3:
        return G__9683__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9683.cljs$core$IFn$_invoke$arity$2 = G__9683__2;
  G__9683.cljs$core$IFn$_invoke$arity$3 = G__9683__3;
  return G__9683;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args9656) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9656)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4657__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4657__auto__.length) {
        var G__9684 = i + 1;
        var G__9685 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__9684;
        res = G__9685;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__9686 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__9687 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__9686;
          out = G__9687;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__9688__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__9688 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__9689__i = 0, G__9689__a = new Array(arguments.length - 0);
        while (G__9689__i < G__9689__a.length) {
          G__9689__a[G__9689__i] = arguments[G__9689__i + 0];
          ++G__9689__i;
        }
        keys = new cljs.core.IndexedSeq(G__9689__a, 0);
      }
      return G__9688__delegate.call(this, keys);
    };
    G__9688.cljs$lang$maxFixedArity = 0;
    G__9688.cljs$lang$applyTo = function(arglist__9690) {
      var keys = cljs.core.seq(arglist__9690);
      return G__9688__delegate(keys);
    };
    G__9688.cljs$core$IFn$_invoke$arity$variadic = G__9688__delegate;
    return G__9688;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__9691 = null;
        if (arguments.length > 0) {
          var G__9692__i = 0, G__9692__a = new Array(arguments.length - 0);
          while (G__9692__i < G__9692__a.length) {
            G__9692__a[G__9692__i] = arguments[G__9692__i + 0];
            ++G__9692__i;
          }
          G__9691 = new cljs.core.IndexedSeq(G__9692__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9691);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__9693__i = 0, G__9693__a = new Array(arguments.length - 0);
      while (G__9693__i < G__9693__a.length) {
        G__9693__a[G__9693__i] = arguments[G__9693__i + 0];
        ++G__9693__i;
      }
      keys = new cljs.core.IndexedSeq(G__9693__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__9694) {
    var keys = cljs.core.seq(arglist__9694);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__9695__i = 0, G__9695__a = new Array(arguments.length - 1);
      while (G__9695__i < G__9695__a.length) {
        G__9695__a[G__9695__i] = arguments[G__9695__i + 1];
        ++G__9695__i;
      }
      keys = new cljs.core.IndexedSeq(G__9695__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__9696) {
    var comparator = cljs.core.first(arglist__9696);
    var keys = cljs.core.rest(arglist__9696);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__9697_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__9697_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__9697_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9698_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__9698_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__9698_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__9719 = null;
          var G__9719__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9719__1 = function(result) {
            var G__9709 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9709) : rf.call(null, G__9709);
          };
          var G__9719__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__9710 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9710) : cljs.core.deref.call(null, G__9710);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__9711 = result;
              var G__9712 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9711, G__9712) : rf.call(null, G__9711, G__9712);
            }
          };
          G__9719 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9719__0.call(this);
              case 1:
                return G__9719__1.call(this, result);
              case 2:
                return G__9719__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9719.cljs$core$IFn$_invoke$arity$0 = G__9719__0;
          G__9719.cljs$core$IFn$_invoke$arity$1 = G__9719__1;
          G__9719.cljs$core$IFn$_invoke$arity$2 = G__9719__2;
          return G__9719;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__9717, seen__$1) {
          while (true) {
            var vec__9718 = p__9717;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9718, 0, null);
            var xs__$1 = vec__9718;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__9720 = cljs.core.rest(s);
                var G__9721 = seen__$1;
                p__9717 = G__9720;
                seen__$1 = G__9721;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__9722 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__9723 = cljs.core.next(s__$1);
      ret = G__9722;
      s__$1 = G__9723;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__9725 = x;
    if (G__9725) {
      var bit__4450__auto__ = G__9725.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4450__auto__ || G__9725.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__9726 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__9727 = cljs.core.next(ks);
      var G__9728 = cljs.core.next(vs);
      map = G__9726;
      ks = G__9727;
      vs = G__9728;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__9739 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9739) : k.call(null, G__9739);
    }() > function() {
      var G__9740 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9740) : k.call(null, G__9740);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__9741__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9729_SHARP_, p2__9730_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__9729_SHARP_, p2__9730_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9741 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9742__i = 0, G__9742__a = new Array(arguments.length - 3);
        while (G__9742__i < G__9742__a.length) {
          G__9742__a[G__9742__i] = arguments[G__9742__i + 3];
          ++G__9742__i;
        }
        more = new cljs.core.IndexedSeq(G__9742__a, 0);
      }
      return G__9741__delegate.call(this, k, x, y, more);
    };
    G__9741.cljs$lang$maxFixedArity = 3;
    G__9741.cljs$lang$applyTo = function(arglist__9743) {
      var k = cljs.core.first(arglist__9743);
      arglist__9743 = cljs.core.next(arglist__9743);
      var x = cljs.core.first(arglist__9743);
      arglist__9743 = cljs.core.next(arglist__9743);
      var y = cljs.core.first(arglist__9743);
      var more = cljs.core.rest(arglist__9743);
      return G__9741__delegate(k, x, y, more);
    };
    G__9741.cljs$core$IFn$_invoke$arity$variadic = G__9741__delegate;
    return G__9741;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__9744 = null;
        if (arguments.length > 3) {
          var G__9745__i = 0, G__9745__a = new Array(arguments.length - 3);
          while (G__9745__i < G__9745__a.length) {
            G__9745__a[G__9745__i] = arguments[G__9745__i + 3];
            ++G__9745__i;
          }
          G__9744 = new cljs.core.IndexedSeq(G__9745__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9744);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__9756 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9756) : k.call(null, G__9756);
    }() < function() {
      var G__9757 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9757) : k.call(null, G__9757);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__9758__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9746_SHARP_, p2__9747_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__9746_SHARP_, p2__9747_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__9758 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__9759__i = 0, G__9759__a = new Array(arguments.length - 3);
        while (G__9759__i < G__9759__a.length) {
          G__9759__a[G__9759__i] = arguments[G__9759__i + 3];
          ++G__9759__i;
        }
        more = new cljs.core.IndexedSeq(G__9759__a, 0);
      }
      return G__9758__delegate.call(this, k, x, y, more);
    };
    G__9758.cljs$lang$maxFixedArity = 3;
    G__9758.cljs$lang$applyTo = function(arglist__9760) {
      var k = cljs.core.first(arglist__9760);
      arglist__9760 = cljs.core.next(arglist__9760);
      var x = cljs.core.first(arglist__9760);
      arglist__9760 = cljs.core.next(arglist__9760);
      var y = cljs.core.first(arglist__9760);
      var more = cljs.core.rest(arglist__9760);
      return G__9758__delegate(k, x, y, more);
    };
    G__9758.cljs$core$IFn$_invoke$arity$variadic = G__9758__delegate;
    return G__9758;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__9761 = null;
        if (arguments.length > 3) {
          var G__9762__i = 0, G__9762__a = new Array(arguments.length - 3);
          while (G__9762__i < G__9762__a.length) {
            G__9762__a[G__9762__i] = arguments[G__9762__i + 3];
            ++G__9762__i;
          }
          G__9761 = new cljs.core.IndexedSeq(G__9762__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__9761);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__9779 = null;
          var G__9779__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9779__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9774 = result;
                var G__9775 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9774, G__9775) : rf.call(null, G__9774, G__9775);
              }());
            }();
            var G__9776 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9776) : rf.call(null, G__9776);
          };
          var G__9779__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__9777 = result;
              var G__9778 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9777, G__9778) : rf.call(null, G__9777, G__9778);
            } else {
              return result;
            }
          };
          G__9779 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9779__0.call(this);
              case 1:
                return G__9779__1.call(this, result);
              case 2:
                return G__9779__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9779.cljs$core$IFn$_invoke$arity$0 = G__9779__0;
          G__9779.cljs$core$IFn$_invoke$arity$1 = G__9779__1;
          G__9779.cljs$core$IFn$_invoke$arity$2 = G__9779__2;
          return G__9779;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__9792 = null;
        var G__9792__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9792__1 = function(result) {
          var G__9787 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9787) : rf.call(null, G__9787);
        };
        var G__9792__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__9788 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9788) : pred.call(null, G__9788);
          }())) {
            var G__9789 = result;
            var G__9790 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9789, G__9790) : rf.call(null, G__9789, G__9790);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__9792 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9792__0.call(this);
            case 1:
              return G__9792__1.call(this, result);
            case 2:
              return G__9792__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9792.cljs$core$IFn$_invoke$arity$0 = G__9792__0;
        G__9792.cljs$core$IFn$_invoke$arity$1 = G__9792__1;
        G__9792.cljs$core$IFn$_invoke$arity$2 = G__9792__2;
        return G__9792;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__9791 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9791) : pred.call(null, G__9791);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__9797 = function() {
      var G__9799 = cljs.core._entry_key(sc, e);
      var G__9800 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9799, G__9800) : comp.call(null, G__9799, G__9800);
    }();
    var G__9798 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9797, G__9798) : test.call(null, G__9797, G__9798);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9804 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9804, 0, null);
        var s = vec__9804;
        if (cljs.core.truth_(function() {
          var G__9805 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9805) : include.call(null, G__9805);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9806 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9806, 0, null);
      var s = vec__9806;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__9810 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9810, 0, null);
        var s = vec__9810;
        if (cljs.core.truth_(function() {
          var G__9811 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9811) : include.call(null, G__9811);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__9812 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9812, 0, null);
      var s = vec__9812;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__9813 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9813) : Math.ceil.call(null, G__9813);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4197__auto__ = self__.__hash;
  if (!(h__4197__auto__ == null)) {
    return h__4197__auto__;
  } else {
    var h__4197__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4197__auto____$1;
    return h__4197__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__9814 = ret;
        var G__9815 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9814, G__9815) : f.call(null, G__9814, G__9815);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__9816 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9816) : cljs.core.deref.call(null, G__9816);
      } else {
        var G__9817 = i + self__.step;
        var G__9818 = ret__$1;
        i = G__9817;
        ret = G__9818;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__9836 = null;
          var G__9836__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9836__1 = function(result) {
            var G__9833 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9833) : rf.call(null, G__9833);
          };
          var G__9836__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__9834 = result;
              var G__9835 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9834, G__9835) : rf.call(null, G__9834, G__9835);
            } else {
              return result;
            }
          };
          G__9836 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9836__0.call(this);
              case 1:
                return G__9836__1.call(this, result);
              case 2:
                return G__9836__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9836.cljs$core$IFn$_invoke$arity$0 = G__9836__0;
          G__9836.cljs$core$IFn$_invoke$arity$1 = G__9836__1;
          G__9836.cljs$core$IFn$_invoke$arity$2 = G__9836__2;
          return G__9836;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__9858 = null;
          var G__9858__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__9858__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__9849 = result;
                var G__9850 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9849, G__9850) : rf.call(null, G__9849, G__9850);
              }());
            }();
            var G__9851 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9851) : rf.call(null, G__9851);
          };
          var G__9858__2 = function(result, input) {
            var pval = function() {
              var G__9852 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9852) : cljs.core.deref.call(null, G__9852);
            }();
            var val = function() {
              var G__9853 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9853) : f.call(null, G__9853);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__9854 = result;
                var G__9855 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9854, G__9855) : rf.call(null, G__9854, G__9855);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__9858 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__9858__0.call(this);
              case 1:
                return G__9858__1.call(this, result);
              case 2:
                return G__9858__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9858.cljs$core$IFn$_invoke$arity$0 = G__9858__0;
          G__9858.cljs$core$IFn$_invoke$arity$1 = G__9858__1;
          G__9858.cljs$core$IFn$_invoke$arity$2 = G__9858__2;
          return G__9858;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__9856 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9856) : f.call(null, G__9856);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__9837_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__9857 = p1__9837_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9857) : f.call(null, G__9857);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__9867 = init;
          var G__9868 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9867, G__9868) : f.call(null, G__9867, G__9868);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__9963 = null;
      var G__9963__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__9963__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9921 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9921) : f.call(null, G__9921);
        }()], null);
      };
      var G__9963__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9922 = x;
          var G__9923 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9922, G__9923) : f.call(null, G__9922, G__9923);
        }()], null);
      };
      var G__9963__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9924 = x;
          var G__9925 = y;
          var G__9926 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9924, G__9925, G__9926) : f.call(null, G__9924, G__9925, G__9926);
        }()], null);
      };
      var G__9963__4 = function() {
        var G__9964__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__9964 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9965__i = 0, G__9965__a = new Array(arguments.length - 3);
            while (G__9965__i < G__9965__a.length) {
              G__9965__a[G__9965__i] = arguments[G__9965__i + 3];
              ++G__9965__i;
            }
            args = new cljs.core.IndexedSeq(G__9965__a, 0);
          }
          return G__9964__delegate.call(this, x, y, z, args);
        };
        G__9964.cljs$lang$maxFixedArity = 3;
        G__9964.cljs$lang$applyTo = function(arglist__9966) {
          var x = cljs.core.first(arglist__9966);
          arglist__9966 = cljs.core.next(arglist__9966);
          var y = cljs.core.first(arglist__9966);
          arglist__9966 = cljs.core.next(arglist__9966);
          var z = cljs.core.first(arglist__9966);
          var args = cljs.core.rest(arglist__9966);
          return G__9964__delegate(x, y, z, args);
        };
        G__9964.cljs$core$IFn$_invoke$arity$variadic = G__9964__delegate;
        return G__9964;
      }();
      G__9963 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9963__0.call(this);
          case 1:
            return G__9963__1.call(this, x);
          case 2:
            return G__9963__2.call(this, x, y);
          case 3:
            return G__9963__3.call(this, x, y, z);
          default:
            var G__9967 = null;
            if (arguments.length > 3) {
              var G__9968__i = 0, G__9968__a = new Array(arguments.length - 3);
              while (G__9968__i < G__9968__a.length) {
                G__9968__a[G__9968__i] = arguments[G__9968__i + 3];
                ++G__9968__i;
              }
              G__9967 = new cljs.core.IndexedSeq(G__9968__a, 0);
            }
            return G__9963__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9967);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9963.cljs$lang$maxFixedArity = 3;
      G__9963.cljs$lang$applyTo = G__9963__4.cljs$lang$applyTo;
      G__9963.cljs$core$IFn$_invoke$arity$0 = G__9963__0;
      G__9963.cljs$core$IFn$_invoke$arity$1 = G__9963__1;
      G__9963.cljs$core$IFn$_invoke$arity$2 = G__9963__2;
      G__9963.cljs$core$IFn$_invoke$arity$3 = G__9963__3;
      G__9963.cljs$core$IFn$_invoke$arity$variadic = G__9963__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9963;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__9969 = null;
      var G__9969__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__9969__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9927 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9927) : f.call(null, G__9927);
        }(), function() {
          var G__9928 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9928) : g.call(null, G__9928);
        }()], null);
      };
      var G__9969__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9929 = x;
          var G__9930 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9929, G__9930) : f.call(null, G__9929, G__9930);
        }(), function() {
          var G__9931 = x;
          var G__9932 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9931, G__9932) : g.call(null, G__9931, G__9932);
        }()], null);
      };
      var G__9969__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9933 = x;
          var G__9934 = y;
          var G__9935 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9933, G__9934, G__9935) : f.call(null, G__9933, G__9934, G__9935);
        }(), function() {
          var G__9936 = x;
          var G__9937 = y;
          var G__9938 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9936, G__9937, G__9938) : g.call(null, G__9936, G__9937, G__9938);
        }()], null);
      };
      var G__9969__4 = function() {
        var G__9970__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__9970 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9971__i = 0, G__9971__a = new Array(arguments.length - 3);
            while (G__9971__i < G__9971__a.length) {
              G__9971__a[G__9971__i] = arguments[G__9971__i + 3];
              ++G__9971__i;
            }
            args = new cljs.core.IndexedSeq(G__9971__a, 0);
          }
          return G__9970__delegate.call(this, x, y, z, args);
        };
        G__9970.cljs$lang$maxFixedArity = 3;
        G__9970.cljs$lang$applyTo = function(arglist__9972) {
          var x = cljs.core.first(arglist__9972);
          arglist__9972 = cljs.core.next(arglist__9972);
          var y = cljs.core.first(arglist__9972);
          arglist__9972 = cljs.core.next(arglist__9972);
          var z = cljs.core.first(arglist__9972);
          var args = cljs.core.rest(arglist__9972);
          return G__9970__delegate(x, y, z, args);
        };
        G__9970.cljs$core$IFn$_invoke$arity$variadic = G__9970__delegate;
        return G__9970;
      }();
      G__9969 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9969__0.call(this);
          case 1:
            return G__9969__1.call(this, x);
          case 2:
            return G__9969__2.call(this, x, y);
          case 3:
            return G__9969__3.call(this, x, y, z);
          default:
            var G__9973 = null;
            if (arguments.length > 3) {
              var G__9974__i = 0, G__9974__a = new Array(arguments.length - 3);
              while (G__9974__i < G__9974__a.length) {
                G__9974__a[G__9974__i] = arguments[G__9974__i + 3];
                ++G__9974__i;
              }
              G__9973 = new cljs.core.IndexedSeq(G__9974__a, 0);
            }
            return G__9969__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9973);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9969.cljs$lang$maxFixedArity = 3;
      G__9969.cljs$lang$applyTo = G__9969__4.cljs$lang$applyTo;
      G__9969.cljs$core$IFn$_invoke$arity$0 = G__9969__0;
      G__9969.cljs$core$IFn$_invoke$arity$1 = G__9969__1;
      G__9969.cljs$core$IFn$_invoke$arity$2 = G__9969__2;
      G__9969.cljs$core$IFn$_invoke$arity$3 = G__9969__3;
      G__9969.cljs$core$IFn$_invoke$arity$variadic = G__9969__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9969;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__9975 = null;
      var G__9975__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__9975__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9939 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9939) : f.call(null, G__9939);
        }(), function() {
          var G__9940 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9940) : g.call(null, G__9940);
        }(), function() {
          var G__9941 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9941) : h.call(null, G__9941);
        }()], null);
      };
      var G__9975__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9942 = x;
          var G__9943 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9942, G__9943) : f.call(null, G__9942, G__9943);
        }(), function() {
          var G__9944 = x;
          var G__9945 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9944, G__9945) : g.call(null, G__9944, G__9945);
        }(), function() {
          var G__9946 = x;
          var G__9947 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9946, G__9947) : h.call(null, G__9946, G__9947);
        }()], null);
      };
      var G__9975__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__9948 = x;
          var G__9949 = y;
          var G__9950 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9948, G__9949, G__9950) : f.call(null, G__9948, G__9949, G__9950);
        }(), function() {
          var G__9951 = x;
          var G__9952 = y;
          var G__9953 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9951, G__9952, G__9953) : g.call(null, G__9951, G__9952, G__9953);
        }(), function() {
          var G__9954 = x;
          var G__9955 = y;
          var G__9956 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9954, G__9955, G__9956) : h.call(null, G__9954, G__9955, G__9956);
        }()], null);
      };
      var G__9975__4 = function() {
        var G__9976__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__9976 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9977__i = 0, G__9977__a = new Array(arguments.length - 3);
            while (G__9977__i < G__9977__a.length) {
              G__9977__a[G__9977__i] = arguments[G__9977__i + 3];
              ++G__9977__i;
            }
            args = new cljs.core.IndexedSeq(G__9977__a, 0);
          }
          return G__9976__delegate.call(this, x, y, z, args);
        };
        G__9976.cljs$lang$maxFixedArity = 3;
        G__9976.cljs$lang$applyTo = function(arglist__9978) {
          var x = cljs.core.first(arglist__9978);
          arglist__9978 = cljs.core.next(arglist__9978);
          var y = cljs.core.first(arglist__9978);
          arglist__9978 = cljs.core.next(arglist__9978);
          var z = cljs.core.first(arglist__9978);
          var args = cljs.core.rest(arglist__9978);
          return G__9976__delegate(x, y, z, args);
        };
        G__9976.cljs$core$IFn$_invoke$arity$variadic = G__9976__delegate;
        return G__9976;
      }();
      G__9975 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9975__0.call(this);
          case 1:
            return G__9975__1.call(this, x);
          case 2:
            return G__9975__2.call(this, x, y);
          case 3:
            return G__9975__3.call(this, x, y, z);
          default:
            var G__9979 = null;
            if (arguments.length > 3) {
              var G__9980__i = 0, G__9980__a = new Array(arguments.length - 3);
              while (G__9980__i < G__9980__a.length) {
                G__9980__a[G__9980__i] = arguments[G__9980__i + 3];
                ++G__9980__i;
              }
              G__9979 = new cljs.core.IndexedSeq(G__9980__a, 0);
            }
            return G__9975__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9979);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9975.cljs$lang$maxFixedArity = 3;
      G__9975.cljs$lang$applyTo = G__9975__4.cljs$lang$applyTo;
      G__9975.cljs$core$IFn$_invoke$arity$0 = G__9975__0;
      G__9975.cljs$core$IFn$_invoke$arity$1 = G__9975__1;
      G__9975.cljs$core$IFn$_invoke$arity$2 = G__9975__2;
      G__9975.cljs$core$IFn$_invoke$arity$3 = G__9975__3;
      G__9975.cljs$core$IFn$_invoke$arity$variadic = G__9975__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__9975;
    }();
  };
  var juxt__4 = function() {
    var G__9981__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__9982 = null;
          var G__9982__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9869_SHARP_, p2__9870_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9869_SHARP_, function() {
                  return p2__9870_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9870_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9870_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9982__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9871_SHARP_, p2__9872_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9871_SHARP_, function() {
                  var G__9957 = x;
                  return p2__9872_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9872_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9957) : p2__9872_SHARP_.call(null, G__9957);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9982__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9873_SHARP_, p2__9874_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9873_SHARP_, function() {
                  var G__9958 = x;
                  var G__9959 = y;
                  return p2__9874_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9874_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9958, G__9959) : p2__9874_SHARP_.call(null, G__9958, G__9959);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9982__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__9875_SHARP_, p2__9876_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9875_SHARP_, function() {
                  var G__9960 = x;
                  var G__9961 = y;
                  var G__9962 = z;
                  return p2__9876_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9876_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9960, G__9961, G__9962) : p2__9876_SHARP_.call(null, G__9960, G__9961, G__9962);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__9982__4 = function() {
            var G__9983__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__9877_SHARP_, p2__9878_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9877_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9878_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__9983 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__9984__i = 0, G__9984__a = new Array(arguments.length - 3);
                while (G__9984__i < G__9984__a.length) {
                  G__9984__a[G__9984__i] = arguments[G__9984__i + 3];
                  ++G__9984__i;
                }
                args = new cljs.core.IndexedSeq(G__9984__a, 0);
              }
              return G__9983__delegate.call(this, x, y, z, args);
            };
            G__9983.cljs$lang$maxFixedArity = 3;
            G__9983.cljs$lang$applyTo = function(arglist__9985) {
              var x = cljs.core.first(arglist__9985);
              arglist__9985 = cljs.core.next(arglist__9985);
              var y = cljs.core.first(arglist__9985);
              arglist__9985 = cljs.core.next(arglist__9985);
              var z = cljs.core.first(arglist__9985);
              var args = cljs.core.rest(arglist__9985);
              return G__9983__delegate(x, y, z, args);
            };
            G__9983.cljs$core$IFn$_invoke$arity$variadic = G__9983__delegate;
            return G__9983;
          }();
          G__9982 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__9982__0.call(this);
              case 1:
                return G__9982__1.call(this, x);
              case 2:
                return G__9982__2.call(this, x, y);
              case 3:
                return G__9982__3.call(this, x, y, z);
              default:
                var G__9986 = null;
                if (arguments.length > 3) {
                  var G__9987__i = 0, G__9987__a = new Array(arguments.length - 3);
                  while (G__9987__i < G__9987__a.length) {
                    G__9987__a[G__9987__i] = arguments[G__9987__i + 3];
                    ++G__9987__i;
                  }
                  G__9986 = new cljs.core.IndexedSeq(G__9987__a, 0);
                }
                return G__9982__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9986);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__9982.cljs$lang$maxFixedArity = 3;
          G__9982.cljs$lang$applyTo = G__9982__4.cljs$lang$applyTo;
          G__9982.cljs$core$IFn$_invoke$arity$0 = G__9982__0;
          G__9982.cljs$core$IFn$_invoke$arity$1 = G__9982__1;
          G__9982.cljs$core$IFn$_invoke$arity$2 = G__9982__2;
          G__9982.cljs$core$IFn$_invoke$arity$3 = G__9982__3;
          G__9982.cljs$core$IFn$_invoke$arity$variadic = G__9982__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__9982;
        }();
      }(fs__$1);
    };
    var G__9981 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__9988__i = 0, G__9988__a = new Array(arguments.length - 3);
        while (G__9988__i < G__9988__a.length) {
          G__9988__a[G__9988__i] = arguments[G__9988__i + 3];
          ++G__9988__i;
        }
        fs = new cljs.core.IndexedSeq(G__9988__a, 0);
      }
      return G__9981__delegate.call(this, f, g, h, fs);
    };
    G__9981.cljs$lang$maxFixedArity = 3;
    G__9981.cljs$lang$applyTo = function(arglist__9989) {
      var f = cljs.core.first(arglist__9989);
      arglist__9989 = cljs.core.next(arglist__9989);
      var g = cljs.core.first(arglist__9989);
      arglist__9989 = cljs.core.next(arglist__9989);
      var h = cljs.core.first(arglist__9989);
      var fs = cljs.core.rest(arglist__9989);
      return G__9981__delegate(f, g, h, fs);
    };
    G__9981.cljs$core$IFn$_invoke$arity$variadic = G__9981__delegate;
    return G__9981;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__9990 = null;
        if (arguments.length > 3) {
          var G__9991__i = 0, G__9991__a = new Array(arguments.length - 3);
          while (G__9991__i < G__9991__a.length) {
            G__9991__a[G__9991__i] = arguments[G__9991__i + 3];
            ++G__9991__i;
          }
          G__9990 = new cljs.core.IndexedSeq(G__9991__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__9990);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__9992 = cljs.core.next(coll);
        coll = G__9992;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__9993 = n - 1;
        var G__9994 = cljs.core.next(coll);
        n = G__9993;
        coll = G__9994;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__9998 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9998, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9998, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9998, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10006 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if (cljs.core.seq(coll)) {
        var G__10007_10013 = cljs.core.first(coll);
        var G__10008_10014 = writer;
        var G__10009_10015 = opts;
        print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10007_10013, G__10008_10014, G__10009_10015) : print_one.call(null, G__10007_10013, G__10008_10014, G__10009_10015);
      } else {
      }
      var coll_10016__$1 = cljs.core.next(coll);
      var n_10017 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_10016__$1 && (n_10017 == null || !(n_10017 === 0))) {
          cljs.core._write(writer, sep);
          var G__10010_10018 = cljs.core.first(coll_10016__$1);
          var G__10011_10019 = writer;
          var G__10012_10020 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10010_10018, G__10011_10019, G__10012_10020) : print_one.call(null, G__10010_10018, G__10011_10019, G__10012_10020);
          var G__10021 = cljs.core.next(coll_10016__$1);
          var G__10022 = n_10017 - 1;
          coll_10016__$1 = G__10021;
          n_10017 = G__10022;
          continue;
        } else {
          if (cljs.core.seq(coll_10016__$1) && n_10017 === 0) {
            cljs.core._write(writer, sep);
            cljs.core._write(writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10006;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10027 = cljs.core.seq(ss);
    var chunk__10028 = null;
    var count__10029 = 0;
    var i__10030 = 0;
    while (true) {
      if (i__10030 < count__10029) {
        var s = chunk__10028.cljs$core$IIndexed$_nth$arity$2(null, i__10030);
        cljs.core._write(writer, s);
        var G__10031 = seq__10027;
        var G__10032 = chunk__10028;
        var G__10033 = count__10029;
        var G__10034 = i__10030 + 1;
        seq__10027 = G__10031;
        chunk__10028 = G__10032;
        count__10029 = G__10033;
        i__10030 = G__10034;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__10027);
        if (temp__4126__auto__) {
          var seq__10027__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__10027__$1)) {
            var c__4563__auto__ = cljs.core.chunk_first(seq__10027__$1);
            var G__10035 = cljs.core.chunk_rest(seq__10027__$1);
            var G__10036 = c__4563__auto__;
            var G__10037 = cljs.core.count(c__4563__auto__);
            var G__10038 = 0;
            seq__10027 = G__10035;
            chunk__10028 = G__10036;
            count__10029 = G__10037;
            i__10030 = G__10038;
            continue;
          } else {
            var s = cljs.core.first(seq__10027__$1);
            cljs.core._write(writer, s);
            var G__10039 = cljs.core.next(seq__10027__$1);
            var G__10040 = null;
            var G__10041 = 0;
            var G__10042 = 0;
            seq__10027 = G__10039;
            chunk__10028 = G__10040;
            count__10029 = G__10041;
            i__10030 = G__10042;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__10043__i = 0, G__10043__a = new Array(arguments.length - 1);
      while (G__10043__i < G__10043__a.length) {
        G__10043__a[G__10043__i] = arguments[G__10043__i + 1];
        ++G__10043__i;
      }
      ss = new cljs.core.IndexedSeq(G__10043__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10044) {
    var writer = cljs.core.first(arglist__10044);
    var ss = cljs.core.rest(arglist__10044);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10046 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10046;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__10049 = '[\\\\"\b\f\n\r\t]';
    var G__10050 = "g";
    return RegExp(G__10049, G__10050);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3764__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3764__auto__)) {
          var and__3764__auto____$1 = function() {
            var G__10064 = obj;
            if (G__10064) {
              var bit__4457__auto__ = G__10064.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4457__auto__ || G__10064.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__10064.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10064);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10064);
            }
          }();
          if (and__3764__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3764__auto____$1;
          }
        } else {
          return and__3764__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        pr_writer(cljs.core.meta(obj), writer, opts);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__10065 = obj;
            if (G__10065) {
              var bit__4450__auto__ = G__10065.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4450__auto__ || G__10065.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__10066 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__10067 = pr_writer;
                var G__10068 = writer;
                var G__10069 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10066, G__10067, G__10068, G__10069) : cljs.core.print_map.call(null, G__10066, G__10067, G__10068, G__10069);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__10070 = obj;
                    return goog.isString(G__10070);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__10072 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__10072;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__10071 = obj;
                            if (G__10071) {
                              var bit__4457__auto__ = G__10071.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4457__auto__ || G__10071.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__10071.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10071);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10071);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__10077 = cljs.core.seq(cljs.core.next(objs));
  var chunk__10078 = null;
  var count__10079 = 0;
  var i__10080 = 0;
  while (true) {
    if (i__10080 < count__10079) {
      var obj = chunk__10078.cljs$core$IIndexed$_nth$arity$2(null, i__10080);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__10081 = seq__10077;
      var G__10082 = chunk__10078;
      var G__10083 = count__10079;
      var G__10084 = i__10080 + 1;
      seq__10077 = G__10081;
      chunk__10078 = G__10082;
      count__10079 = G__10083;
      i__10080 = G__10084;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__10077);
      if (temp__4126__auto__) {
        var seq__10077__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10077__$1)) {
          var c__4563__auto__ = cljs.core.chunk_first(seq__10077__$1);
          var G__10085 = cljs.core.chunk_rest(seq__10077__$1);
          var G__10086 = c__4563__auto__;
          var G__10087 = cljs.core.count(c__4563__auto__);
          var G__10088 = 0;
          seq__10077 = G__10085;
          chunk__10078 = G__10086;
          count__10079 = G__10087;
          i__10080 = G__10088;
          continue;
        } else {
          var obj = cljs.core.first(seq__10077__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__10089 = cljs.core.next(seq__10077__$1);
          var G__10090 = null;
          var G__10091 = 0;
          var G__10092 = 0;
          seq__10077 = G__10089;
          chunk__10078 = G__10090;
          count__10079 = G__10091;
          i__10080 = G__10092;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10093__i = 0, G__10093__a = new Array(arguments.length - 0);
      while (G__10093__i < G__10093__a.length) {
        G__10093__a[G__10093__i] = arguments[G__10093__i + 0];
        ++G__10093__i;
      }
      objs = new cljs.core.IndexedSeq(G__10093__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10094) {
    var objs = cljs.core.seq(arglist__10094);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10095__i = 0, G__10095__a = new Array(arguments.length - 0);
      while (G__10095__i < G__10095__a.length) {
        G__10095__a[G__10095__i] = arguments[G__10095__i + 0];
        ++G__10095__i;
      }
      objs = new cljs.core.IndexedSeq(G__10095__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10096) {
    var objs = cljs.core.seq(arglist__10096);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10097__i = 0, G__10097__a = new Array(arguments.length - 0);
      while (G__10097__i < G__10097__a.length) {
        G__10097__a[G__10097__i] = arguments[G__10097__i + 0];
        ++G__10097__i;
      }
      objs = new cljs.core.IndexedSeq(G__10097__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10098) {
    var objs = cljs.core.seq(arglist__10098);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10099__i = 0, G__10099__a = new Array(arguments.length - 0);
      while (G__10099__i < G__10099__a.length) {
        G__10099__a[G__10099__i] = arguments[G__10099__i + 0];
        ++G__10099__i;
      }
      objs = new cljs.core.IndexedSeq(G__10099__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10100) {
    var objs = cljs.core.seq(arglist__10100);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10101__i = 0, G__10101__a = new Array(arguments.length - 0);
      while (G__10101__i < G__10101__a.length) {
        G__10101__a[G__10101__i] = arguments[G__10101__i + 0];
        ++G__10101__i;
      }
      objs = new cljs.core.IndexedSeq(G__10101__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10102) {
    var objs = cljs.core.seq(arglist__10102);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10103__i = 0, G__10103__a = new Array(arguments.length - 0);
      while (G__10103__i < G__10103__a.length) {
        G__10103__a[G__10103__i] = arguments[G__10103__i + 0];
        ++G__10103__i;
      }
      objs = new cljs.core.IndexedSeq(G__10103__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10104) {
    var objs = cljs.core.seq(arglist__10104);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10105__i = 0, G__10105__a = new Array(arguments.length - 0);
      while (G__10105__i < G__10105__a.length) {
        G__10105__a[G__10105__i] = arguments[G__10105__i + 0];
        ++G__10105__i;
      }
      objs = new cljs.core.IndexedSeq(G__10105__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10106) {
    var objs = cljs.core.seq(arglist__10106);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10107__i = 0, G__10107__a = new Array(arguments.length - 0);
      while (G__10107__i < G__10107__a.length) {
        G__10107__a[G__10107__i] = arguments[G__10107__i + 0];
        ++G__10107__i;
      }
      objs = new cljs.core.IndexedSeq(G__10107__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10108) {
    var objs = cljs.core.seq(arglist__10108);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__10115_10121 = cljs.core.key(e);
    var G__10116_10122 = w;
    var G__10117_10123 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10115_10121, G__10116_10122, G__10117_10123) : print_one.call(null, G__10115_10121, G__10116_10122, G__10117_10123);
    cljs.core._write(w, " ");
    var G__10118 = cljs.core.val(e);
    var G__10119 = w;
    var G__10120 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10118, G__10119, G__10120) : print_one.call(null, G__10118, G__10119, G__10120);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__10124__i = 0, G__10124__a = new Array(arguments.length - 2);
      while (G__10124__i < G__10124__a.length) {
        G__10124__a[G__10124__i] = arguments[G__10124__i + 2];
        ++G__10124__i;
      }
      args = new cljs.core.IndexedSeq(G__10124__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10125) {
    var iref = cljs.core.first(arglist__10125);
    arglist__10125 = cljs.core.next(arglist__10125);
    var f = cljs.core.first(arglist__10125);
    var args = cljs.core.rest(arglist__10125);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__10128 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10128) : cljs.core.atom.call(null, G__10128);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__10130 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10130) : cljs.core.deref.call(null, G__10130);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__10131_SHARP_, p2__10132_SHARP_) {
    var ret = function() {
      var G__10135 = p1__10131_SHARP_;
      var G__10136 = p2__10132_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10135, G__10136) : rf.call(null, G__10135, G__10136);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__10139 = null;
      var G__10139__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10139__1 = function(result) {
        var G__10138 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10138) : rf.call(null, G__10138);
      };
      var G__10139__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__10139 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10139__0.call(this);
          case 1:
            return G__10139__1.call(this, result);
          case 2:
            return G__10139__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10139.cljs$core$IFn$_invoke$arity$0 = G__10139__0;
      G__10139.cljs$core$IFn$_invoke$arity$1 = G__10139__1;
      G__10139.cljs$core$IFn$_invoke$arity$2 = G__10139__2;
      return G__10139;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__10148 = null;
          var G__10148__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__10148__1 = function(result) {
            var G__10144 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10144) : rf.call(null, G__10144);
          };
          var G__10148__2 = function(result, input) {
            var prior = function() {
              var G__10145 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10145) : cljs.core.deref.call(null, G__10145);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__10146 = result;
              var G__10147 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10146, G__10147) : rf.call(null, G__10146, G__10147);
            }
          };
          G__10148 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__10148__0.call(this);
              case 1:
                return G__10148__1.call(this, result);
              case 2:
                return G__10148__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__10148.cljs$core$IFn$_invoke$arity$0 = G__10148__0;
          G__10148.cljs$core$IFn$_invoke$arity$1 = G__10148__1;
          G__10148.cljs$core$IFn$_invoke$arity$2 = G__10148__2;
          return G__10148;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4754__auto__ = this;
  return cljs.core.es6_iterator(this__4754__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10150_SHARP_, p2__10149_SHARP_) {
    var G__10152 = p2__10149_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10152) : proc.call(null, G__10152);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj10154 = {};
  return obj10154;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._clj__GT_js[function() {
        var G__10158 = x__4420__auto__;
        return goog.typeOf(G__10158);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._key__GT_js[function() {
        var G__10162 = x__4420__auto__;
        return goog.typeOf(G__10162);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__10165 = k;
    if (G__10165) {
      var bit__4457__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3776__auto__ = bit__4457__auto__;
        if (cljs.core.truth_(or__3776__auto__)) {
          return or__3776__auto__;
        } else {
          return G__10165.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10165.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10165);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10165);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__10166 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10166) : cljs.core.clj__GT_js.call(null, G__10166);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10182 = x;
      if (G__10182) {
        var bit__4457__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3776__auto__ = bit__4457__auto__;
          if (cljs.core.truth_(or__3776__auto__)) {
            return or__3776__auto__;
          } else {
            return G__10182.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10182.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10182);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10182);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj10184 = {};
              return obj10184;
            }();
            var seq__10185_10195 = cljs.core.seq(x);
            var chunk__10186_10196 = null;
            var count__10187_10197 = 0;
            var i__10188_10198 = 0;
            while (true) {
              if (i__10188_10198 < count__10187_10197) {
                var vec__10189_10199 = chunk__10186_10196.cljs$core$IIndexed$_nth$arity$2(null, i__10188_10198);
                var k_10200 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10189_10199, 0, null);
                var v_10201 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10189_10199, 1, null);
                m[cljs.core.key__GT_js(k_10200)] = clj__GT_js(v_10201);
                var G__10202 = seq__10185_10195;
                var G__10203 = chunk__10186_10196;
                var G__10204 = count__10187_10197;
                var G__10205 = i__10188_10198 + 1;
                seq__10185_10195 = G__10202;
                chunk__10186_10196 = G__10203;
                count__10187_10197 = G__10204;
                i__10188_10198 = G__10205;
                continue;
              } else {
                var temp__4126__auto___10206 = cljs.core.seq(seq__10185_10195);
                if (temp__4126__auto___10206) {
                  var seq__10185_10207__$1 = temp__4126__auto___10206;
                  if (cljs.core.chunked_seq_QMARK_(seq__10185_10207__$1)) {
                    var c__4563__auto___10208 = cljs.core.chunk_first(seq__10185_10207__$1);
                    var G__10209 = cljs.core.chunk_rest(seq__10185_10207__$1);
                    var G__10210 = c__4563__auto___10208;
                    var G__10211 = cljs.core.count(c__4563__auto___10208);
                    var G__10212 = 0;
                    seq__10185_10195 = G__10209;
                    chunk__10186_10196 = G__10210;
                    count__10187_10197 = G__10211;
                    i__10188_10198 = G__10212;
                    continue;
                  } else {
                    var vec__10190_10213 = cljs.core.first(seq__10185_10207__$1);
                    var k_10214 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10190_10213, 0, null);
                    var v_10215 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10190_10213, 1, null);
                    m[cljs.core.key__GT_js(k_10214)] = clj__GT_js(v_10215);
                    var G__10216 = cljs.core.next(seq__10185_10207__$1);
                    var G__10217 = null;
                    var G__10218 = 0;
                    var G__10219 = 0;
                    seq__10185_10195 = G__10216;
                    chunk__10186_10196 = G__10217;
                    count__10187_10197 = G__10218;
                    i__10188_10198 = G__10219;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__10191_10220 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__10192_10221 = null;
              var count__10193_10222 = 0;
              var i__10194_10223 = 0;
              while (true) {
                if (i__10194_10223 < count__10193_10222) {
                  var x_10224__$1 = chunk__10192_10221.cljs$core$IIndexed$_nth$arity$2(null, i__10194_10223);
                  arr.push(x_10224__$1);
                  var G__10225 = seq__10191_10220;
                  var G__10226 = chunk__10192_10221;
                  var G__10227 = count__10193_10222;
                  var G__10228 = i__10194_10223 + 1;
                  seq__10191_10220 = G__10225;
                  chunk__10192_10221 = G__10226;
                  count__10193_10222 = G__10227;
                  i__10194_10223 = G__10228;
                  continue;
                } else {
                  var temp__4126__auto___10229 = cljs.core.seq(seq__10191_10220);
                  if (temp__4126__auto___10229) {
                    var seq__10191_10230__$1 = temp__4126__auto___10229;
                    if (cljs.core.chunked_seq_QMARK_(seq__10191_10230__$1)) {
                      var c__4563__auto___10231 = cljs.core.chunk_first(seq__10191_10230__$1);
                      var G__10232 = cljs.core.chunk_rest(seq__10191_10230__$1);
                      var G__10233 = c__4563__auto___10231;
                      var G__10234 = cljs.core.count(c__4563__auto___10231);
                      var G__10235 = 0;
                      seq__10191_10220 = G__10232;
                      chunk__10192_10221 = G__10233;
                      count__10193_10222 = G__10234;
                      i__10194_10223 = G__10235;
                      continue;
                    } else {
                      var x_10236__$1 = cljs.core.first(seq__10191_10230__$1);
                      arr.push(x_10236__$1);
                      var G__10237 = cljs.core.next(seq__10191_10230__$1);
                      var G__10238 = null;
                      var G__10239 = 0;
                      var G__10240 = 0;
                      seq__10191_10220 = G__10237;
                      chunk__10192_10221 = G__10238;
                      count__10193_10222 = G__10239;
                      i__10194_10223 = G__10240;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10242 = {};
  return obj10242;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3764__auto__ = x;
    if (and__3764__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4420__auto__ = x == null ? null : x;
    return function() {
      var or__3776__auto__ = cljs.core._js__GT_clj[function() {
        var G__10246 = x__4420__auto__;
        return goog.typeOf(G__10246);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__10303__delegate = function(x, opts) {
      var map__10276 = opts;
      var map__10276__$1 = cljs.core.seq_QMARK_(map__10276) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10276) : map__10276;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10276__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__10276, map__10276__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__10292 = x__$1;
            if (G__10292) {
              var bit__4457__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3776__auto__ = bit__4457__auto__;
                if (cljs.core.truth_(or__3776__auto__)) {
                  return or__3776__auto__;
                } else {
                  return G__10292.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__10292.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10292);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10292);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4532__auto__ = function(map__10276, map__10276__$1, keywordize_keys, keyfn) {
                        return function iter__10293(s__10294) {
                          return new cljs.core.LazySeq(null, function(map__10276, map__10276__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__10294__$1 = s__10294;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__10294__$1);
                                if (temp__4126__auto__) {
                                  var s__10294__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__10294__$2)) {
                                    var c__4530__auto__ = cljs.core.chunk_first(s__10294__$2);
                                    var size__4531__auto__ = cljs.core.count(c__4530__auto__);
                                    var b__10296 = cljs.core.chunk_buffer(size__4531__auto__);
                                    if (function() {
                                      var i__10295 = 0;
                                      while (true) {
                                        if (i__10295 < size__4531__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4530__auto__, i__10295);
                                          cljs.core.chunk_append(b__10296, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__10301 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10301) : keyfn.call(null, G__10301);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__10304 = i__10295 + 1;
                                          i__10295 = G__10304;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10296), iter__10293(cljs.core.chunk_rest(s__10294__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__10296), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__10294__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__10302 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10302) : keyfn.call(null, G__10302);
                                    }(), thisfn(x__$1[k])], null), iter__10293(cljs.core.rest(s__10294__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__10276, map__10276__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__10276, map__10276__$1, keywordize_keys, keyfn);
                      return iter__4532__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__10276, map__10276__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__10303 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__10305__i = 0, G__10305__a = new Array(arguments.length - 1);
        while (G__10305__i < G__10305__a.length) {
          G__10305__a[G__10305__i] = arguments[G__10305__i + 1];
          ++G__10305__i;
        }
        opts = new cljs.core.IndexedSeq(G__10305__a, 0);
      }
      return G__10303__delegate.call(this, x, opts);
    };
    G__10303.cljs$lang$maxFixedArity = 1;
    G__10303.cljs$lang$applyTo = function(arglist__10306) {
      var x = cljs.core.first(arglist__10306);
      var opts = cljs.core.rest(arglist__10306);
      return G__10303__delegate(x, opts);
    };
    G__10303.cljs$core$IFn$_invoke$arity$variadic = G__10303__delegate;
    return G__10303;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__10307 = null;
        if (arguments.length > 1) {
          var G__10308__i = 0, G__10308__a = new Array(arguments.length - 1);
          while (G__10308__i < G__10308__a.length) {
            G__10308__a[G__10308__i] = arguments[G__10308__i + 1];
            ++G__10308__i;
          }
          G__10307 = new cljs.core.IndexedSeq(G__10308__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10307);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__10311 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10311) : cljs.core.atom.call(null, G__10311);
  }();
  return function(mem) {
    return function() {
      var G__10313__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__10312 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10312) : cljs.core.deref.call(null, G__10312);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__10313 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10314__i = 0, G__10314__a = new Array(arguments.length - 0);
          while (G__10314__i < G__10314__a.length) {
            G__10314__a[G__10314__i] = arguments[G__10314__i + 0];
            ++G__10314__i;
          }
          args = new cljs.core.IndexedSeq(G__10314__a, 0);
        }
        return G__10313__delegate.call(this, args);
      };
      G__10313.cljs$lang$maxFixedArity = 0;
      G__10313.cljs$lang$applyTo = function(arglist__10315) {
        var args = cljs.core.seq(arglist__10315);
        return G__10313__delegate(args);
      };
      G__10313.cljs$core$IFn$_invoke$arity$variadic = G__10313__delegate;
      return G__10313;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__10317 = ret;
        f = G__10317;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__10318__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__10318 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__10319__i = 0, G__10319__a = new Array(arguments.length - 1);
        while (G__10319__i < G__10319__a.length) {
          G__10319__a[G__10319__i] = arguments[G__10319__i + 1];
          ++G__10319__i;
        }
        args = new cljs.core.IndexedSeq(G__10319__a, 0);
      }
      return G__10318__delegate.call(this, f, args);
    };
    G__10318.cljs$lang$maxFixedArity = 1;
    G__10318.cljs$lang$applyTo = function(arglist__10320) {
      var f = cljs.core.first(arglist__10320);
      var args = cljs.core.rest(arglist__10320);
      return G__10318__delegate(f, args);
    };
    G__10318.cljs$core$IFn$_invoke$arity$variadic = G__10318__delegate;
    return G__10318;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__10321 = null;
        if (arguments.length > 1) {
          var G__10322__i = 0, G__10322__a = new Array(arguments.length - 1);
          while (G__10322__i < G__10322__a.length) {
            G__10322__a[G__10322__i] = arguments[G__10322__i + 1];
            ++G__10322__i;
          }
          G__10321 = new cljs.core.IndexedSeq(G__10322__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10321);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__10325 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10325) : Math.floor.call(null, G__10325);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__10327 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10327) : f.call(null, G__10327);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__10329 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10329) : cljs.core.atom.call(null, G__10329);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__10330__i = 0, G__10330__a = new Array(arguments.length - 1);
      while (G__10330__i < G__10330__a.length) {
        G__10330__a[G__10330__i] = arguments[G__10330__i + 1];
        ++G__10330__i;
      }
      args = new cljs.core.IndexedSeq(G__10330__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10331) {
    var f = cljs.core.first(arglist__10331);
    var args = cljs.core.rest(arglist__10331);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10396 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10396) : cljs.core.deref.call(null, G__10396);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3776__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3776__auto__) {
      return or__3776__auto__;
    } else {
      var or__3776__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3776__auto____$1) {
        return or__3776__auto____$1;
      } else {
        var and__3764__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3764__auto__) {
          var and__3764__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3764__auto____$1) {
            var and__3764__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3764__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__10421 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__10419 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10419) : child.call(null, G__10419);
                  }(), function() {
                    var G__10420 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10420) : parent.call(null, G__10420);
                  }());
                  var G__10422 = i + 1;
                  ret = G__10421;
                  i = G__10422;
                  continue;
                }
                break;
              }
            } else {
              return and__3764__auto____$2;
            }
          } else {
            return and__3764__auto____$1;
          }
        } else {
          return and__3764__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10426 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10426) : cljs.core.deref.call(null, G__10426);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10430 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10430) : cljs.core.deref.call(null, G__10430);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10434 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10434) : cljs.core.deref.call(null, G__10434);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__10443 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10443) : targets.call(null, G__10443);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__10444 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10444) : sources.call(null, G__10444);
        }()));
      };
    }(tp, td, ta);
    var or__3776__auto__ = cljs.core.contains_QMARK_(function() {
      var G__10448 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10448) : tp.call(null, G__10448);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__10449 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10449) : ta.call(null, G__10449);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__10450 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10450) : ta.call(null, G__10450);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3776__auto__)) {
      return or__3776__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__10457 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10457) : parentMap.call(null, G__10457);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10458 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10458) : parentMap.call(null, G__10458);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__10451_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__10451_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10451_SHARP_), cljs.core.second(p1__10451_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__10459 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10459) : parentMap.call(null, G__10459);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__10452_SHARP_, p2__10453_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10452_SHARP_, p2__10453_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10462 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10462) : cljs.core.deref.call(null, G__10462);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10463 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10463) : cljs.core.deref.call(null, G__10463);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10479 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10479) : cljs.core.deref.call(null, G__10479);
  }().call(null, x);
  var or__3776__auto__ = cljs.core.truth_(function() {
    var and__3764__auto__ = xprefs;
    if (cljs.core.truth_(and__3764__auto__)) {
      var G__10481 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10481) : xprefs.call(null, G__10481);
    } else {
      return and__3764__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    var or__3776__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10482 = cljs.core.rest(ps);
          ps = G__10482;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3776__auto____$1)) {
      return or__3776__auto____$1;
    } else {
      var or__3776__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10483 = cljs.core.rest(ps);
            ps = G__10483;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3776__auto____$2)) {
        return or__3776__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3776__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3776__auto__)) {
    return or__3776__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10497) {
    var vec__10498 = p__10497;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10498, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10498, 1, null);
    var e = vec__10498;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10499 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10499) : cljs.core.deref.call(null, G__10499);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3776__auto__ = be == null;
        if (or__3776__auto__) {
          return or__3776__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10500 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10500) : cljs.core.deref.call(null, G__10500);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10501 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10501) : cljs.core.deref.call(null, G__10501);
    }(), function() {
      var G__10502 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10502) : cljs.core.deref.call(null, G__10502);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10504 = {};
  return obj10504;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._reset[function() {
        var G__10508 = x__4420__auto__;
        return goog.typeOf(G__10508);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._reset["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._add_method[function() {
        var G__10512 = x__4420__auto__;
        return goog.typeOf(G__10512);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._add_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._remove_method[function() {
        var G__10516 = x__4420__auto__;
        return goog.typeOf(G__10516);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._remove_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._prefer_method[function() {
        var G__10520 = x__4420__auto__;
        return goog.typeOf(G__10520);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._get_method[function() {
        var G__10524 = x__4420__auto__;
        return goog.typeOf(G__10524);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._get_method["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._methods[function() {
        var G__10528 = x__4420__auto__;
        return goog.typeOf(G__10528);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._methods["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3764__auto__ = mf;
    if (and__3764__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3764__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4420__auto__ = mf == null ? null : mf;
    return function() {
      var or__3776__auto__ = cljs.core._prefers[function() {
        var G__10532 = x__4420__auto__;
        return goog.typeOf(G__10532);
      }()];
      if (or__3776__auto__) {
        return or__3776__auto__;
      } else {
        var or__3776__auto____$1 = cljs.core._prefers["_"];
        if (or__3776__auto____$1) {
          return or__3776__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10534 = this$__$1;
  return goog.getUid(G__10534);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10535 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10535) : cljs.core.deref.call(null, G__10535);
  }(), function() {
    var G__10536 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10536) : cljs.core.deref.call(null, G__10536);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__10537 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10537) : cljs.core.deref.call(null, G__10537);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__10538 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10538) : cljs.core.deref.call(null, G__10538);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10539 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10539) : cljs.core.deref.call(null, G__10539);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10540 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10540) : cljs.core.deref.call(null, G__10540);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11381 = null;
  var G__11381__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11381__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10541 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10541) : self__.dispatch_fn.call(null, G__10541);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10542 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10542) : target_fn.call(null, G__10542);
  };
  var G__11381__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10543 = a;
      var G__10544 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10543, G__10544) : self__.dispatch_fn.call(null, G__10543, G__10544);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10545 = a;
    var G__10546 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10545, G__10546) : target_fn.call(null, G__10545, G__10546);
  };
  var G__11381__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10547 = a;
      var G__10548 = b;
      var G__10549 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10547, G__10548, G__10549) : self__.dispatch_fn.call(null, G__10547, G__10548, G__10549);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10550 = a;
    var G__10551 = b;
    var G__10552 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10550, G__10551, G__10552) : target_fn.call(null, G__10550, G__10551, G__10552);
  };
  var G__11381__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10553 = a;
      var G__10554 = b;
      var G__10555 = c;
      var G__10556 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10553, G__10554, G__10555, G__10556) : self__.dispatch_fn.call(null, G__10553, G__10554, G__10555, G__10556);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10557 = a;
    var G__10558 = b;
    var G__10559 = c;
    var G__10560 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10557, G__10558, G__10559, G__10560) : target_fn.call(null, G__10557, G__10558, G__10559, G__10560);
  };
  var G__11381__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10561 = a;
      var G__10562 = b;
      var G__10563 = c;
      var G__10564 = d;
      var G__10565 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10561, G__10562, G__10563, G__10564, G__10565) : self__.dispatch_fn.call(null, G__10561, G__10562, G__10563, G__10564, G__10565);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10566 = a;
    var G__10567 = b;
    var G__10568 = c;
    var G__10569 = d;
    var G__10570 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10566, G__10567, G__10568, G__10569, G__10570) : target_fn.call(null, G__10566, G__10567, G__10568, G__10569, G__10570);
  };
  var G__11381__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10571 = a;
      var G__10572 = b;
      var G__10573 = c;
      var G__10574 = d;
      var G__10575 = e;
      var G__10576 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10571, G__10572, G__10573, G__10574, G__10575, G__10576) : self__.dispatch_fn.call(null, G__10571, G__10572, G__10573, G__10574, G__10575, G__10576);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10577 = a;
    var G__10578 = b;
    var G__10579 = c;
    var G__10580 = d;
    var G__10581 = e;
    var G__10582 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10577, G__10578, G__10579, G__10580, G__10581, G__10582) : target_fn.call(null, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582);
  };
  var G__11381__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10583 = a;
      var G__10584 = b;
      var G__10585 = c;
      var G__10586 = d;
      var G__10587 = e;
      var G__10588 = f;
      var G__10589 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10583, G__10584, G__10585, G__10586, G__10587, G__10588, G__10589) : self__.dispatch_fn.call(null, G__10583, G__10584, G__10585, G__10586, G__10587, G__10588, G__10589);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10590 = a;
    var G__10591 = b;
    var G__10592 = c;
    var G__10593 = d;
    var G__10594 = e;
    var G__10595 = f;
    var G__10596 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596) : target_fn.call(null, G__10590, G__10591, G__10592, G__10593, G__10594, G__10595, G__10596);
  };
  var G__11381__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10597 = a;
      var G__10598 = b;
      var G__10599 = c;
      var G__10600 = d;
      var G__10601 = e;
      var G__10602 = f;
      var G__10603 = g;
      var G__10604 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10597, G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604) : self__.dispatch_fn.call(null, G__10597, G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10605 = a;
    var G__10606 = b;
    var G__10607 = c;
    var G__10608 = d;
    var G__10609 = e;
    var G__10610 = f;
    var G__10611 = g;
    var G__10612 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612) : target_fn.call(null, G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611, G__10612);
  };
  var G__11381__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10613 = a;
      var G__10614 = b;
      var G__10615 = c;
      var G__10616 = d;
      var G__10617 = e;
      var G__10618 = f;
      var G__10619 = g;
      var G__10620 = h;
      var G__10621 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10613, G__10614, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621) : self__.dispatch_fn.call(null, G__10613, G__10614, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10622 = a;
    var G__10623 = b;
    var G__10624 = c;
    var G__10625 = d;
    var G__10626 = e;
    var G__10627 = f;
    var G__10628 = g;
    var G__10629 = h;
    var G__10630 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10622, G__10623, G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630) : target_fn.call(null, G__10622, G__10623, G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630);
  };
  var G__11381__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10631 = a;
      var G__10632 = b;
      var G__10633 = c;
      var G__10634 = d;
      var G__10635 = e;
      var G__10636 = f;
      var G__10637 = g;
      var G__10638 = h;
      var G__10639 = i;
      var G__10640 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10631, G__10632, G__10633, G__10634, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640) : self__.dispatch_fn.call(null, G__10631, G__10632, G__10633, G__10634, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10641 = a;
    var G__10642 = b;
    var G__10643 = c;
    var G__10644 = d;
    var G__10645 = e;
    var G__10646 = f;
    var G__10647 = g;
    var G__10648 = h;
    var G__10649 = i;
    var G__10650 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10641, G__10642, G__10643, G__10644, G__10645, G__10646, G__10647, G__10648, G__10649, G__10650) : target_fn.call(null, G__10641, G__10642, G__10643, G__10644, G__10645, G__10646, G__10647, G__10648, G__10649, G__10650);
  };
  var G__11381__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10651 = a;
      var G__10652 = b;
      var G__10653 = c;
      var G__10654 = d;
      var G__10655 = e;
      var G__10656 = f;
      var G__10657 = g;
      var G__10658 = h;
      var G__10659 = i;
      var G__10660 = j;
      var G__10661 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10651, G__10652, G__10653, G__10654, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661) : self__.dispatch_fn.call(null, G__10651, G__10652, G__10653, G__10654, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10662 = a;
    var G__10663 = b;
    var G__10664 = c;
    var G__10665 = d;
    var G__10666 = e;
    var G__10667 = f;
    var G__10668 = g;
    var G__10669 = h;
    var G__10670 = i;
    var G__10671 = j;
    var G__10672 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10662, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669, G__10670, G__10671, G__10672) : target_fn.call(null, G__10662, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669, G__10670, G__10671, G__10672);
  };
  var G__11381__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10673 = a;
      var G__10674 = b;
      var G__10675 = c;
      var G__10676 = d;
      var G__10677 = e;
      var G__10678 = f;
      var G__10679 = g;
      var G__10680 = h;
      var G__10681 = i;
      var G__10682 = j;
      var G__10683 = k;
      var G__10684 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684) : self__.dispatch_fn.call(null, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10685 = a;
    var G__10686 = b;
    var G__10687 = c;
    var G__10688 = d;
    var G__10689 = e;
    var G__10690 = f;
    var G__10691 = g;
    var G__10692 = h;
    var G__10693 = i;
    var G__10694 = j;
    var G__10695 = k;
    var G__10696 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10685, G__10686, G__10687, G__10688, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696) : target_fn.call(null, G__10685, G__10686, G__10687, G__10688, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696);
  };
  var G__11381__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10697 = a;
      var G__10698 = b;
      var G__10699 = c;
      var G__10700 = d;
      var G__10701 = e;
      var G__10702 = f;
      var G__10703 = g;
      var G__10704 = h;
      var G__10705 = i;
      var G__10706 = j;
      var G__10707 = k;
      var G__10708 = l;
      var G__10709 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10697, G__10698, G__10699, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709) : self__.dispatch_fn.call(null, G__10697, G__10698, G__10699, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10710 = a;
    var G__10711 = b;
    var G__10712 = c;
    var G__10713 = d;
    var G__10714 = e;
    var G__10715 = f;
    var G__10716 = g;
    var G__10717 = h;
    var G__10718 = i;
    var G__10719 = j;
    var G__10720 = k;
    var G__10721 = l;
    var G__10722 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10710, G__10711, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722) : target_fn.call(null, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722);
  };
  var G__11381__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10723 = a;
      var G__10724 = b;
      var G__10725 = c;
      var G__10726 = d;
      var G__10727 = e;
      var G__10728 = f;
      var G__10729 = g;
      var G__10730 = h;
      var G__10731 = i;
      var G__10732 = j;
      var G__10733 = k;
      var G__10734 = l;
      var G__10735 = m;
      var G__10736 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736) : self__.dispatch_fn.call(null, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10737 = a;
    var G__10738 = b;
    var G__10739 = c;
    var G__10740 = d;
    var G__10741 = e;
    var G__10742 = f;
    var G__10743 = g;
    var G__10744 = h;
    var G__10745 = i;
    var G__10746 = j;
    var G__10747 = k;
    var G__10748 = l;
    var G__10749 = m;
    var G__10750 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750) : target_fn.call(null, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750);
  };
  var G__11381__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10751 = a;
      var G__10752 = b;
      var G__10753 = c;
      var G__10754 = d;
      var G__10755 = e;
      var G__10756 = f;
      var G__10757 = g;
      var G__10758 = h;
      var G__10759 = i;
      var G__10760 = j;
      var G__10761 = k;
      var G__10762 = l;
      var G__10763 = m;
      var G__10764 = n;
      var G__10765 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765) : self__.dispatch_fn.call(null, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10766 = a;
    var G__10767 = b;
    var G__10768 = c;
    var G__10769 = d;
    var G__10770 = e;
    var G__10771 = f;
    var G__10772 = g;
    var G__10773 = h;
    var G__10774 = i;
    var G__10775 = j;
    var G__10776 = k;
    var G__10777 = l;
    var G__10778 = m;
    var G__10779 = n;
    var G__10780 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10766, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780) : target_fn.call(null, G__10766, G__10767, G__10768, G__10769, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780);
  };
  var G__11381__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10781 = a;
      var G__10782 = b;
      var G__10783 = c;
      var G__10784 = d;
      var G__10785 = e;
      var G__10786 = f;
      var G__10787 = g;
      var G__10788 = h;
      var G__10789 = i;
      var G__10790 = j;
      var G__10791 = k;
      var G__10792 = l;
      var G__10793 = m;
      var G__10794 = n;
      var G__10795 = o;
      var G__10796 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796) : self__.dispatch_fn.call(null, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10797 = a;
    var G__10798 = b;
    var G__10799 = c;
    var G__10800 = d;
    var G__10801 = e;
    var G__10802 = f;
    var G__10803 = g;
    var G__10804 = h;
    var G__10805 = i;
    var G__10806 = j;
    var G__10807 = k;
    var G__10808 = l;
    var G__10809 = m;
    var G__10810 = n;
    var G__10811 = o;
    var G__10812 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812) : target_fn.call(null, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812);
  };
  var G__11381__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10813 = a;
      var G__10814 = b;
      var G__10815 = c;
      var G__10816 = d;
      var G__10817 = e;
      var G__10818 = f;
      var G__10819 = g;
      var G__10820 = h;
      var G__10821 = i;
      var G__10822 = j;
      var G__10823 = k;
      var G__10824 = l;
      var G__10825 = m;
      var G__10826 = n;
      var G__10827 = o;
      var G__10828 = p;
      var G__10829 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829) : self__.dispatch_fn.call(null, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10830 = a;
    var G__10831 = b;
    var G__10832 = c;
    var G__10833 = d;
    var G__10834 = e;
    var G__10835 = f;
    var G__10836 = g;
    var G__10837 = h;
    var G__10838 = i;
    var G__10839 = j;
    var G__10840 = k;
    var G__10841 = l;
    var G__10842 = m;
    var G__10843 = n;
    var G__10844 = o;
    var G__10845 = p;
    var G__10846 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846) : target_fn.call(null, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846);
  };
  var G__11381__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10847 = a;
      var G__10848 = b;
      var G__10849 = c;
      var G__10850 = d;
      var G__10851 = e;
      var G__10852 = f;
      var G__10853 = g;
      var G__10854 = h;
      var G__10855 = i;
      var G__10856 = j;
      var G__10857 = k;
      var G__10858 = l;
      var G__10859 = m;
      var G__10860 = n;
      var G__10861 = o;
      var G__10862 = p;
      var G__10863 = q;
      var G__10864 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864) : self__.dispatch_fn.call(null, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10865 = a;
    var G__10866 = b;
    var G__10867 = c;
    var G__10868 = d;
    var G__10869 = e;
    var G__10870 = f;
    var G__10871 = g;
    var G__10872 = h;
    var G__10873 = i;
    var G__10874 = j;
    var G__10875 = k;
    var G__10876 = l;
    var G__10877 = m;
    var G__10878 = n;
    var G__10879 = o;
    var G__10880 = p;
    var G__10881 = q;
    var G__10882 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882) : target_fn.call(null, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881, G__10882);
  };
  var G__11381__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10883 = a;
      var G__10884 = b;
      var G__10885 = c;
      var G__10886 = d;
      var G__10887 = e;
      var G__10888 = f;
      var G__10889 = g;
      var G__10890 = h;
      var G__10891 = i;
      var G__10892 = j;
      var G__10893 = k;
      var G__10894 = l;
      var G__10895 = m;
      var G__10896 = n;
      var G__10897 = o;
      var G__10898 = p;
      var G__10899 = q;
      var G__10900 = r;
      var G__10901 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901) : self__.dispatch_fn.call(null, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, 
      G__10900, G__10901);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10902 = a;
    var G__10903 = b;
    var G__10904 = c;
    var G__10905 = d;
    var G__10906 = e;
    var G__10907 = f;
    var G__10908 = g;
    var G__10909 = h;
    var G__10910 = i;
    var G__10911 = j;
    var G__10912 = k;
    var G__10913 = l;
    var G__10914 = m;
    var G__10915 = n;
    var G__10916 = o;
    var G__10917 = p;
    var G__10918 = q;
    var G__10919 = r;
    var G__10920 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920) : target_fn.call(null, G__10902, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918, G__10919, G__10920);
  };
  var G__11381__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10921 = a;
      var G__10922 = b;
      var G__10923 = c;
      var G__10924 = d;
      var G__10925 = e;
      var G__10926 = f;
      var G__10927 = g;
      var G__10928 = h;
      var G__10929 = i;
      var G__10930 = j;
      var G__10931 = k;
      var G__10932 = l;
      var G__10933 = m;
      var G__10934 = n;
      var G__10935 = o;
      var G__10936 = p;
      var G__10937 = q;
      var G__10938 = r;
      var G__10939 = s;
      var G__10940 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940) : self__.dispatch_fn.call(null, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931, G__10932, G__10933, G__10934, G__10935, G__10936, 
      G__10937, G__10938, G__10939, G__10940);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10941 = a;
    var G__10942 = b;
    var G__10943 = c;
    var G__10944 = d;
    var G__10945 = e;
    var G__10946 = f;
    var G__10947 = g;
    var G__10948 = h;
    var G__10949 = i;
    var G__10950 = j;
    var G__10951 = k;
    var G__10952 = l;
    var G__10953 = m;
    var G__10954 = n;
    var G__10955 = o;
    var G__10956 = p;
    var G__10957 = q;
    var G__10958 = r;
    var G__10959 = s;
    var G__10960 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960) : target_fn.call(null, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, 
    G__10960);
  };
  var G__11381__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11381 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11381__1.call(this, self__);
      case 2:
        return G__11381__2.call(this, self__, a);
      case 3:
        return G__11381__3.call(this, self__, a, b);
      case 4:
        return G__11381__4.call(this, self__, a, b, c);
      case 5:
        return G__11381__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11381__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11381__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11381__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11381__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11381__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11381__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11381__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11381__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11381__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11381__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11381__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11381__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11381__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11381__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11381__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11381__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11381__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11381.cljs$core$IFn$_invoke$arity$1 = G__11381__1;
  G__11381.cljs$core$IFn$_invoke$arity$2 = G__11381__2;
  G__11381.cljs$core$IFn$_invoke$arity$3 = G__11381__3;
  G__11381.cljs$core$IFn$_invoke$arity$4 = G__11381__4;
  G__11381.cljs$core$IFn$_invoke$arity$5 = G__11381__5;
  G__11381.cljs$core$IFn$_invoke$arity$6 = G__11381__6;
  G__11381.cljs$core$IFn$_invoke$arity$7 = G__11381__7;
  G__11381.cljs$core$IFn$_invoke$arity$8 = G__11381__8;
  G__11381.cljs$core$IFn$_invoke$arity$9 = G__11381__9;
  G__11381.cljs$core$IFn$_invoke$arity$10 = G__11381__10;
  G__11381.cljs$core$IFn$_invoke$arity$11 = G__11381__11;
  G__11381.cljs$core$IFn$_invoke$arity$12 = G__11381__12;
  G__11381.cljs$core$IFn$_invoke$arity$13 = G__11381__13;
  G__11381.cljs$core$IFn$_invoke$arity$14 = G__11381__14;
  G__11381.cljs$core$IFn$_invoke$arity$15 = G__11381__15;
  G__11381.cljs$core$IFn$_invoke$arity$16 = G__11381__16;
  G__11381.cljs$core$IFn$_invoke$arity$17 = G__11381__17;
  G__11381.cljs$core$IFn$_invoke$arity$18 = G__11381__18;
  G__11381.cljs$core$IFn$_invoke$arity$19 = G__11381__19;
  G__11381.cljs$core$IFn$_invoke$arity$20 = G__11381__20;
  G__11381.cljs$core$IFn$_invoke$arity$21 = G__11381__21;
  G__11381.cljs$core$IFn$_invoke$arity$22 = G__11381__22;
  return G__11381;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args10533) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10533)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10961 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10961) : self__.dispatch_fn.call(null, G__10961);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10962 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10962) : target_fn.call(null, G__10962);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10963 = a;
    var G__10964 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10963, G__10964) : self__.dispatch_fn.call(null, G__10963, G__10964);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10965 = a;
  var G__10966 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10965, G__10966) : target_fn.call(null, G__10965, G__10966);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10967 = a;
    var G__10968 = b;
    var G__10969 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10967, G__10968, G__10969) : self__.dispatch_fn.call(null, G__10967, G__10968, G__10969);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10970 = a;
  var G__10971 = b;
  var G__10972 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10970, G__10971, G__10972) : target_fn.call(null, G__10970, G__10971, G__10972);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10973 = a;
    var G__10974 = b;
    var G__10975 = c;
    var G__10976 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10973, G__10974, G__10975, G__10976) : self__.dispatch_fn.call(null, G__10973, G__10974, G__10975, G__10976);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10977 = a;
  var G__10978 = b;
  var G__10979 = c;
  var G__10980 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10977, G__10978, G__10979, G__10980) : target_fn.call(null, G__10977, G__10978, G__10979, G__10980);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10981 = a;
    var G__10982 = b;
    var G__10983 = c;
    var G__10984 = d;
    var G__10985 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10981, G__10982, G__10983, G__10984, G__10985) : self__.dispatch_fn.call(null, G__10981, G__10982, G__10983, G__10984, G__10985);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10986 = a;
  var G__10987 = b;
  var G__10988 = c;
  var G__10989 = d;
  var G__10990 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10986, G__10987, G__10988, G__10989, G__10990) : target_fn.call(null, G__10986, G__10987, G__10988, G__10989, G__10990);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__10991 = a;
    var G__10992 = b;
    var G__10993 = c;
    var G__10994 = d;
    var G__10995 = e;
    var G__10996 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10991, G__10992, G__10993, G__10994, G__10995, G__10996) : self__.dispatch_fn.call(null, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__10997 = a;
  var G__10998 = b;
  var G__10999 = c;
  var G__11000 = d;
  var G__11001 = e;
  var G__11002 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10997, G__10998, G__10999, G__11000, G__11001, G__11002) : target_fn.call(null, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11003 = a;
    var G__11004 = b;
    var G__11005 = c;
    var G__11006 = d;
    var G__11007 = e;
    var G__11008 = f;
    var G__11009 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009) : self__.dispatch_fn.call(null, G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11010 = a;
  var G__11011 = b;
  var G__11012 = c;
  var G__11013 = d;
  var G__11014 = e;
  var G__11015 = f;
  var G__11016 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016) : target_fn.call(null, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11017 = a;
    var G__11018 = b;
    var G__11019 = c;
    var G__11020 = d;
    var G__11021 = e;
    var G__11022 = f;
    var G__11023 = g;
    var G__11024 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11017, G__11018, G__11019, G__11020, G__11021, G__11022, G__11023, G__11024) : self__.dispatch_fn.call(null, G__11017, G__11018, G__11019, G__11020, G__11021, G__11022, G__11023, G__11024);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11025 = a;
  var G__11026 = b;
  var G__11027 = c;
  var G__11028 = d;
  var G__11029 = e;
  var G__11030 = f;
  var G__11031 = g;
  var G__11032 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032) : target_fn.call(null, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11033 = a;
    var G__11034 = b;
    var G__11035 = c;
    var G__11036 = d;
    var G__11037 = e;
    var G__11038 = f;
    var G__11039 = g;
    var G__11040 = h;
    var G__11041 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11033, G__11034, G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041) : self__.dispatch_fn.call(null, G__11033, G__11034, G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11042 = a;
  var G__11043 = b;
  var G__11044 = c;
  var G__11045 = d;
  var G__11046 = e;
  var G__11047 = f;
  var G__11048 = g;
  var G__11049 = h;
  var G__11050 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11042, G__11043, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050) : target_fn.call(null, G__11042, G__11043, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11051 = a;
    var G__11052 = b;
    var G__11053 = c;
    var G__11054 = d;
    var G__11055 = e;
    var G__11056 = f;
    var G__11057 = g;
    var G__11058 = h;
    var G__11059 = i;
    var G__11060 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11051, G__11052, G__11053, G__11054, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060) : self__.dispatch_fn.call(null, G__11051, G__11052, G__11053, G__11054, G__11055, G__11056, G__11057, G__11058, G__11059, G__11060);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11061 = a;
  var G__11062 = b;
  var G__11063 = c;
  var G__11064 = d;
  var G__11065 = e;
  var G__11066 = f;
  var G__11067 = g;
  var G__11068 = h;
  var G__11069 = i;
  var G__11070 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070) : target_fn.call(null, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11071 = a;
    var G__11072 = b;
    var G__11073 = c;
    var G__11074 = d;
    var G__11075 = e;
    var G__11076 = f;
    var G__11077 = g;
    var G__11078 = h;
    var G__11079 = i;
    var G__11080 = j;
    var G__11081 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11071, G__11072, G__11073, G__11074, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081) : self__.dispatch_fn.call(null, G__11071, G__11072, G__11073, G__11074, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11082 = a;
  var G__11083 = b;
  var G__11084 = c;
  var G__11085 = d;
  var G__11086 = e;
  var G__11087 = f;
  var G__11088 = g;
  var G__11089 = h;
  var G__11090 = i;
  var G__11091 = j;
  var G__11092 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11082, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089, G__11090, G__11091, G__11092) : target_fn.call(null, G__11082, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089, G__11090, G__11091, G__11092);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11093 = a;
    var G__11094 = b;
    var G__11095 = c;
    var G__11096 = d;
    var G__11097 = e;
    var G__11098 = f;
    var G__11099 = g;
    var G__11100 = h;
    var G__11101 = i;
    var G__11102 = j;
    var G__11103 = k;
    var G__11104 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104) : self__.dispatch_fn.call(null, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11105 = a;
  var G__11106 = b;
  var G__11107 = c;
  var G__11108 = d;
  var G__11109 = e;
  var G__11110 = f;
  var G__11111 = g;
  var G__11112 = h;
  var G__11113 = i;
  var G__11114 = j;
  var G__11115 = k;
  var G__11116 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11105, G__11106, G__11107, G__11108, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116) : target_fn.call(null, G__11105, G__11106, G__11107, G__11108, G__11109, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11117 = a;
    var G__11118 = b;
    var G__11119 = c;
    var G__11120 = d;
    var G__11121 = e;
    var G__11122 = f;
    var G__11123 = g;
    var G__11124 = h;
    var G__11125 = i;
    var G__11126 = j;
    var G__11127 = k;
    var G__11128 = l;
    var G__11129 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129) : self__.dispatch_fn.call(null, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11130 = a;
  var G__11131 = b;
  var G__11132 = c;
  var G__11133 = d;
  var G__11134 = e;
  var G__11135 = f;
  var G__11136 = g;
  var G__11137 = h;
  var G__11138 = i;
  var G__11139 = j;
  var G__11140 = k;
  var G__11141 = l;
  var G__11142 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142) : target_fn.call(null, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11143 = a;
    var G__11144 = b;
    var G__11145 = c;
    var G__11146 = d;
    var G__11147 = e;
    var G__11148 = f;
    var G__11149 = g;
    var G__11150 = h;
    var G__11151 = i;
    var G__11152 = j;
    var G__11153 = k;
    var G__11154 = l;
    var G__11155 = m;
    var G__11156 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156) : self__.dispatch_fn.call(null, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11157 = a;
  var G__11158 = b;
  var G__11159 = c;
  var G__11160 = d;
  var G__11161 = e;
  var G__11162 = f;
  var G__11163 = g;
  var G__11164 = h;
  var G__11165 = i;
  var G__11166 = j;
  var G__11167 = k;
  var G__11168 = l;
  var G__11169 = m;
  var G__11170 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170) : target_fn.call(null, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169, G__11170);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11171 = a;
    var G__11172 = b;
    var G__11173 = c;
    var G__11174 = d;
    var G__11175 = e;
    var G__11176 = f;
    var G__11177 = g;
    var G__11178 = h;
    var G__11179 = i;
    var G__11180 = j;
    var G__11181 = k;
    var G__11182 = l;
    var G__11183 = m;
    var G__11184 = n;
    var G__11185 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184, G__11185) : self__.dispatch_fn.call(null, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184, G__11185);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11186 = a;
  var G__11187 = b;
  var G__11188 = c;
  var G__11189 = d;
  var G__11190 = e;
  var G__11191 = f;
  var G__11192 = g;
  var G__11193 = h;
  var G__11194 = i;
  var G__11195 = j;
  var G__11196 = k;
  var G__11197 = l;
  var G__11198 = m;
  var G__11199 = n;
  var G__11200 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200) : target_fn.call(null, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11201 = a;
    var G__11202 = b;
    var G__11203 = c;
    var G__11204 = d;
    var G__11205 = e;
    var G__11206 = f;
    var G__11207 = g;
    var G__11208 = h;
    var G__11209 = i;
    var G__11210 = j;
    var G__11211 = k;
    var G__11212 = l;
    var G__11213 = m;
    var G__11214 = n;
    var G__11215 = o;
    var G__11216 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216) : self__.dispatch_fn.call(null, G__11201, G__11202, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11217 = a;
  var G__11218 = b;
  var G__11219 = c;
  var G__11220 = d;
  var G__11221 = e;
  var G__11222 = f;
  var G__11223 = g;
  var G__11224 = h;
  var G__11225 = i;
  var G__11226 = j;
  var G__11227 = k;
  var G__11228 = l;
  var G__11229 = m;
  var G__11230 = n;
  var G__11231 = o;
  var G__11232 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11217, G__11218, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232) : target_fn.call(null, G__11217, G__11218, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11233 = a;
    var G__11234 = b;
    var G__11235 = c;
    var G__11236 = d;
    var G__11237 = e;
    var G__11238 = f;
    var G__11239 = g;
    var G__11240 = h;
    var G__11241 = i;
    var G__11242 = j;
    var G__11243 = k;
    var G__11244 = l;
    var G__11245 = m;
    var G__11246 = n;
    var G__11247 = o;
    var G__11248 = p;
    var G__11249 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249) : self__.dispatch_fn.call(null, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241, G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11250 = a;
  var G__11251 = b;
  var G__11252 = c;
  var G__11253 = d;
  var G__11254 = e;
  var G__11255 = f;
  var G__11256 = g;
  var G__11257 = h;
  var G__11258 = i;
  var G__11259 = j;
  var G__11260 = k;
  var G__11261 = l;
  var G__11262 = m;
  var G__11263 = n;
  var G__11264 = o;
  var G__11265 = p;
  var G__11266 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266) : target_fn.call(null, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11267 = a;
    var G__11268 = b;
    var G__11269 = c;
    var G__11270 = d;
    var G__11271 = e;
    var G__11272 = f;
    var G__11273 = g;
    var G__11274 = h;
    var G__11275 = i;
    var G__11276 = j;
    var G__11277 = k;
    var G__11278 = l;
    var G__11279 = m;
    var G__11280 = n;
    var G__11281 = o;
    var G__11282 = p;
    var G__11283 = q;
    var G__11284 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277, G__11278, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284) : self__.dispatch_fn.call(null, G__11267, G__11268, G__11269, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277, G__11278, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11285 = a;
  var G__11286 = b;
  var G__11287 = c;
  var G__11288 = d;
  var G__11289 = e;
  var G__11290 = f;
  var G__11291 = g;
  var G__11292 = h;
  var G__11293 = i;
  var G__11294 = j;
  var G__11295 = k;
  var G__11296 = l;
  var G__11297 = m;
  var G__11298 = n;
  var G__11299 = o;
  var G__11300 = p;
  var G__11301 = q;
  var G__11302 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301, G__11302) : target_fn.call(null, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301, G__11302);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11303 = a;
    var G__11304 = b;
    var G__11305 = c;
    var G__11306 = d;
    var G__11307 = e;
    var G__11308 = f;
    var G__11309 = g;
    var G__11310 = h;
    var G__11311 = i;
    var G__11312 = j;
    var G__11313 = k;
    var G__11314 = l;
    var G__11315 = m;
    var G__11316 = n;
    var G__11317 = o;
    var G__11318 = p;
    var G__11319 = q;
    var G__11320 = r;
    var G__11321 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321) : self__.dispatch_fn.call(null, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314, G__11315, G__11316, G__11317, G__11318, G__11319, 
    G__11320, G__11321);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11322 = a;
  var G__11323 = b;
  var G__11324 = c;
  var G__11325 = d;
  var G__11326 = e;
  var G__11327 = f;
  var G__11328 = g;
  var G__11329 = h;
  var G__11330 = i;
  var G__11331 = j;
  var G__11332 = k;
  var G__11333 = l;
  var G__11334 = m;
  var G__11335 = n;
  var G__11336 = o;
  var G__11337 = p;
  var G__11338 = q;
  var G__11339 = r;
  var G__11340 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340) : target_fn.call(null, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11341 = a;
    var G__11342 = b;
    var G__11343 = c;
    var G__11344 = d;
    var G__11345 = e;
    var G__11346 = f;
    var G__11347 = g;
    var G__11348 = h;
    var G__11349 = i;
    var G__11350 = j;
    var G__11351 = k;
    var G__11352 = l;
    var G__11353 = m;
    var G__11354 = n;
    var G__11355 = o;
    var G__11356 = p;
    var G__11357 = q;
    var G__11358 = r;
    var G__11359 = s;
    var G__11360 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360) : self__.dispatch_fn.call(null, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353, G__11354, G__11355, G__11356, 
    G__11357, G__11358, G__11359, G__11360);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11361 = a;
  var G__11362 = b;
  var G__11363 = c;
  var G__11364 = d;
  var G__11365 = e;
  var G__11366 = f;
  var G__11367 = g;
  var G__11368 = h;
  var G__11369 = i;
  var G__11370 = j;
  var G__11371 = k;
  var G__11372 = l;
  var G__11373 = m;
  var G__11374 = n;
  var G__11375 = o;
  var G__11376 = p;
  var G__11377 = q;
  var G__11378 = r;
  var G__11379 = s;
  var G__11380 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379, G__11380) : target_fn.call(null, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379, 
  G__11380);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11382 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11382);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4363__auto__, writer__4364__auto__, opt__4365__auto__) {
  return cljs.core._write(writer__4364__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__11387 = msg;
      return Error(G__11387);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11392 = x;
      var G__11393 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11392, G__11393) : pred.call(null, G__11392, G__11393);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11394 = y;
        var G__11395 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11394, G__11395) : pred.call(null, G__11394, G__11395);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("hf_cljs.core");
goog.require("cljs.core");
hf_cljs.core.wake_up_user = function wake_up_user() {
  return alert("Are you going to stare at this boring page forever?");
};
setTimeout(hf_cljs.core.wake_up_user, 5E3);
